{
    "sourceFile": "src/pages/Dashboard/AdminDashboard.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1761638053836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1761638139509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,13 @@\n import { Card } from '../../components/Card';\r\n import { Button } from '../../components/Button';\r\n import { useApp } from '../../context/AppContext';\r\n import { \r\n-  TrendingUp, \r\n   Package, \r\n   MapPin,\r\n   Users,\r\n   BarChart3,\r\n-  DollarSign,\r\n   Activity,\r\n-  AlertCircle,\r\n   CheckCircle,\r\n   Clock,\r\n   RefreshCw,\r\n } from 'lucide-react';\r\n@@ -40,17 +37,18 @@\n \r\n   // Packaging aggregates parsed from notes: \"boxes:X|basins:Y|smallSacks:Z\"\r\n   const packagingTotals = useMemo(() => {\r\n     let boxes = 0, basins = 0, smallSacks = 0;\r\n-    for (const p of packages) {\r\n-      if (!p.notes) continue;\r\n+    for (const p of packages || []) {\r\n+      if (!p || !p.notes) continue;\r\n       const parts = String(p.notes).split('|');\r\n       for (const part of parts) {\r\n-        const [k, v] = part.split(':');\r\n-        const val = Number(v || 0) || 0;\r\n-        if (k === 'boxes') boxes += val;\r\n-        if (k === 'basins') basins += val;\r\n-        if (k === 'smallSacks') smallSacks += val;\r\n+        const [k, v] = (part || '').split(':');\r\n+        const val = Number(v);\r\n+        const safeVal = Number.isFinite(val) ? val : 0;\r\n+        if (k === 'boxes') boxes += safeVal;\r\n+        if (k === 'basins') basins += safeVal;\r\n+        if (k === 'smallSacks') smallSacks += safeVal;\r\n       }\r\n     }\r\n     return { boxes, basins, smallSacks };\r\n   }, [packages]);\r\n@@ -68,22 +66,24 @@\n     return STATIONS.map(s => {\r\n       const usedCodes = new Set<number>();\r\n       let todayCount = 0;\r\n       const today = new Date().toISOString().slice(0,10);\r\n-      for (const p of packages) {\r\n+      for (const p of packages || []) {\r\n+        if (!p) continue;\r\n         // Expect trackingNumber like \"Embu-25\"\r\n         const tn = String(p.trackingNumber || '');\r\n         const dash = tn.lastIndexOf('-');\r\n         if (dash === -1) continue;\r\n         const stationName = tn.slice(0, dash);\r\n-        const code = Number(tn.slice(dash + 1));\r\n-        if (stationName === s.name && !Number.isNaN(code) && code >= s.min && code <= s.max) {\r\n-          usedCodes.add(code);\r\n+        const codeNum = Number(tn.slice(dash + 1));\r\n+        if (stationName === s.name && Number.isFinite(codeNum) && codeNum >= s.min && codeNum <= s.max) {\r\n+          usedCodes.add(codeNum);\r\n           if (String(p.registeredAt || '').startsWith(today)) todayCount += 1;\r\n         }\r\n       }\r\n-      const rangeSize = s.max - s.min + 1;\r\n-      const percent = Math.round((usedCodes.size / rangeSize) * 100);\r\n+      const rangeSize = Math.max(1, s.max - s.min + 1);\r\n+      const percentRaw = (usedCodes.size / rangeSize) * 100;\r\n+      const percent = Math.max(0, Math.min(100, Math.round(percentRaw)));\r\n       return { ...s, used: usedCodes.size, percent, todayCount };\r\n     });\r\n   }, [packages]);\r\n \r\n@@ -197,9 +197,9 @@\n \r\n       {/* Stats Cards */}\r\n       <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-6\">\r\n         {statsCards.map((stat, index) => (\r\n-          <Card key={index} variant=\"enhanced\" padding=\"sm sm:md\" className=\"relative overflow-hidden\">\r\n+          <Card key={index} variant=\"enhanced\" padding=\"sm\" className=\"relative overflow-hidden\">\r\n             <div className={`absolute top-0 right-0 w-24 h-24 sm:w-32 sm:h-32 bg-gradient-to-br ${stat.bgPattern} rounded-bl-full opacity-50`}></div>\r\n             <div className=\"relative z-10\">\r\n               <div className=\"flex items-center justify-between mb-3\">\r\n                 <div className={`p-2 sm:p-3 rounded-lg ${stat.color} text-white`}>\r\n@@ -307,9 +307,9 @@\n                 <div className=\"font-medium text-gray-900 dark:text-gray-100 truncate\">{p.trackingNumber}</div>\r\n                 <div className=\"text-sm text-gray-600 dark:text-gray-400 truncate\">{p.recipientName} â€¢ {p.destination}</div>\r\n               </div>\r\n               <div className=\"text-xs text-gray-500 dark:text-gray-400 ml-3 whitespace-nowrap\">\r\n-                {new Date(p.registeredAt).toLocaleString()}\r\n+                {p.registeredAt ? new Date(p.registeredAt).toLocaleString() : 'N/A'}\r\n               </div>\r\n             </div>\r\n           ))}\r\n           {recentPackages.length === 0 && (\r\n"
                },
                {
                    "date": 1761650673498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useMemo, useState } from 'react';\r\n+import { useNavigate } from 'react-router-dom';\r\n import { Card } from '../../components/Card';\r\n import { Button } from '../../components/Button';\r\n import { useApp } from '../../context/AppContext';\r\n import { \r\n@@ -10,8 +11,9 @@\n   Activity,\r\n   CheckCircle,\r\n   Clock,\r\n   RefreshCw,\r\n+  Settings,\r\n } from 'lucide-react';\r\n \r\n export const AdminDashboard: React.FC = () => {\r\n   const { packages, pickupStations, users, areaCodes } = useApp();\r\n"
                },
                {
                    "date": 1761650680686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n } from 'lucide-react';\r\n \r\n export const AdminDashboard: React.FC = () => {\r\n   const { packages, pickupStations, users, areaCodes } = useApp();\r\n+  const navigate = useNavigate();\r\n   const [isRefreshing, setIsRefreshing] = useState(false);\r\n \r\n   // Calculate statistics\r\n   const totalUsers = users.length;\r\n"
                },
                {
                    "date": 1761650724606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,21 +326,39 @@\n         <h2 className=\"text-lg sm:text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n           Quick Actions\r\n         </h2>\r\n         <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-4\">\r\n-          <Button variant=\"default\" className=\"w-full\" onClick={() => window.location.href = '/users'}>\r\n-            Manage Users\r\n+          <Button variant=\"default\" className=\"w-full flex items-center justify-center gap-2\" onClick={() => navigate('/users')}>\r\n+            <Users className=\"h-5 w-5\" />\r\n+            <span>Manage Users</span>\r\n           </Button>\r\n-          <Button variant=\"default\" className=\"w-full\" onClick={() => window.location.href = '/stations'}>\r\n-            Manage Stations\r\n+          <Button variant=\"default\" className=\"w-full flex items-center justify-center gap-2\" onClick={() => navigate('/stations')}>\r\n+            <MapPin className=\"h-5 w-5\" />\r\n+            <span>Manage Stations</span>\r\n           </Button>\r\n-          <Button variant=\"default\" className=\"w-full\" onClick={() => window.location.href = '/area-codes'}>\r\n-            Manage Area Codes\r\n+          <Button variant=\"default\" className=\"w-full flex items-center justify-center gap-2\" onClick={() => navigate('/packages')}>\r\n+            <Package className=\"h-5 w-5\" />\r\n+            <span>Packages</span>\r\n           </Button>\r\n-          <Button variant=\"default\" className=\"w-full\" onClick={() => window.location.href = '/reports'}>\r\n-            View Reports\r\n+          <Button variant=\"default\" className=\"w-full flex items-center justify-center gap-2\" onClick={() => navigate('/reports')}>\r\n+            <BarChart3 className=\"h-5 w-5\" />\r\n+            <span>View Reports</span>\r\n           </Button>\r\n         </div>\r\n+        <div className=\"mt-4 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4\">\r\n+          <Button variant=\"outline\" className=\"w-full flex items-center justify-center gap-2\" onClick={() => navigate('/area-codes')}>\r\n+            <Settings className=\"h-5 w-5\" />\r\n+            <span>Area Codes</span>\r\n+          </Button>\r\n+          <Button variant=\"outline\" className=\"w-full flex items-center justify-center gap-2\" onClick={() => navigate('/register-package')}>\r\n+            <Package className=\"h-5 w-5\" />\r\n+            <span>Register Package</span>\r\n+          </Button>\r\n+          <Button variant=\"outline\" className=\"w-full flex items-center justify-center gap-2\" onClick={() => navigate('/settings')}>\r\n+            <Settings className=\"h-5 w-5\" />\r\n+            <span>Settings</span>\r\n+          </Button>\r\n+        </div>\r\n       </Card>\r\n \r\n       {/* Station Totals Overview */}\r\n       <Card variant=\"enhanced\" padding=\"lg\">\r\n"
                },
                {
                    "date": 1761812160222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,34 @@\n     }\r\n     return { boxes, basins, smallSacks };\r\n   }, [packages]);\r\n \r\n+  // Daily totals per station for boxes, basins, small sacks\r\n+  const dailyStationTotals = useMemo(() => {\r\n+    const today = new Date().toISOString().slice(0, 10); // YYYY-MM-DD\r\n+    const totals: Record<string, { boxes: number; basins: number; smallSacks: number }> = {};\r\n+    for (const s of pickupStations) {\r\n+      totals[s.name] = { boxes: 0, basins: 0, smallSacks: 0 };\r\n+    }\r\n+    for (const p of packages || []) {\r\n+      if (!p || !p.registeredAt || !String(p.registeredAt).startsWith(today)) continue;\r\n+      const stationName = p.station;\r\n+      const target = totals[stationName] || (totals[stationName] = { boxes: 0, basins: 0, smallSacks: 0 });\r\n+      if (!p.notes) continue;\r\n+      const parts = String(p.notes).split('|');\r\n+      for (const part of parts) {\r\n+        const [k, v] = (part || '').split(':');\r\n+        const val = Number(v);\r\n+        const safeVal = Number.isFinite(val) ? val : 0;\r\n+        if (k === 'boxes') target.boxes += safeVal;\r\n+        if (k === 'basins') target.basins += safeVal;\r\n+        if (k === 'smallSacks') target.smallSacks += safeVal;\r\n+      }\r\n+    }\r\n+    // Return array in station order\r\n+    return (pickupStations || []).map(s => ({ station: s.name, ...totals[s.name] }));\r\n+  }, [packages, pickupStations]);\r\n+\r\n   // Station code utilization based on fixed ranges and trackingNumber format Station-<code>\r\n   const STATIONS = [\r\n     { name: 'Embu', min: 1, max: 300 },\r\n     { name: 'Ugweri', min: 301, max: 600 },\r\n@@ -198,25 +224,25 @@\n         </Button>\r\n       </div>\r\n \r\n       {/* Stats Cards */}\r\n-      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-6\">\r\n+      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4 sm:gap-6\">\r\n         {statsCards.map((stat, index) => (\r\n-          <Card key={index} variant=\"enhanced\" padding=\"sm\" className=\"relative overflow-hidden\">\r\n+          <Card key={index} variant=\"enhanced\" padding=\"lg\" className=\"relative overflow-hidden min-h-[120px] sm:min-h-[100px]\">\r\n             <div className={`absolute top-0 right-0 w-24 h-24 sm:w-32 sm:h-32 bg-gradient-to-br ${stat.bgPattern} rounded-bl-full opacity-50`}></div>\r\n             <div className=\"relative z-10\">\r\n-              <div className=\"flex items-center justify-between mb-3\">\r\n-                <div className={`p-2 sm:p-3 rounded-lg ${stat.color} text-white`}>\r\n-                  <stat.icon className=\"h-5 w-5 sm:h-6 sm:w-6\" />\r\n+              <div className=\"flex items-center justify-between mb-2 sm:mb-3\">\r\n+                <div className={`p-4 rounded-xl ${stat.color} text-white`}>\r\n+                  <stat.icon className=\"h-8 w-8 sm:h-6 sm:w-6\" />\r\n                 </div>\r\n                 <div className={`text-xs sm:text-sm font-semibold ${stat.trendColor}`}>\r\n                   {stat.trend}\r\n                 </div>\r\n               </div>\r\n-              <h3 className=\"text-xs sm:text-sm font-medium text-gray-600 dark:text-gray-400 mb-1\">\r\n+              <h3 className=\"text-base sm:text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1\">\r\n                 {stat.title}\r\n               </h3>\r\n-              <p className=\"text-2xl sm:text-3xl font-bold text-gray-900 dark:text-gray-100\">\r\n+              <p className=\"text-4xl sm:text-3xl font-extrabold text-gray-900 dark:text-gray-100\">\r\n                 {stat.value}\r\n               </p>\r\n               <p className=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n                 {stat.description}\r\n@@ -252,8 +278,44 @@\n           ))}\r\n         </div>\r\n       </Card>\r\n \r\n+      {/* Daily Totals per Station */}\r\n+      <Card variant=\"enhanced\" padding=\"lg\">\r\n+        <h2 className=\"text-lg sm:text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n+          Today totals per station\r\n+        </h2>\r\n+        <div className=\"overflow-x-auto\">\r\n+          <table className=\"min-w-full\">\r\n+            <thead>\r\n+              <tr className=\"text-left text-sm text-gray-600 dark:text-gray-300\">\r\n+                <th className=\"py-2 pr-4\">Station</th>\r\n+                <th className=\"py-2 pr-4\">Boxes</th>\r\n+                <th className=\"py-2 pr-4\">Basins</th>\r\n+                <th className=\"py-2 pr-4\">Small Sacks</th>\r\n+                <th className=\"py-2 pr-4\">Total Items</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {dailyStationTotals.map(r => (\r\n+                <tr key={r.station} className=\"border-t border-gray-200 dark:border-gray-700 text-sm\">\r\n+                  <td className=\"py-2 pr-4 font-medium\">{r.station}</td>\r\n+                  <td className=\"py-2 pr-4\">{r.boxes}</td>\r\n+                  <td className=\"py-2 pr-4\">{r.basins}</td>\r\n+                  <td className=\"py-2 pr-4\">{r.smallSacks}</td>\r\n+                  <td className=\"py-2 pr-4 font-semibold\">{r.boxes + r.basins + r.smallSacks}</td>\r\n+                </tr>\r\n+              ))}\r\n+              {dailyStationTotals.length === 0 && (\r\n+                <tr>\r\n+                  <td colSpan={5} className=\"py-6 text-center text-gray-500 dark:text-gray-400\">No entries for today</td>\r\n+                </tr>\r\n+              )}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+      </Card>\r\n+\r\n       {/* Packaging Totals */}\r\n       <Card variant=\"enhanced\" padding=\"lg\">\r\n         <h2 className=\"text-lg sm:text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n           Aggregated Packaging Totals\r\n"
                },
                {
                    "date": 1761812536289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,23 +226,23 @@\n \r\n       {/* Stats Cards */}\r\n       <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4 sm:gap-6\">\r\n         {statsCards.map((stat, index) => (\r\n-          <Card key={index} variant=\"enhanced\" padding=\"lg\" className=\"relative overflow-hidden min-h-[120px] sm:min-h-[100px]\">\r\n+          <Card key={index} variant=\"enhanced\" padding=\"sm\" className=\"relative overflow-hidden\">\r\n             <div className={`absolute top-0 right-0 w-24 h-24 sm:w-32 sm:h-32 bg-gradient-to-br ${stat.bgPattern} rounded-bl-full opacity-50`}></div>\r\n             <div className=\"relative z-10\">\r\n-              <div className=\"flex items-center justify-between mb-2 sm:mb-3\">\r\n-                <div className={`p-4 rounded-xl ${stat.color} text-white`}>\r\n-                  <stat.icon className=\"h-8 w-8 sm:h-6 sm:w-6\" />\r\n+              <div className=\"flex items-center justify-between mb-3\">\r\n+                <div className={`p-2 sm:p-3 rounded-lg ${stat.color} text-white`}>\r\n+                  <stat.icon className=\"h-5 w-5 sm:h-6 sm:w-6\" />\r\n                 </div>\r\n                 <div className={`text-xs sm:text-sm font-semibold ${stat.trendColor}`}>\r\n                   {stat.trend}\r\n                 </div>\r\n               </div>\r\n-              <h3 className=\"text-base sm:text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1\">\r\n+              <h3 className=\"text-xs sm:text-sm font-medium text-gray-600 dark:text-gray-400 mb-1\">\r\n                 {stat.title}\r\n               </h3>\r\n-              <p className=\"text-4xl sm:text-3xl font-extrabold text-gray-900 dark:text-gray-100\">\r\n+              <p className=\"text-2xl sm:text-3xl font-bold text-gray-900 dark:text-gray-100\">\r\n                 {stat.value}\r\n               </p>\r\n               <p className=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n                 {stat.description}\r\n"
                },
                {
                    "date": 1761910422472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -366,17 +366,21 @@\n           Recent Registrations\r\n         </h2>\r\n         <div className=\"space-y-3\">\r\n           {recentPackages.map(p => (\r\n-            <div key={p.id} className=\"p-3 rounded-lg bg-gray-50 dark:bg-gray-800 flex items-center justify-between\">\r\n+            <button\r\n+              key={p.id}\r\n+              onClick={() => navigate('/registrations')}\r\n+              className=\"w-full p-3 rounded-lg bg-gray-50 dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center justify-between transition-colors text-left\"\r\n+            >\r\n               <div className=\"min-w-0\">\r\n                 <div className=\"font-medium text-gray-900 dark:text-gray-100 truncate\">{p.trackingNumber}</div>\r\n                 <div className=\"text-sm text-gray-600 dark:text-gray-400 truncate\">{p.recipientName} â€¢ {p.destination}</div>\r\n               </div>\r\n               <div className=\"text-xs text-gray-500 dark:text-gray-400 ml-3 whitespace-nowrap\">\r\n                 {p.registeredAt ? new Date(p.registeredAt).toLocaleString() : 'N/A'}\r\n               </div>\r\n-            </div>\r\n+            </button>\r\n           ))}\r\n           {recentPackages.length === 0 && (\r\n             <p className=\"text-center text-gray-500 dark:text-gray-400 py-6\">No recent registrations</p>\r\n           )}\r\n"
                }
            ],
            "date": 1761638053836,
            "name": "Commit-0",
            "content": "import React, { useMemo, useState } from 'react';\r\nimport { Card } from '../../components/Card';\r\nimport { Button } from '../../components/Button';\r\nimport { useApp } from '../../context/AppContext';\r\nimport { \r\n  TrendingUp, \r\n  Package, \r\n  MapPin,\r\n  Users,\r\n  BarChart3,\r\n  DollarSign,\r\n  Activity,\r\n  AlertCircle,\r\n  CheckCircle,\r\n  Clock,\r\n  RefreshCw,\r\n} from 'lucide-react';\r\n\r\nexport const AdminDashboard: React.FC = () => {\r\n  const { packages, pickupStations, users, areaCodes } = useApp();\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n\r\n  // Calculate statistics\r\n  const totalUsers = users.length;\r\n  const activeUsers = users.filter(u => u.status === 'active').length;\r\n  const totalPackages = packages.length;\r\n  const registeredPackages = packages.filter(p => p.status === 'registered').length;\r\n  const inTransitPackages = packages.filter(p => p.status === 'in-transit').length;\r\n  const deliveredPackages = packages.filter(p => p.status === 'delivered').length;\r\n  const totalStations = pickupStations.length;\r\n  const activeStations = pickupStations.filter(s => s.status === 'active').length;\r\n  const totalAreaCodes = areaCodes.length;\r\n  const activeAreaCodes = areaCodes.filter(a => a.status === 'active').length;\r\n\r\n  // Calculate station totals\r\n  const totalStationCapacity = pickupStations.reduce((sum, station) => sum + (station.capacity || 0), 0);\r\n  const totalCurrentInventory = pickupStations.reduce((sum, station) => sum + (station.currentInventory || 0), 0);\r\n  const totalAvailableCapacity = totalStationCapacity - totalCurrentInventory;\r\n  const utilizationRate = totalStationCapacity > 0 ? Math.round((totalCurrentInventory / totalStationCapacity) * 100) : 0;\r\n\r\n  // Packaging aggregates parsed from notes: \"boxes:X|basins:Y|smallSacks:Z\"\r\n  const packagingTotals = useMemo(() => {\r\n    let boxes = 0, basins = 0, smallSacks = 0;\r\n    for (const p of packages) {\r\n      if (!p.notes) continue;\r\n      const parts = String(p.notes).split('|');\r\n      for (const part of parts) {\r\n        const [k, v] = part.split(':');\r\n        const val = Number(v || 0) || 0;\r\n        if (k === 'boxes') boxes += val;\r\n        if (k === 'basins') basins += val;\r\n        if (k === 'smallSacks') smallSacks += val;\r\n      }\r\n    }\r\n    return { boxes, basins, smallSacks };\r\n  }, [packages]);\r\n\r\n  // Station code utilization based on fixed ranges and trackingNumber format Station-<code>\r\n  const STATIONS = [\r\n    { name: 'Embu', min: 1, max: 300 },\r\n    { name: 'Ugweri', min: 301, max: 600 },\r\n    { name: 'Meka', min: 601, max: 900 },\r\n    { name: 'Ena', min: 901, max: 1000 },\r\n    { name: 'Gachuriri', min: 1001, max: 1100 },\r\n  ] as const;\r\n\r\n  const stationUtilization = useMemo(() => {\r\n    return STATIONS.map(s => {\r\n      const usedCodes = new Set<number>();\r\n      let todayCount = 0;\r\n      const today = new Date().toISOString().slice(0,10);\r\n      for (const p of packages) {\r\n        // Expect trackingNumber like \"Embu-25\"\r\n        const tn = String(p.trackingNumber || '');\r\n        const dash = tn.lastIndexOf('-');\r\n        if (dash === -1) continue;\r\n        const stationName = tn.slice(0, dash);\r\n        const code = Number(tn.slice(dash + 1));\r\n        if (stationName === s.name && !Number.isNaN(code) && code >= s.min && code <= s.max) {\r\n          usedCodes.add(code);\r\n          if (String(p.registeredAt || '').startsWith(today)) todayCount += 1;\r\n        }\r\n      }\r\n      const rangeSize = s.max - s.min + 1;\r\n      const percent = Math.round((usedCodes.size / rangeSize) * 100);\r\n      return { ...s, used: usedCodes.size, percent, todayCount };\r\n    });\r\n  }, [packages]);\r\n\r\n  // Recent registrations feed\r\n  const recentPackages = useMemo(() => {\r\n    return [...packages]\r\n      .sort((a,b) => String(b.registeredAt).localeCompare(String(a.registeredAt)))\r\n      .slice(0,8);\r\n  }, [packages]);\r\n\r\n  const handleRefresh = async () => {\r\n    setIsRefreshing(true);\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n    } finally {\r\n      setIsRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const statsCards = [\r\n    {\r\n      title: 'Total Packages',\r\n      value: totalPackages.toString(),\r\n      icon: Package,\r\n      color: 'bg-navy-500',\r\n      trend: '+12%',\r\n      trendColor: 'text-navy-700',\r\n      description: 'All registered packages',\r\n      bgPattern: 'from-navy-400/20 to-navy-600/20'\r\n    },\r\n    {\r\n      title: 'Active Users',\r\n      value: `${activeUsers}/${totalUsers}`,\r\n      icon: Users,\r\n      color: 'bg-eco-500',\r\n      trend: '+3',\r\n      trendColor: 'text-eco-700',\r\n      description: 'Active staff members',\r\n      bgPattern: 'from-eco-400/20 to-eco-600/20'\r\n    },\r\n    {\r\n      title: 'Pickup Stations',\r\n      value: `${activeStations}/${totalStations}`,\r\n      icon: MapPin,\r\n      color: 'bg-signal-400',\r\n      trend: '+1',\r\n      trendColor: 'text-signal-600',\r\n      description: 'Active stations',\r\n      bgPattern: 'from-signal-300/20 to-signal-500/20'\r\n    },\r\n    {\r\n      title: 'Area Codes',\r\n      value: `${activeAreaCodes}/${totalAreaCodes}`,\r\n      icon: BarChart3,\r\n      color: 'bg-mint-400',\r\n      trend: 'Active',\r\n      trendColor: 'text-mint-700',\r\n      description: 'Configured codes',\r\n      bgPattern: 'from-mint-200/20 to-mint-400/20'\r\n    }\r\n  ];\r\n\r\n  const statusStats = [\r\n    {\r\n      status: 'registered',\r\n      count: registeredPackages,\r\n      icon: Clock,\r\n      color: 'text-blue-600',\r\n      bgColor: 'bg-blue-100 dark:bg-blue-900/20',\r\n      percentage: totalPackages > 0 ? Math.round((registeredPackages / totalPackages) * 100) : 0\r\n    },\r\n    {\r\n      status: 'in-transit',\r\n      count: inTransitPackages,\r\n      icon: Activity,\r\n      color: 'text-yellow-600',\r\n      bgColor: 'bg-yellow-100 dark:bg-yellow-900/20',\r\n      percentage: totalPackages > 0 ? Math.round((inTransitPackages / totalPackages) * 100) : 0\r\n    },\r\n    {\r\n      status: 'delivered',\r\n      count: deliveredPackages,\r\n      icon: CheckCircle,\r\n      color: 'text-green-600',\r\n      bgColor: 'bg-green-100 dark:bg-green-900/20',\r\n      percentage: totalPackages > 0 ? Math.round((deliveredPackages / totalPackages) * 100) : 0\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n        <div>\r\n          <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-900 dark:text-gray-100\">\r\n            Admin Dashboard\r\n          </h1>\r\n          <p className=\"text-sm sm:text-base text-gray-600 dark:text-gray-400 mt-1\">\r\n            Real-time statistics and system overview\r\n          </p>\r\n        </div>\r\n        <Button\r\n          onClick={handleRefresh}\r\n          disabled={isRefreshing}\r\n          className=\"w-full sm:w-auto flex items-center justify-center space-x-2\"\r\n        >\r\n          <RefreshCw className={`h-4 w-4 ${isRefreshing ? 'animate-spin' : ''}`} />\r\n          <span>Refresh</span>\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-6\">\r\n        {statsCards.map((stat, index) => (\r\n          <Card key={index} variant=\"enhanced\" padding=\"sm sm:md\" className=\"relative overflow-hidden\">\r\n            <div className={`absolute top-0 right-0 w-24 h-24 sm:w-32 sm:h-32 bg-gradient-to-br ${stat.bgPattern} rounded-bl-full opacity-50`}></div>\r\n            <div className=\"relative z-10\">\r\n              <div className=\"flex items-center justify-between mb-3\">\r\n                <div className={`p-2 sm:p-3 rounded-lg ${stat.color} text-white`}>\r\n                  <stat.icon className=\"h-5 w-5 sm:h-6 sm:w-6\" />\r\n                </div>\r\n                <div className={`text-xs sm:text-sm font-semibold ${stat.trendColor}`}>\r\n                  {stat.trend}\r\n                </div>\r\n              </div>\r\n              <h3 className=\"text-xs sm:text-sm font-medium text-gray-600 dark:text-gray-400 mb-1\">\r\n                {stat.title}\r\n              </h3>\r\n              <p className=\"text-2xl sm:text-3xl font-bold text-gray-900 dark:text-gray-100\">\r\n                {stat.value}\r\n              </p>\r\n              <p className=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n                {stat.description}\r\n              </p>\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Package Status Overview */}\r\n      <Card variant=\"enhanced\" padding=\"lg\">\r\n        <h2 className=\"text-lg sm:text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n          Package Status Overview\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n          {statusStats.map((stat, index) => (\r\n            <div key={index} className={`p-4 rounded-lg ${stat.bgColor}`}>\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <stat.icon className={`h-5 w-5 sm:h-6 sm:w-6 ${stat.color}`} />\r\n                <span className=\"text-xs sm:text-sm font-semibold text-gray-600 dark:text-gray-400 capitalize\">\r\n                  {stat.status}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-baseline space-x-2\">\r\n                <p className={`text-2xl sm:text-3xl font-bold ${stat.color}`}>\r\n                  {stat.count}\r\n                </p>\r\n                <span className=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400\">\r\n                  ({stat.percentage}%)\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Packaging Totals */}\r\n      <Card variant=\"enhanced\" padding=\"lg\">\r\n        <h2 className=\"text-lg sm:text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n          Aggregated Packaging Totals\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n          <div className=\"p-4 rounded-lg bg-navy-50 dark:bg-navy-900/20 border border-navy-200 dark:border-navy-800\">\r\n            <div className=\"text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1\">Boxes</div>\r\n            <div className=\"text-2xl font-bold text-navy-700 dark:text-navy-300\">{packagingTotals.boxes}</div>\r\n          </div>\r\n          <div className=\"p-4 rounded-lg bg-mint-50 dark:bg-mint-900/20 border border-mint-200 dark:border-mint-800\">\r\n            <div className=\"text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1\">Basins</div>\r\n            <div className=\"text-2xl font-bold text-mint-700 dark:text-mint-300\">{packagingTotals.basins}</div>\r\n          </div>\r\n          <div className=\"p-4 rounded-lg bg-signal-50 dark:bg-signal-900/20 border border-signal-200 dark:border-signal-800\">\r\n            <div className=\"text-sm font-semibold text-gray-600 dark:text-gray-400 mb-1\">Small Sacks</div>\r\n            <div className=\"text-2xl font-bold text-signal-700 dark:text-signal-300\">{packagingTotals.smallSacks}</div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Station Code Utilization */}\r\n      <Card variant=\"enhanced\" padding=\"lg\">\r\n        <h2 className=\"text-lg sm:text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n          Station Code Utilization\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n          {stationUtilization.map((s) => (\r\n            <div key={s.name} className=\"p-4 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"font-semibold text-gray-900 dark:text-gray-100\">{s.name}</div>\r\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">{s.min}-{s.max}</div>\r\n              </div>\r\n              <div className=\"mt-2 h-2 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\r\n                <div className=\"h-full bg-eco-500\" style={{ width: `${s.percent}%` }} />\r\n              </div>\r\n              <div className=\"mt-2 text-sm text-gray-700 dark:text-gray-300\">\r\n                Used: <span className=\"font-semibold\">{s.used}</span> â€¢ <span className=\"font-semibold\">{s.percent}%</span>\r\n              </div>\r\n              <div className=\"text-xs text-gray-500 dark:text-gray-400\">Today: {s.todayCount}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Recent Registrations */}\r\n      <Card variant=\"enhanced\" padding=\"lg\">\r\n        <h2 className=\"text-lg sm:text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n          Recent Registrations\r\n        </h2>\r\n        <div className=\"space-y-3\">\r\n          {recentPackages.map(p => (\r\n            <div key={p.id} className=\"p-3 rounded-lg bg-gray-50 dark:bg-gray-800 flex items-center justify-between\">\r\n              <div className=\"min-w-0\">\r\n                <div className=\"font-medium text-gray-900 dark:text-gray-100 truncate\">{p.trackingNumber}</div>\r\n                <div className=\"text-sm text-gray-600 dark:text-gray-400 truncate\">{p.recipientName} â€¢ {p.destination}</div>\r\n              </div>\r\n              <div className=\"text-xs text-gray-500 dark:text-gray-400 ml-3 whitespace-nowrap\">\r\n                {new Date(p.registeredAt).toLocaleString()}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {recentPackages.length === 0 && (\r\n            <p className=\"text-center text-gray-500 dark:text-gray-400 py-6\">No recent registrations</p>\r\n          )}\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Quick Actions */}\r\n      <Card variant=\"enhanced\" padding=\"lg\">\r\n        <h2 className=\"text-lg sm:text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n          Quick Actions\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-4\">\r\n          <Button variant=\"default\" className=\"w-full\" onClick={() => window.location.href = '/users'}>\r\n            Manage Users\r\n          </Button>\r\n          <Button variant=\"default\" className=\"w-full\" onClick={() => window.location.href = '/stations'}>\r\n            Manage Stations\r\n          </Button>\r\n          <Button variant=\"default\" className=\"w-full\" onClick={() => window.location.href = '/area-codes'}>\r\n            Manage Area Codes\r\n          </Button>\r\n          <Button variant=\"default\" className=\"w-full\" onClick={() => window.location.href = '/reports'}>\r\n            View Reports\r\n          </Button>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Station Totals Overview */}\r\n      <Card variant=\"enhanced\" padding=\"lg\">\r\n        <h2 className=\"text-lg sm:text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n          Station Capacity Overview\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n          <div className=\"p-4 rounded-lg bg-navy-50 dark:bg-navy-900/20 border border-navy-200 dark:border-navy-800\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <MapPin className=\"h-5 w-5 sm:h-6 sm:w-6 text-navy-600\" />\r\n              <span className=\"text-xs sm:text-sm font-semibold text-gray-600 dark:text-gray-400\">\r\n                Total Stations\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-baseline space-x-2\">\r\n              <p className=\"text-2xl sm:text-3xl font-bold text-navy-600\">\r\n                {totalStations}\r\n              </p>\r\n              <span className=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400\">\r\n                Active: {activeStations}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-4 rounded-lg bg-eco-50 dark:bg-eco-900/20 border border-eco-200 dark:border-eco-800\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <Package className=\"h-5 w-5 sm:h-6 sm:w-6 text-eco-600\" />\r\n              <span className=\"text-xs sm:text-sm font-semibold text-gray-600 dark:text-gray-400\">\r\n                Total Capacity\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-baseline space-x-2\">\r\n              <p className=\"text-2xl sm:text-3xl font-bold text-eco-600\">\r\n                {totalStationCapacity}\r\n              </p>\r\n              <span className=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400\">\r\n                Units\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-4 rounded-lg bg-signal-50 dark:bg-signal-900/20 border border-signal-200 dark:border-signal-800\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <Activity className=\"h-5 w-5 sm:h-6 sm:w-6 text-signal-600\" />\r\n              <span className=\"text-xs sm:text-sm font-semibold text-gray-600 dark:text-gray-400\">\r\n                Current Inventory\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-baseline space-x-2\">\r\n              <p className=\"text-2xl sm:text-3xl font-bold text-signal-600\">\r\n                {totalCurrentInventory}\r\n              </p>\r\n              <span className=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400\">\r\n                ({utilizationRate}%)\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-4 rounded-lg bg-mint-50 dark:bg-mint-900/20 border border-mint-200 dark:border-mint-800\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <CheckCircle className=\"h-5 w-5 sm:h-6 sm:w-6 text-mint-600\" />\r\n              <span className=\"text-xs sm:text-sm font-semibold text-gray-600 dark:text-gray-400\">\r\n                Available Space\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-baseline space-x-2\">\r\n              <p className=\"text-2xl sm:text-3xl font-bold text-mint-600\">\r\n                {totalAvailableCapacity}\r\n              </p>\r\n              <span className=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400\">\r\n                Units\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\n"
        }
    ]
}