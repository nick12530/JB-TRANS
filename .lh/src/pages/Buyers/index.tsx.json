{
    "sourceFile": "src/pages/Buyers/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1759904107252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759904134857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n     taxCertificate: boolean;\r\n   };\r\n }\r\n \r\n-export const BuyersManagementPage: React.FC = () => {\r\n+export const BuyersPage: React.FC = () => {\r\n   const { user, sourceRecords } = useApp();\r\n   const [isModalOpen, setIsModalOpen] = useState(false);\r\n   const [editingBuyer, setEditingBuyer] = useState<Buyer | null>(null);\r\n   const [selectedBuyer, setSelectedBuyer] = useState<Buyer | null>(null);\r\n"
                },
                {
                    "date": 1759904223059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,31 +8,17 @@\n import { formatDate, formatCurrency } from '../../utils/helpers';\r\n import { \r\n   Users, \r\n   Plus, \r\n-  Edit, \r\n-  Trash2, \r\n   Eye, \r\n   Search, \r\n   Filter, \r\n   Download, \r\n-  TrendingUp, \r\n-  TrendingDown, \r\n-  MapPin, \r\n-  Phone, \r\n-  Mail, \r\n-  Calendar, \r\n-  Package, \r\n   DollarSign, \r\n   Star, \r\n   AlertCircle, \r\n   CheckCircle, \r\n-  Clock,\r\n-  Building,\r\n-  User,\r\n-  ShoppingCart,\r\n-  CreditCard,\r\n-  FileText\r\n+  CreditCard\r\n } from 'lucide-react';\r\n \r\n interface Buyer {\r\n   id: string;\r\n"
                },
                {
                    "date": 1759904343522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,8 @@\n import { formatDate, formatCurrency } from '../../utils/helpers';\r\n import { \r\n   Users, \r\n   Plus, \r\n-  Eye, \r\n   Search, \r\n   Filter, \r\n   Download, \r\n   DollarSign, \r\n@@ -56,12 +55,11 @@\n   };\r\n }\r\n \r\n export const BuyersPage: React.FC = () => {\r\n-  const { user, sourceRecords } = useApp();\r\n+  const { user } = useApp();\r\n   const [isModalOpen, setIsModalOpen] = useState(false);\r\n   const [editingBuyer, setEditingBuyer] = useState<Buyer | null>(null);\r\n-  const [selectedBuyer, setSelectedBuyer] = useState<Buyer | null>(null);\r\n   const [isViewModalOpen, setIsViewModalOpen] = useState(false);\r\n   \r\n   // Filter states\r\n   const [filters, setFilters] = useState({\r\n@@ -268,13 +266,8 @@\n     setIsModalOpen(false);\r\n     resetForm();\r\n   };\r\n \r\n-  const handleViewBuyer = (buyer: Buyer) => {\r\n-    setSelectedBuyer(buyer);\r\n-    setIsViewModalOpen(true);\r\n-  };\r\n-\r\n   const handleSubmit = (e: React.FormEvent) => {\r\n     e.preventDefault();\r\n     \r\n     const now = new Date().toISOString();\r\n@@ -308,16 +301,8 @@\n       setBuyers(buyers.filter((b) => b.id !== buyer.id));\r\n     }\r\n   };\r\n \r\n-  const handleStatusChange = (buyerId: string, newStatus: Buyer['status']) => {\r\n-    setBuyers(\r\n-      buyers.map((buyer) =>\r\n-        buyer.id === buyerId ? { ...buyer, status: newStatus } : buyer\r\n-      )\r\n-    );\r\n-  };\r\n-\r\n   // Filter buyers\r\n   const filteredBuyers = useMemo(() => {\r\n     return buyers.filter((buyer) => {\r\n       const matchesSearch = filters.search === '' || \r\n@@ -616,27 +601,8 @@\n           columns={columns}\r\n           onEdit={handleOpenModal}\r\n           onDelete={handleDelete}\r\n           emptyMessage=\"No buyers found matching the current filters.\"\r\n-          actions={[\r\n-            {\r\n-              label: 'View',\r\n-              icon: Eye,\r\n-              onClick: handleViewBuyer,\r\n-            },\r\n-            {\r\n-              label: 'Activate',\r\n-              icon: CheckCircle,\r\n-              onClick: (buyer: Buyer) => handleStatusChange(buyer.id, 'active'),\r\n-              condition: (buyer: Buyer) => buyer.status !== 'active',\r\n-            },\r\n-            {\r\n-              label: 'Suspend',\r\n-              icon: AlertCircle,\r\n-              onClick: (buyer: Buyer) => handleStatusChange(buyer.id, 'suspended'),\r\n-              condition: (buyer: Buyer) => buyer.status === 'active',\r\n-            },\r\n-          ]}\r\n         />\r\n       </Card>\r\n \r\n       {/* Add/Edit Modal */}\r\n@@ -900,213 +866,7 @@\n           </div>\r\n         </form>\r\n       </Modal>\r\n \r\n-      {/* View Modal */}\r\n-      <Modal\r\n-        isOpen={isViewModalOpen}\r\n-        onClose={() => setIsViewModalOpen(false)}\r\n-        title=\"Buyer Details\"\r\n-        size=\"lg\"\r\n-      >\r\n-        {selectedBuyer && (\r\n-          <div className=\"space-y-6\">\r\n-            {/* Basic Information */}\r\n-            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n-              <div>\r\n-                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Buyer ID</p>\r\n-                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.buyerId}</p>\r\n-              </div>\r\n-              <div>\r\n-                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Name</p>\r\n-                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.firstName} {selectedBuyer.lastName}</p>\r\n-              </div>\r\n-              <div>\r\n-                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Email</p>\r\n-                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.email}</p>\r\n-              </div>\r\n-              <div>\r\n-                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Phone</p>\r\n-                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.phone}</p>\r\n-              </div>\r\n-              <div>\r\n-                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Company</p>\r\n-                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.company || 'N/A'}</p>\r\n-              </div>\r\n-              <div>\r\n-                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Type</p>\r\n-                <p className=\"font-medium text-gray-900 dark:text-gray-100 capitalize\">{selectedBuyer.buyerType}</p>\r\n-              </div>\r\n-            </div>\r\n-\r\n-            {/* Location & Delivery */}\r\n-            <div>\r\n-              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Location & Delivery</h4>\r\n-              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n-                <div>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Location</p>\r\n-                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.location}</p>\r\n-                </div>\r\n-                <div>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Area Code</p>\r\n-                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.areaCode}</p>\r\n-                </div>\r\n-                <div>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Preferred Delivery Time</p>\r\n-                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.preferredDeliveryTime}</p>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-\r\n-            {/* Financial Information */}\r\n-            <div>\r\n-              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Financial Information</h4>\r\n-              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n-                <div>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Credit Limit</p>\r\n-                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{formatCurrency(selectedBuyer.creditLimit)}</p>\r\n-                </div>\r\n-                <div>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Current Balance</p>\r\n-                  <p className={`font-medium ${selectedBuyer.currentBalance > 0 ? 'text-red-600' : 'text-green-600'}`}>\r\n-                    {formatCurrency(selectedBuyer.currentBalance)}\r\n-                  </p>\r\n-                </div>\r\n-                <div>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Payment Terms</p>\r\n-                  <p className=\"font-medium text-gray-900 dark:text-gray-100 capitalize\">{selectedBuyer.paymentTerms}</p>\r\n-                </div>\r\n-                <div>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Status</p>\r\n-                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n-                    selectedBuyer.status === 'active' ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-200' :\r\n-                    selectedBuyer.status === 'suspended' ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-200' :\r\n-                    selectedBuyer.status === 'inactive' ? 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-200' :\r\n-                    'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-200'\r\n-                  }`}>\r\n-                    {selectedBuyer.status.charAt(0).toUpperCase() + selectedBuyer.status.slice(1)}\r\n-                  </span>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-\r\n-            {/* Purchase History */}\r\n-            <div>\r\n-              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Purchase History</h4>\r\n-              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n-                <div>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Purchases</p>\r\n-                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.totalPurchases}</p>\r\n-                </div>\r\n-                <div>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Value</p>\r\n-                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{formatCurrency(selectedBuyer.totalValue)}</p>\r\n-                </div>\r\n-                <div>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Average Order Value</p>\r\n-                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{formatCurrency(selectedBuyer.averageOrderValue)}</p>\r\n-                </div>\r\n-                <div>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Loyalty Points</p>\r\n-                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.loyaltyPoints}</p>\r\n-                </div>\r\n-                <div>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Rating</p>\r\n-                  <div className=\"flex items-center space-x-1\">\r\n-                    <Star className=\"h-4 w-4 text-yellow-500 fill-current\" />\r\n-                    <span className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.rating.toFixed(1)}</span>\r\n-                  </div>\r\n-                </div>\r\n-                <div>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Last Purchase</p>\r\n-                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n-                    {selectedBuyer.lastPurchaseDate ? formatDate(selectedBuyer.lastPurchaseDate) : 'Never'}\r\n-                  </p>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-\r\n-            {/* Emergency Contact */}\r\n-            {selectedBuyer.emergencyContact && (\r\n-              <div>\r\n-                <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Emergency Contact</h4>\r\n-                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n-                  <div>\r\n-                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Name</p>\r\n-                    <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.emergencyContact.name}</p>\r\n-                  </div>\r\n-                  <div>\r\n-                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Phone</p>\r\n-                    <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.emergencyContact.phone}</p>\r\n-                  </div>\r\n-                  <div>\r\n-                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Relationship</p>\r\n-                    <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.emergencyContact.relationship}</p>\r\n-                  </div>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-\r\n-            {/* Documents */}\r\n-            {selectedBuyer.documents && (\r\n-              <div>\r\n-                <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Document Verification</h4>\r\n-                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n-                  <div className=\"flex items-center space-x-2\">\r\n-                    {selectedBuyer.documents.idCopy ? (\r\n-                      <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n-                    ) : (\r\n-                      <AlertCircle className=\"h-4 w-4 text-red-500\" />\r\n-                    )}\r\n-                    <span className=\"text-sm text-gray-700 dark:text-gray-300\">ID Copy</span>\r\n-                  </div>\r\n-                  <div className=\"flex items-center space-x-2\">\r\n-                    {selectedBuyer.documents.businessLicense ? (\r\n-                      <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n-                    ) : (\r\n-                      <AlertCircle className=\"h-4 w-4 text-red-500\" />\r\n-                    )}\r\n-                    <span className=\"text-sm text-gray-700 dark:text-gray-300\">Business License</span>\r\n-                  </div>\r\n-                  <div className=\"flex items-center space-x-2\">\r\n-                    {selectedBuyer.documents.taxCertificate ? (\r\n-                      <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n-                    ) : (\r\n-                      <AlertCircle className=\"h-4 w-4 text-red-500\" />\r\n-                    )}\r\n-                    <span className=\"text-sm text-gray-700 dark:text-gray-300\">Tax Certificate</span>\r\n-                  </div>\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-\r\n-            {/* Notes */}\r\n-            {selectedBuyer.notes && (\r\n-              <div>\r\n-                <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Notes</h4>\r\n-                <p className=\"text-gray-700 dark:text-gray-300\">{selectedBuyer.notes}</p>\r\n-              </div>\r\n-            )}\r\n-\r\n-            <div className=\"flex justify-end space-x-3\">\r\n-              <button\r\n-                onClick={() => setIsViewModalOpen(false)}\r\n-                className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n-              >\r\n-                Close\r\n-              </button>\r\n-              <button\r\n-                onClick={() => {\r\n-                  handleOpenModal(selectedBuyer);\r\n-                  setIsViewModalOpen(false);\r\n-                }}\r\n-                className=\"px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n-              >\r\n-                Edit Buyer\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        )}\r\n-      </Modal>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1759904360491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,8 @@\n export const BuyersPage: React.FC = () => {\r\n   const { user } = useApp();\r\n   const [isModalOpen, setIsModalOpen] = useState(false);\r\n   const [editingBuyer, setEditingBuyer] = useState<Buyer | null>(null);\r\n-  const [isViewModalOpen, setIsViewModalOpen] = useState(false);\r\n   \r\n   // Filter states\r\n   const [filters, setFilters] = useState({\r\n     search: '',\r\n"
                },
                {
                    "date": 1759904383821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,18 +4,17 @@\n import { FormInput } from '../../components/FormInput';\r\n import { FormSelect } from '../../components/FormSelect';\r\n import { DataTable } from '../../components/DataTable';\r\n import { useApp } from '../../context/AppContext';\r\n-import { formatDate, formatCurrency } from '../../utils/helpers';\r\n+import { formatCurrency } from '../../utils/helpers';\r\n import { \r\n   Users, \r\n   Plus, \r\n   Search, \r\n   Filter, \r\n   Download, \r\n   DollarSign, \r\n   Star, \r\n-  AlertCircle, \r\n   CheckCircle, \r\n   CreditCard\r\n } from 'lucide-react';\r\n \r\n"
                },
                {
                    "date": 1759904595305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,62 +459,62 @@\n       {/* Summary Cards */}\r\n       <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n         <Card className=\"p-4\">\r\n           <div className=\"flex items-center justify-between\">\r\n-            <div className=\"p-2 rounded-lg bg-blue-500\">\r\n+            <div className=\"p-2 rounded-lg bg-blue-500 flex-shrink-0\">\r\n               <Users className=\"h-4 w-4 text-white\" />\r\n             </div>\r\n-            <div className=\"text-right\">\r\n+            <div className=\"text-right min-w-0 flex-1\">\r\n               <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Total Buyers</p>\r\n-              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{summaryStats.totalBuyers}</p>\r\n+              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 truncate\">{summaryStats.totalBuyers}</p>\r\n             </div>\r\n           </div>\r\n         </Card>\r\n \r\n         <Card className=\"p-4\">\r\n           <div className=\"flex items-center justify-between\">\r\n-            <div className=\"p-2 rounded-lg bg-green-500\">\r\n+            <div className=\"p-2 rounded-lg bg-green-500 flex-shrink-0\">\r\n               <CheckCircle className=\"h-4 w-4 text-white\" />\r\n             </div>\r\n-            <div className=\"text-right\">\r\n+            <div className=\"text-right min-w-0 flex-1\">\r\n               <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Active</p>\r\n-              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{summaryStats.activeBuyers}</p>\r\n+              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 truncate\">{summaryStats.activeBuyers}</p>\r\n             </div>\r\n           </div>\r\n         </Card>\r\n \r\n         <Card className=\"p-4\">\r\n           <div className=\"flex items-center justify-between\">\r\n-            <div className=\"p-2 rounded-lg bg-purple-500\">\r\n+            <div className=\"p-2 rounded-lg bg-purple-500 flex-shrink-0\">\r\n               <DollarSign className=\"h-4 w-4 text-white\" />\r\n             </div>\r\n-            <div className=\"text-right\">\r\n+            <div className=\"text-right min-w-0 flex-1\">\r\n               <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Total Value</p>\r\n-              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{formatCurrency(summaryStats.totalValue)}</p>\r\n+              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 truncate\">{formatCurrency(summaryStats.totalValue)}</p>\r\n             </div>\r\n           </div>\r\n         </Card>\r\n \r\n         <Card className=\"p-4\">\r\n           <div className=\"flex items-center justify-between\">\r\n-            <div className=\"p-2 rounded-lg bg-orange-500\">\r\n+            <div className=\"p-2 rounded-lg bg-orange-500 flex-shrink-0\">\r\n               <CreditCard className=\"h-4 w-4 text-white\" />\r\n             </div>\r\n-            <div className=\"text-right\">\r\n+            <div className=\"text-right min-w-0 flex-1\">\r\n               <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Outstanding</p>\r\n-              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{formatCurrency(summaryStats.totalBalance)}</p>\r\n+              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 truncate\">{formatCurrency(summaryStats.totalBalance)}</p>\r\n             </div>\r\n           </div>\r\n         </Card>\r\n \r\n         <Card className=\"p-4\">\r\n           <div className=\"flex items-center justify-between\">\r\n-            <div className=\"p-2 rounded-lg bg-yellow-500\">\r\n+            <div className=\"p-2 rounded-lg bg-yellow-500 flex-shrink-0\">\r\n               <Star className=\"h-4 w-4 text-white\" />\r\n             </div>\r\n-            <div className=\"text-right\">\r\n+            <div className=\"text-right min-w-0 flex-1\">\r\n               <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Avg Rating</p>\r\n-              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{summaryStats.averageRating.toFixed(1)}</p>\r\n+              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 truncate\">{summaryStats.averageRating.toFixed(1)}</p>\r\n             </div>\r\n           </div>\r\n         </Card>\r\n       </div>\r\n"
                },
                {
                    "date": 1759908327097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -430,19 +430,19 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"space-y-6\">\r\n+    <div className=\"space-y-6 max-w-full overflow-hidden\">\r\n       {/* Header */}\r\n-      <div className=\"flex items-center justify-between\">\r\n+      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n         <div>\r\n           <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Buyers Management</h1>\r\n           <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n             Comprehensive buyer database and relationship management\r\n           </p>\r\n         </div>\r\n         \r\n-        <div className=\"flex items-center space-x-3\">\r\n+        <div className=\"flex flex-col sm:flex-row items-stretch sm:items-center gap-3\">\r\n           <button className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n             <Download className=\"h-4 w-4\" />\r\n             <span>Export</span>\r\n           </button>\r\n@@ -456,9 +456,9 @@\n         </div>\r\n       </div>\r\n \r\n       {/* Summary Cards */}\r\n-      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n+      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-4\">\r\n         <Card className=\"p-4\">\r\n           <div className=\"flex items-center justify-between\">\r\n             <div className=\"p-2 rounded-lg bg-blue-500 flex-shrink-0\">\r\n               <Users className=\"h-4 w-4 text-white\" />\r\n@@ -525,9 +525,9 @@\n           <Filter className=\"h-5 w-5 text-gray-500\" />\r\n           <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Filters</h3>\r\n         </div>\r\n         \r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n+        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-4\">\r\n           <div className=\"relative\">\r\n             <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n             <input\r\n               type=\"text\"\r\n@@ -592,9 +592,9 @@\n         </div>\r\n       </Card>\r\n \r\n       {/* Data Table */}\r\n-      <Card className=\"p-6\">\r\n+      <Card className=\"p-6 overflow-x-auto\">\r\n         <DataTable\r\n           data={filteredBuyers}\r\n           columns={columns}\r\n           onEdit={handleOpenModal}\r\n@@ -607,15 +607,16 @@\n       <Modal\r\n         isOpen={isModalOpen}\r\n         onClose={handleCloseModal}\r\n         title={editingBuyer ? 'Edit Buyer' : 'Add New Buyer'}\r\n-        size=\"lg\"\r\n+        size=\"xl\"\r\n       >\r\n-        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n+        <div className=\"max-h-[80vh] overflow-y-auto\">\r\n+          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n           {/* Basic Information */}\r\n           <div>\r\n             <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Basic Information</h4>\r\n-            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n               <FormInput\r\n                 label=\"First Name\"\r\n                 type=\"text\"\r\n                 value={formData.firstName}\r\n@@ -670,9 +671,9 @@\n \r\n           {/* Location & Delivery */}\r\n           <div>\r\n             <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Location & Delivery</h4>\r\n-            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n               <FormInput\r\n                 label=\"Location\"\r\n                 type=\"text\"\r\n                 value={formData.location}\r\n@@ -706,9 +707,9 @@\n \r\n           {/* Financial Information */}\r\n           <div>\r\n             <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Financial Information</h4>\r\n-            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n               <FormInput\r\n                 label=\"Credit Limit\"\r\n                 type=\"number\"\r\n                 value={formData.creditLimit}\r\n@@ -754,9 +755,9 @@\n \r\n           {/* Emergency Contact */}\r\n           <div>\r\n             <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Emergency Contact</h4>\r\n-            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n+            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\r\n               <FormInput\r\n                 label=\"Contact Name\"\r\n                 type=\"text\"\r\n                 value={formData.emergencyContact?.name || ''}\r\n@@ -790,9 +791,9 @@\n \r\n           {/* Documents */}\r\n           <div>\r\n             <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Document Verification</h4>\r\n-            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n+            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n               <div className=\"flex items-center space-x-2\">\r\n                 <input\r\n                   type=\"checkbox\"\r\n                   checked={formData.documents?.idCopy || false}\r\n"
                },
                {
                    "date": 1759908346765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -863,8 +863,9 @@\n               {editingBuyer ? 'Update Buyer' : 'Create Buyer'}\r\n             </button>\r\n           </div>\r\n         </form>\r\n+        </div>\r\n       </Modal>\r\n \r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1760598917201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -430,9 +430,9 @@\n     );\r\n   }\r\n \r\n   return (\r\n-    <div className=\"space-y-6 max-w-full overflow-hidden\">\r\n+    <div className=\"space-y-6 max-w-full\">\r\n       {/* Header */}\r\n       <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n         <div>\r\n           <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Buyers Management</h1>\r\n"
                },
                {
                    "date": 1760599056076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -568,13 +568,12 @@\n             value={filters.areaCode}\r\n             onChange={(value) => setFilters({ ...filters, areaCode: value as string })}\r\n             options={[\r\n               { value: 'all', label: 'All Areas' },\r\n-              { value: 'AC001', label: 'AC001 - Central Highlands' },\r\n-              { value: 'AC002', label: 'AC002 - Eastern Plains' },\r\n-              { value: 'AC003', label: 'AC003 - Coastal Region' },\r\n-              { value: 'AC004', label: 'AC004 - Northern Frontier' },\r\n-              { value: 'AC005', label: 'AC005 - Metropolitan Area' },\r\n+              { value: 'AC001', label: 'AC001 - Embu Area' },\r\n+              { value: 'AC002', label: 'AC002 - Mecca Area' },\r\n+              { value: 'AC003', label: 'AC003 - Ena Area' },\r\n+              { value: 'AC004', label: 'AC004 - Ugweri Area' },\r\n             ]}\r\n           />\r\n           \r\n           <FormSelect\r\n@@ -685,13 +684,12 @@\n                 label=\"Area Code\"\r\n                 value={formData.areaCode}\r\n                 onChange={(value) => setFormData({ ...formData, areaCode: value as string })}\r\n                 options={[\r\n-                  { value: 'AC001', label: 'AC001 - Central Highlands' },\r\n-                  { value: 'AC002', label: 'AC002 - Eastern Plains' },\r\n-                  { value: 'AC003', label: 'AC003 - Coastal Region' },\r\n-                  { value: 'AC004', label: 'AC004 - Northern Frontier' },\r\n-                  { value: 'AC005', label: 'AC005 - Metropolitan Area' },\r\n+                  { value: 'AC001', label: 'AC001 - Embu Area' },\r\n+                  { value: 'AC002', label: 'AC002 - Mecca Area' },\r\n+                  { value: 'AC003', label: 'AC003 - Ena Area' },\r\n+                  { value: 'AC004', label: 'AC004 - Ugweri Area' },\r\n                 ]}\r\n                 required\r\n               />\r\n               \r\n"
                }
            ],
            "date": 1759904107252,
            "name": "Commit-0",
            "content": "import React, { useState, useMemo } from 'react';\r\nimport { Card } from '../../components/Card';\r\nimport { Modal } from '../../components/Modal';\r\nimport { FormInput } from '../../components/FormInput';\r\nimport { FormSelect } from '../../components/FormSelect';\r\nimport { DataTable } from '../../components/DataTable';\r\nimport { useApp } from '../../context/AppContext';\r\nimport { formatDate, formatCurrency } from '../../utils/helpers';\r\nimport { \r\n  Users, \r\n  Plus, \r\n  Edit, \r\n  Trash2, \r\n  Eye, \r\n  Search, \r\n  Filter, \r\n  Download, \r\n  TrendingUp, \r\n  TrendingDown, \r\n  MapPin, \r\n  Phone, \r\n  Mail, \r\n  Calendar, \r\n  Package, \r\n  DollarSign, \r\n  Star, \r\n  AlertCircle, \r\n  CheckCircle, \r\n  Clock,\r\n  Building,\r\n  User,\r\n  ShoppingCart,\r\n  CreditCard,\r\n  FileText\r\n} from 'lucide-react';\r\n\r\ninterface Buyer {\r\n  id: string;\r\n  buyerId: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: string;\r\n  company?: string;\r\n  buyerType: 'individual' | 'company' | 'cooperative';\r\n  location: string;\r\n  areaCode: string;\r\n  preferredDeliveryTime: string;\r\n  creditLimit: number;\r\n  currentBalance: number;\r\n  paymentTerms: 'cash' | 'credit' | 'net30' | 'net60';\r\n  status: 'active' | 'inactive' | 'suspended' | 'pending';\r\n  registrationDate: string;\r\n  lastPurchaseDate?: string;\r\n  totalPurchases: number;\r\n  totalValue: number;\r\n  averageOrderValue: number;\r\n  loyaltyPoints: number;\r\n  rating: number;\r\n  notes?: string;\r\n  emergencyContact?: {\r\n    name: string;\r\n    phone: string;\r\n    relationship: string;\r\n  };\r\n  documents?: {\r\n    idCopy: boolean;\r\n    businessLicense: boolean;\r\n    taxCertificate: boolean;\r\n  };\r\n}\r\n\r\nexport const BuyersManagementPage: React.FC = () => {\r\n  const { user, sourceRecords } = useApp();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingBuyer, setEditingBuyer] = useState<Buyer | null>(null);\r\n  const [selectedBuyer, setSelectedBuyer] = useState<Buyer | null>(null);\r\n  const [isViewModalOpen, setIsViewModalOpen] = useState(false);\r\n  \r\n  // Filter states\r\n  const [filters, setFilters] = useState({\r\n    search: '',\r\n    type: 'all',\r\n    status: 'all',\r\n    areaCode: 'all',\r\n    paymentTerms: 'all',\r\n  });\r\n\r\n  // Mock buyers data\r\n  const [buyers, setBuyers] = useState<Buyer[]>([\r\n    {\r\n      id: '1',\r\n      buyerId: 'BYR-001',\r\n      firstName: 'Ahmed',\r\n      lastName: 'Hassan',\r\n      email: 'ahmed.hassan@email.com',\r\n      phone: '+254 712 345678',\r\n      company: 'Hassan Enterprises',\r\n      buyerType: 'company',\r\n      location: 'Nairobi CBD',\r\n      areaCode: 'AC005',\r\n      preferredDeliveryTime: '09:00-12:00',\r\n      creditLimit: 500000,\r\n      currentBalance: 125000,\r\n      paymentTerms: 'net30',\r\n      status: 'active',\r\n      registrationDate: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString(),\r\n      lastPurchaseDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\r\n      totalPurchases: 45,\r\n      totalValue: 2250000,\r\n      averageOrderValue: 50000,\r\n      loyaltyPoints: 2250,\r\n      rating: 4.8,\r\n      notes: 'Reliable buyer, always pays on time',\r\n      emergencyContact: {\r\n        name: 'Fatima Hassan',\r\n        phone: '+254 723 456789',\r\n        relationship: 'Wife',\r\n      },\r\n      documents: {\r\n        idCopy: true,\r\n        businessLicense: true,\r\n        taxCertificate: true,\r\n      },\r\n    },\r\n    {\r\n      id: '2',\r\n      buyerId: 'BYR-002',\r\n      firstName: 'Mary',\r\n      lastName: 'Wanjiku',\r\n      email: 'mary.wanjiku@email.com',\r\n      phone: '+254 734 567890',\r\n      buyerType: 'individual',\r\n      location: 'Mombasa',\r\n      areaCode: 'AC003',\r\n      preferredDeliveryTime: '14:00-17:00',\r\n      creditLimit: 100000,\r\n      currentBalance: 0,\r\n      paymentTerms: 'cash',\r\n      status: 'active',\r\n      registrationDate: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString(),\r\n      lastPurchaseDate: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\r\n      totalPurchases: 12,\r\n      totalValue: 480000,\r\n      averageOrderValue: 40000,\r\n      loyaltyPoints: 480,\r\n      rating: 4.5,\r\n      notes: 'Prefers morning deliveries',\r\n    },\r\n    {\r\n      id: '3',\r\n      buyerId: 'BYR-003',\r\n      firstName: 'Cooperative',\r\n      lastName: 'Farmers Union',\r\n      email: 'info@farmersunion.co.ke',\r\n      phone: '+254 745 678901',\r\n      company: 'Meru Farmers Cooperative',\r\n      buyerType: 'cooperative',\r\n      location: 'Meru Town',\r\n      areaCode: 'AC001',\r\n      preferredDeliveryTime: '08:00-10:00',\r\n      creditLimit: 1000000,\r\n      currentBalance: 250000,\r\n      paymentTerms: 'net60',\r\n      status: 'active',\r\n      registrationDate: new Date(Date.now() - 120 * 24 * 60 * 60 * 1000).toISOString(),\r\n      lastPurchaseDate: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\r\n      totalPurchases: 78,\r\n      totalValue: 3900000,\r\n      averageOrderValue: 50000,\r\n      loyaltyPoints: 3900,\r\n      rating: 4.9,\r\n      notes: 'Large volume buyer, seasonal patterns',\r\n      emergencyContact: {\r\n        name: 'John Mwangi',\r\n        phone: '+254 756 789012',\r\n        relationship: 'Secretary',\r\n      },\r\n      documents: {\r\n        idCopy: true,\r\n        businessLicense: true,\r\n        taxCertificate: true,\r\n      },\r\n    },\r\n    {\r\n      id: '4',\r\n      buyerId: 'BYR-004',\r\n      firstName: 'Omar',\r\n      lastName: 'Ali',\r\n      email: 'omar.ali@email.com',\r\n      phone: '+254 767 890123',\r\n      buyerType: 'individual',\r\n      location: 'Garissa',\r\n      areaCode: 'AC004',\r\n      preferredDeliveryTime: '10:00-14:00',\r\n      creditLimit: 75000,\r\n      currentBalance: 45000,\r\n      paymentTerms: 'credit',\r\n      status: 'suspended',\r\n      registrationDate: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),\r\n      lastPurchaseDate: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),\r\n      totalPurchases: 8,\r\n      totalValue: 240000,\r\n      averageOrderValue: 30000,\r\n      loyaltyPoints: 240,\r\n      rating: 3.2,\r\n      notes: 'Payment issues, account suspended',\r\n    },\r\n  ]);\r\n\r\n  const [formData, setFormData] = useState<Omit<Buyer, 'id' | 'buyerId' | 'registrationDate' | 'totalPurchases' | 'totalValue' | 'averageOrderValue' | 'loyaltyPoints' | 'rating'>>({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    company: '',\r\n    buyerType: 'individual',\r\n    location: '',\r\n    areaCode: '',\r\n    preferredDeliveryTime: '',\r\n    creditLimit: 0,\r\n    currentBalance: 0,\r\n    paymentTerms: 'cash',\r\n    status: 'pending',\r\n    lastPurchaseDate: '',\r\n    notes: '',\r\n    emergencyContact: {\r\n      name: '',\r\n      phone: '',\r\n      relationship: '',\r\n    },\r\n    documents: {\r\n      idCopy: false,\r\n      businessLicense: false,\r\n      taxCertificate: false,\r\n    },\r\n  });\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      company: '',\r\n      buyerType: 'individual',\r\n      location: '',\r\n      areaCode: '',\r\n      preferredDeliveryTime: '',\r\n      creditLimit: 0,\r\n      currentBalance: 0,\r\n      paymentTerms: 'cash',\r\n      status: 'pending',\r\n      lastPurchaseDate: '',\r\n      notes: '',\r\n      emergencyContact: {\r\n        name: '',\r\n        phone: '',\r\n        relationship: '',\r\n      },\r\n      documents: {\r\n        idCopy: false,\r\n        businessLicense: false,\r\n        taxCertificate: false,\r\n      },\r\n    });\r\n    setEditingBuyer(null);\r\n  };\r\n\r\n  const handleOpenModal = (buyer?: Buyer) => {\r\n    if (buyer) {\r\n      setEditingBuyer(buyer);\r\n      const { id, buyerId, registrationDate, totalPurchases, totalValue, averageOrderValue, loyaltyPoints, rating, ...buyerData } = buyer;\r\n      setFormData(buyerData);\r\n    } else {\r\n      resetForm();\r\n    }\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    resetForm();\r\n  };\r\n\r\n  const handleViewBuyer = (buyer: Buyer) => {\r\n    setSelectedBuyer(buyer);\r\n    setIsViewModalOpen(true);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    const now = new Date().toISOString();\r\n    const newBuyer = {\r\n      ...formData,\r\n      registrationDate: now,\r\n      totalPurchases: 0,\r\n      totalValue: 0,\r\n      averageOrderValue: 0,\r\n      loyaltyPoints: 0,\r\n      rating: 0,\r\n    };\r\n\r\n    if (editingBuyer) {\r\n      setBuyers(\r\n        buyers.map((buyer) =>\r\n          buyer.id === editingBuyer.id ? { ...newBuyer, id: editingBuyer.id, buyerId: editingBuyer.buyerId } : buyer\r\n        )\r\n      );\r\n    } else {\r\n      const id = Date.now().toString();\r\n      const buyerId = `BYR-${String(buyers.length + 1).padStart(3, '0')}`;\r\n      setBuyers([...buyers, { ...newBuyer, id, buyerId }]);\r\n    }\r\n\r\n    handleCloseModal();\r\n  };\r\n\r\n  const handleDelete = (buyer: Buyer) => {\r\n    if (window.confirm(`Are you sure you want to delete buyer ${buyer.firstName} ${buyer.lastName}?`)) {\r\n      setBuyers(buyers.filter((b) => b.id !== buyer.id));\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = (buyerId: string, newStatus: Buyer['status']) => {\r\n    setBuyers(\r\n      buyers.map((buyer) =>\r\n        buyer.id === buyerId ? { ...buyer, status: newStatus } : buyer\r\n      )\r\n    );\r\n  };\r\n\r\n  // Filter buyers\r\n  const filteredBuyers = useMemo(() => {\r\n    return buyers.filter((buyer) => {\r\n      const matchesSearch = filters.search === '' || \r\n        buyer.firstName.toLowerCase().includes(filters.search.toLowerCase()) ||\r\n        buyer.lastName.toLowerCase().includes(filters.search.toLowerCase()) ||\r\n        buyer.email.toLowerCase().includes(filters.search.toLowerCase()) ||\r\n        buyer.company?.toLowerCase().includes(filters.search.toLowerCase()) ||\r\n        buyer.buyerId.toLowerCase().includes(filters.search.toLowerCase());\r\n      \r\n      const matchesType = filters.type === 'all' || buyer.buyerType === filters.type;\r\n      const matchesStatus = filters.status === 'all' || buyer.status === filters.status;\r\n      const matchesAreaCode = filters.areaCode === 'all' || buyer.areaCode === filters.areaCode;\r\n      const matchesPaymentTerms = filters.paymentTerms === 'all' || buyer.paymentTerms === filters.paymentTerms;\r\n\r\n      return matchesSearch && matchesType && matchesStatus && matchesAreaCode && matchesPaymentTerms;\r\n    });\r\n  }, [buyers, filters]);\r\n\r\n  const columns = [\r\n    {\r\n      key: 'buyerId' as keyof Buyer,\r\n      label: 'Buyer ID',\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'firstName' as keyof Buyer,\r\n      label: 'Name',\r\n      render: (value: string, row: Buyer) => (\r\n        <div>\r\n          <p className=\"font-medium text-gray-900 dark:text-gray-100\">{value} {row.lastName}</p>\r\n          <p className=\"text-xs text-gray-500\">{row.company || 'Individual'}</p>\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'buyerType' as keyof Buyer,\r\n      label: 'Type',\r\n      render: (value: string) => (\r\n        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n          value === 'company' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-200' :\r\n          value === 'cooperative' ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-200' :\r\n          'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-200'\r\n        }`}>\r\n          {value.charAt(0).toUpperCase() + value.slice(1)}\r\n        </span>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'location' as keyof Buyer,\r\n      label: 'Location',\r\n      render: (value: string, row: Buyer) => (\r\n        <div>\r\n          <p className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{value}</p>\r\n          <p className=\"text-xs text-gray-500\">{row.areaCode}</p>\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'status' as keyof Buyer,\r\n      label: 'Status',\r\n      render: (value: string) => (\r\n        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n          value === 'active' ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-200' :\r\n          value === 'suspended' ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-200' :\r\n          value === 'inactive' ? 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-200' :\r\n          'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-200'\r\n        }`}>\r\n          {value.charAt(0).toUpperCase() + value.slice(1)}\r\n        </span>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'totalValue' as keyof Buyer,\r\n      label: 'Total Value',\r\n      render: (value: number) => formatCurrency(value),\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'currentBalance' as keyof Buyer,\r\n      label: 'Balance',\r\n      render: (value: number) => (\r\n        <span className={value > 0 ? 'text-red-600' : 'text-green-600'}>\r\n          {formatCurrency(value)}\r\n        </span>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'rating' as keyof Buyer,\r\n      label: 'Rating',\r\n      render: (value: number) => (\r\n        <div className=\"flex items-center space-x-1\">\r\n          <Star className=\"h-4 w-4 text-yellow-500 fill-current\" />\r\n          <span className=\"text-sm font-medium\">{value.toFixed(1)}</span>\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  // Calculate summary statistics\r\n  const summaryStats = useMemo(() => {\r\n    const totalBuyers = buyers.length;\r\n    const activeBuyers = buyers.filter(b => b.status === 'active').length;\r\n    const totalValue = buyers.reduce((sum, buyer) => sum + buyer.totalValue, 0);\r\n    const totalBalance = buyers.reduce((sum, buyer) => sum + buyer.currentBalance, 0);\r\n    const averageRating = buyers.length > 0 ? buyers.reduce((sum, buyer) => sum + buyer.rating, 0) / buyers.length : 0;\r\n\r\n    return {\r\n      totalBuyers,\r\n      activeBuyers,\r\n      totalValue,\r\n      totalBalance,\r\n      averageRating,\r\n    };\r\n  }, [buyers]);\r\n\r\n  if (user?.role !== 'admin') {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-full\">\r\n        <p className=\"text-xl text-red-500\">Access Denied: Admins only.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Buyers Management</h1>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n            Comprehensive buyer database and relationship management\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-3\">\r\n          <button className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n            <Download className=\"h-4 w-4\" />\r\n            <span>Export</span>\r\n          </button>\r\n          <button\r\n            onClick={() => handleOpenModal()}\r\n            className=\"flex items-center space-x-2 px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n          >\r\n            <Plus className=\"h-4 w-4\" />\r\n            <span>Add Buyer</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Summary Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"p-2 rounded-lg bg-blue-500\">\r\n              <Users className=\"h-4 w-4 text-white\" />\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Total Buyers</p>\r\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{summaryStats.totalBuyers}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"p-2 rounded-lg bg-green-500\">\r\n              <CheckCircle className=\"h-4 w-4 text-white\" />\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Active</p>\r\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{summaryStats.activeBuyers}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"p-2 rounded-lg bg-purple-500\">\r\n              <DollarSign className=\"h-4 w-4 text-white\" />\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Total Value</p>\r\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{formatCurrency(summaryStats.totalValue)}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"p-2 rounded-lg bg-orange-500\">\r\n              <CreditCard className=\"h-4 w-4 text-white\" />\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Outstanding</p>\r\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{formatCurrency(summaryStats.totalBalance)}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"p-2 rounded-lg bg-yellow-500\">\r\n              <Star className=\"h-4 w-4 text-white\" />\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Avg Rating</p>\r\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{summaryStats.averageRating.toFixed(1)}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <Card className=\"p-4\">\r\n        <div className=\"flex items-center space-x-4 mb-4\">\r\n          <Filter className=\"h-5 w-5 text-gray-500\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Filters</h3>\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search buyers...\"\r\n              value={filters.search}\r\n              onChange={(e) => setFilters({ ...filters, search: e.target.value })}\r\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-bright-green focus:border-bright-green\"\r\n            />\r\n          </div>\r\n          \r\n          <FormSelect\r\n            label=\"Type\"\r\n            value={filters.type}\r\n            onChange={(value) => setFilters({ ...filters, type: value as string })}\r\n            options={[\r\n              { value: 'all', label: 'All Types' },\r\n              { value: 'individual', label: 'Individual' },\r\n              { value: 'company', label: 'Company' },\r\n              { value: 'cooperative', label: 'Cooperative' },\r\n            ]}\r\n          />\r\n          \r\n          <FormSelect\r\n            label=\"Status\"\r\n            value={filters.status}\r\n            onChange={(value) => setFilters({ ...filters, status: value as string })}\r\n            options={[\r\n              { value: 'all', label: 'All Status' },\r\n              { value: 'active', label: 'Active' },\r\n              { value: 'inactive', label: 'Inactive' },\r\n              { value: 'suspended', label: 'Suspended' },\r\n              { value: 'pending', label: 'Pending' },\r\n            ]}\r\n          />\r\n          \r\n          <FormSelect\r\n            label=\"Area Code\"\r\n            value={filters.areaCode}\r\n            onChange={(value) => setFilters({ ...filters, areaCode: value as string })}\r\n            options={[\r\n              { value: 'all', label: 'All Areas' },\r\n              { value: 'AC001', label: 'AC001 - Central Highlands' },\r\n              { value: 'AC002', label: 'AC002 - Eastern Plains' },\r\n              { value: 'AC003', label: 'AC003 - Coastal Region' },\r\n              { value: 'AC004', label: 'AC004 - Northern Frontier' },\r\n              { value: 'AC005', label: 'AC005 - Metropolitan Area' },\r\n            ]}\r\n          />\r\n          \r\n          <FormSelect\r\n            label=\"Payment Terms\"\r\n            value={filters.paymentTerms}\r\n            onChange={(value) => setFilters({ ...filters, paymentTerms: value as string })}\r\n            options={[\r\n              { value: 'all', label: 'All Terms' },\r\n              { value: 'cash', label: 'Cash' },\r\n              { value: 'credit', label: 'Credit' },\r\n              { value: 'net30', label: 'Net 30' },\r\n              { value: 'net60', label: 'Net 60' },\r\n            ]}\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Data Table */}\r\n      <Card className=\"p-6\">\r\n        <DataTable\r\n          data={filteredBuyers}\r\n          columns={columns}\r\n          onEdit={handleOpenModal}\r\n          onDelete={handleDelete}\r\n          emptyMessage=\"No buyers found matching the current filters.\"\r\n          actions={[\r\n            {\r\n              label: 'View',\r\n              icon: Eye,\r\n              onClick: handleViewBuyer,\r\n            },\r\n            {\r\n              label: 'Activate',\r\n              icon: CheckCircle,\r\n              onClick: (buyer: Buyer) => handleStatusChange(buyer.id, 'active'),\r\n              condition: (buyer: Buyer) => buyer.status !== 'active',\r\n            },\r\n            {\r\n              label: 'Suspend',\r\n              icon: AlertCircle,\r\n              onClick: (buyer: Buyer) => handleStatusChange(buyer.id, 'suspended'),\r\n              condition: (buyer: Buyer) => buyer.status === 'active',\r\n            },\r\n          ]}\r\n        />\r\n      </Card>\r\n\r\n      {/* Add/Edit Modal */}\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={handleCloseModal}\r\n        title={editingBuyer ? 'Edit Buyer' : 'Add New Buyer'}\r\n        size=\"lg\"\r\n      >\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          {/* Basic Information */}\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Basic Information</h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <FormInput\r\n                label=\"First Name\"\r\n                type=\"text\"\r\n                value={formData.firstName}\r\n                onChange={(value) => setFormData({ ...formData, firstName: value as string })}\r\n                required\r\n              />\r\n              \r\n              <FormInput\r\n                label=\"Last Name\"\r\n                type=\"text\"\r\n                value={formData.lastName}\r\n                onChange={(value) => setFormData({ ...formData, lastName: value as string })}\r\n                required\r\n              />\r\n              \r\n              <FormInput\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={(value) => setFormData({ ...formData, email: value as string })}\r\n                required\r\n              />\r\n              \r\n              <FormInput\r\n                label=\"Phone\"\r\n                type=\"tel\"\r\n                value={formData.phone}\r\n                onChange={(value) => setFormData({ ...formData, phone: value as string })}\r\n                required\r\n              />\r\n              \r\n              <FormInput\r\n                label=\"Company (Optional)\"\r\n                type=\"text\"\r\n                value={formData.company || ''}\r\n                onChange={(value) => setFormData({ ...formData, company: value as string })}\r\n              />\r\n              \r\n              <FormSelect\r\n                label=\"Buyer Type\"\r\n                value={formData.buyerType}\r\n                onChange={(value) => setFormData({ ...formData, buyerType: value as any })}\r\n                options={[\r\n                  { value: 'individual', label: 'Individual' },\r\n                  { value: 'company', label: 'Company' },\r\n                  { value: 'cooperative', label: 'Cooperative' },\r\n                ]}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Location & Delivery */}\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Location & Delivery</h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <FormInput\r\n                label=\"Location\"\r\n                type=\"text\"\r\n                value={formData.location}\r\n                onChange={(value) => setFormData({ ...formData, location: value as string })}\r\n                required\r\n              />\r\n              \r\n              <FormSelect\r\n                label=\"Area Code\"\r\n                value={formData.areaCode}\r\n                onChange={(value) => setFormData({ ...formData, areaCode: value as string })}\r\n                options={[\r\n                  { value: 'AC001', label: 'AC001 - Central Highlands' },\r\n                  { value: 'AC002', label: 'AC002 - Eastern Plains' },\r\n                  { value: 'AC003', label: 'AC003 - Coastal Region' },\r\n                  { value: 'AC004', label: 'AC004 - Northern Frontier' },\r\n                  { value: 'AC005', label: 'AC005 - Metropolitan Area' },\r\n                ]}\r\n                required\r\n              />\r\n              \r\n              <FormInput\r\n                label=\"Preferred Delivery Time\"\r\n                type=\"text\"\r\n                value={formData.preferredDeliveryTime}\r\n                onChange={(value) => setFormData({ ...formData, preferredDeliveryTime: value as string })}\r\n                placeholder=\"e.g., 09:00-12:00\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Financial Information */}\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Financial Information</h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <FormInput\r\n                label=\"Credit Limit\"\r\n                type=\"number\"\r\n                value={formData.creditLimit}\r\n                onChange={(value) => setFormData({ ...formData, creditLimit: Number(value) })}\r\n                required\r\n              />\r\n              \r\n              <FormInput\r\n                label=\"Current Balance\"\r\n                type=\"number\"\r\n                value={formData.currentBalance}\r\n                onChange={(value) => setFormData({ ...formData, currentBalance: Number(value) })}\r\n                required\r\n              />\r\n              \r\n              <FormSelect\r\n                label=\"Payment Terms\"\r\n                value={formData.paymentTerms}\r\n                onChange={(value) => setFormData({ ...formData, paymentTerms: value as any })}\r\n                options={[\r\n                  { value: 'cash', label: 'Cash' },\r\n                  { value: 'credit', label: 'Credit' },\r\n                  { value: 'net30', label: 'Net 30' },\r\n                  { value: 'net60', label: 'Net 60' },\r\n                ]}\r\n                required\r\n              />\r\n              \r\n              <FormSelect\r\n                label=\"Status\"\r\n                value={formData.status}\r\n                onChange={(value) => setFormData({ ...formData, status: value as any })}\r\n                options={[\r\n                  { value: 'active', label: 'Active' },\r\n                  { value: 'inactive', label: 'Inactive' },\r\n                  { value: 'suspended', label: 'Suspended' },\r\n                  { value: 'pending', label: 'Pending' },\r\n                ]}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Emergency Contact */}\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Emergency Contact</h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <FormInput\r\n                label=\"Contact Name\"\r\n                type=\"text\"\r\n                value={formData.emergencyContact?.name || ''}\r\n                onChange={(value) => setFormData({ \r\n                  ...formData, \r\n                  emergencyContact: { ...formData.emergencyContact!, name: value as string }\r\n                })}\r\n              />\r\n              \r\n              <FormInput\r\n                label=\"Contact Phone\"\r\n                type=\"tel\"\r\n                value={formData.emergencyContact?.phone || ''}\r\n                onChange={(value) => setFormData({ \r\n                  ...formData, \r\n                  emergencyContact: { ...formData.emergencyContact!, phone: value as string }\r\n                })}\r\n              />\r\n              \r\n              <FormInput\r\n                label=\"Relationship\"\r\n                type=\"text\"\r\n                value={formData.emergencyContact?.relationship || ''}\r\n                onChange={(value) => setFormData({ \r\n                  ...formData, \r\n                  emergencyContact: { ...formData.emergencyContact!, relationship: value as string }\r\n                })}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Documents */}\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Document Verification</h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={formData.documents?.idCopy || false}\r\n                  onChange={(e) => setFormData({ \r\n                    ...formData, \r\n                    documents: { ...formData.documents!, idCopy: e.target.checked }\r\n                  })}\r\n                  className=\"h-4 w-4 text-bright-green rounded border-gray-300 focus:ring-bright-green\"\r\n                />\r\n                <label className=\"text-sm text-gray-700 dark:text-gray-300\">ID Copy</label>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center space-x-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={formData.documents?.businessLicense || false}\r\n                  onChange={(e) => setFormData({ \r\n                    ...formData, \r\n                    documents: { ...formData.documents!, businessLicense: e.target.checked }\r\n                  })}\r\n                  className=\"h-4 w-4 text-bright-green rounded border-gray-300 focus:ring-bright-green\"\r\n                />\r\n                <label className=\"text-sm text-gray-700 dark:text-gray-300\">Business License</label>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center space-x-2\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={formData.documents?.taxCertificate || false}\r\n                  onChange={(e) => setFormData({ \r\n                    ...formData, \r\n                    documents: { ...formData.documents!, taxCertificate: e.target.checked }\r\n                  })}\r\n                  className=\"h-4 w-4 text-bright-green rounded border-gray-300 focus:ring-bright-green\"\r\n                />\r\n                <label className=\"text-sm text-gray-700 dark:text-gray-300\">Tax Certificate</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Notes */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Notes\r\n            </label>\r\n            <textarea\r\n              value={formData.notes || ''}\r\n              onChange={(e) => setFormData({ ...formData, notes: e.target.value })}\r\n              className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n              rows={3}\r\n              placeholder=\"Additional notes about this buyer...\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCloseModal}\r\n              className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n            >\r\n              {editingBuyer ? 'Update Buyer' : 'Create Buyer'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n\r\n      {/* View Modal */}\r\n      <Modal\r\n        isOpen={isViewModalOpen}\r\n        onClose={() => setIsViewModalOpen(false)}\r\n        title=\"Buyer Details\"\r\n        size=\"lg\"\r\n      >\r\n        {selectedBuyer && (\r\n          <div className=\"space-y-6\">\r\n            {/* Basic Information */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Buyer ID</p>\r\n                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.buyerId}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Name</p>\r\n                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.firstName} {selectedBuyer.lastName}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Email</p>\r\n                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.email}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Phone</p>\r\n                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.phone}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Company</p>\r\n                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.company || 'N/A'}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Type</p>\r\n                <p className=\"font-medium text-gray-900 dark:text-gray-100 capitalize\">{selectedBuyer.buyerType}</p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Location & Delivery */}\r\n            <div>\r\n              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Location & Delivery</h4>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Location</p>\r\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.location}</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Area Code</p>\r\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.areaCode}</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Preferred Delivery Time</p>\r\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.preferredDeliveryTime}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Financial Information */}\r\n            <div>\r\n              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Financial Information</h4>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Credit Limit</p>\r\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{formatCurrency(selectedBuyer.creditLimit)}</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Current Balance</p>\r\n                  <p className={`font-medium ${selectedBuyer.currentBalance > 0 ? 'text-red-600' : 'text-green-600'}`}>\r\n                    {formatCurrency(selectedBuyer.currentBalance)}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Payment Terms</p>\r\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100 capitalize\">{selectedBuyer.paymentTerms}</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Status</p>\r\n                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                    selectedBuyer.status === 'active' ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-200' :\r\n                    selectedBuyer.status === 'suspended' ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-200' :\r\n                    selectedBuyer.status === 'inactive' ? 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-200' :\r\n                    'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-200'\r\n                  }`}>\r\n                    {selectedBuyer.status.charAt(0).toUpperCase() + selectedBuyer.status.slice(1)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Purchase History */}\r\n            <div>\r\n              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Purchase History</h4>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Purchases</p>\r\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.totalPurchases}</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Value</p>\r\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{formatCurrency(selectedBuyer.totalValue)}</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Average Order Value</p>\r\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{formatCurrency(selectedBuyer.averageOrderValue)}</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Loyalty Points</p>\r\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.loyaltyPoints}</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Rating</p>\r\n                  <div className=\"flex items-center space-x-1\">\r\n                    <Star className=\"h-4 w-4 text-yellow-500 fill-current\" />\r\n                    <span className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.rating.toFixed(1)}</span>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Last Purchase</p>\r\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                    {selectedBuyer.lastPurchaseDate ? formatDate(selectedBuyer.lastPurchaseDate) : 'Never'}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Emergency Contact */}\r\n            {selectedBuyer.emergencyContact && (\r\n              <div>\r\n                <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Emergency Contact</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Name</p>\r\n                    <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.emergencyContact.name}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Phone</p>\r\n                    <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.emergencyContact.phone}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Relationship</p>\r\n                    <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedBuyer.emergencyContact.relationship}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Documents */}\r\n            {selectedBuyer.documents && (\r\n              <div>\r\n                <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Document Verification</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {selectedBuyer.documents.idCopy ? (\r\n                      <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n                    ) : (\r\n                      <AlertCircle className=\"h-4 w-4 text-red-500\" />\r\n                    )}\r\n                    <span className=\"text-sm text-gray-700 dark:text-gray-300\">ID Copy</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {selectedBuyer.documents.businessLicense ? (\r\n                      <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n                    ) : (\r\n                      <AlertCircle className=\"h-4 w-4 text-red-500\" />\r\n                    )}\r\n                    <span className=\"text-sm text-gray-700 dark:text-gray-300\">Business License</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {selectedBuyer.documents.taxCertificate ? (\r\n                      <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n                    ) : (\r\n                      <AlertCircle className=\"h-4 w-4 text-red-500\" />\r\n                    )}\r\n                    <span className=\"text-sm text-gray-700 dark:text-gray-300\">Tax Certificate</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Notes */}\r\n            {selectedBuyer.notes && (\r\n              <div>\r\n                <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Notes</h4>\r\n                <p className=\"text-gray-700 dark:text-gray-300\">{selectedBuyer.notes}</p>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <button\r\n                onClick={() => setIsViewModalOpen(false)}\r\n                className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  handleOpenModal(selectedBuyer);\r\n                  setIsViewModalOpen(false);\r\n                }}\r\n                className=\"px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n              >\r\n                Edit Buyer\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n"
        }
    ]
}