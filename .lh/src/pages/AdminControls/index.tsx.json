{
    "sourceFile": "src/pages/AdminControls/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1759903929624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759907617048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n-import React, { useState } from 'react';\r\n+import React, { useState, useEffect } from 'react';\r\n import { Card } from '../../components/Card';\r\n import { Modal } from '../../components/Modal';\r\n import { FormInput } from '../../components/FormInput';\r\n import { FormSelect } from '../../components/FormSelect';\r\n import { useApp } from '../../context/AppContext';\r\n+import { useNotificationService } from '../../services/notificationService';\r\n import { \r\n   Settings, \r\n   Users, \r\n   Database, \r\n@@ -19,15 +20,22 @@\n   Clock,\r\n   Activity,\r\n   Server,\r\n   HardDrive,\r\n-  Cpu,\r\n-  MemoryStick,\r\n   Globe,\r\n   Lock,\r\n   Unlock,\r\n   Eye,\r\n-  EyeOff\r\n+  EyeOff,\r\n+  Save,\r\n+  X,\r\n+  Plus,\r\n+  Edit,\r\n+  Search,\r\n+  Filter,\r\n+  BarChart3,\r\n+  TrendingUp,\r\n+  TrendingDown\r\n } from 'lucide-react';\r\n \r\n interface SystemBackup {\r\n   id: string;\r\n@@ -49,600 +57,724 @@\n   userAgent: string;\r\n   isActive: boolean;\r\n }\r\n \r\n+interface SystemConfig {\r\n+  maintenanceMode: boolean;\r\n+  autoBackup: boolean;\r\n+  backupFrequency: 'daily' | 'weekly' | 'monthly';\r\n+  dataRetention: number;\r\n+  maxFileSize: number;\r\n+  systemLogs: boolean;\r\n+  emailNotifications: boolean;\r\n+  smsNotifications: boolean;\r\n+  twoFactorAuth: boolean;\r\n+  sessionTimeout: number;\r\n+}\r\n+\r\n export const AdminControlsPage: React.FC = () => {\r\n-  const { user, sourceRecords } = useApp();\r\n-  const [isBackupModalOpen, setIsBackupModalOpen] = useState(false);\r\n-  const [isUserModalOpen, setIsUserModalOpen] = useState(false);\r\n-  const [isSystemModalOpen, setIsSystemModalOpen] = useState(false);\r\n-  const [showSensitiveData, setShowSensitiveData] = useState(false);\r\n+  const { user, sourceRecords, transportLogs } = useApp();\r\n+  const { showSuccessNotification, showErrorNotification, showWarningNotification } = useNotificationService();\r\n+  \r\n+  const [activeTab, setActiveTab] = useState<'overview' | 'users' | 'system' | 'backup' | 'security'>('overview');\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [modalType, setModalType] = useState<'backup' | 'config' | 'user'>('config');\r\n+  \r\n+  // System configuration\r\n+  const [systemConfig, setSystemConfig] = useState<SystemConfig>({\r\n+    maintenanceMode: false,\r\n+    autoBackup: true,\r\n+    backupFrequency: 'daily',\r\n+    dataRetention: 365,\r\n+    maxFileSize: 10,\r\n+    systemLogs: true,\r\n+    emailNotifications: true,\r\n+    smsNotifications: false,\r\n+    twoFactorAuth: false,\r\n+    sessionTimeout: 30,\r\n+  });\r\n \r\n-  // Mock system backups\r\n-  const [systemBackups, setSystemBackups] = useState<SystemBackup[]>([\r\n+  // Mock data for demonstration\r\n+  const [backups, setBackups] = useState<SystemBackup[]>([\r\n     {\r\n       id: '1',\r\n-      name: 'Daily Backup - 2024-01-15',\r\n-      size: '2.3 GB',\r\n-      createdAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\r\n+      name: 'Full Backup - 2024-01-20',\r\n+      size: '2.4 MB',\r\n+      createdAt: '2024-01-20 14:30:00',\r\n       type: 'full',\r\n-      status: 'completed',\r\n+      status: 'completed'\r\n     },\r\n     {\r\n       id: '2',\r\n-      name: 'Incremental Backup - 2024-01-14',\r\n-      size: '450 MB',\r\n-      createdAt: new Date(Date.now() - 48 * 60 * 60 * 1000).toISOString(),\r\n+      name: 'Incremental Backup - 2024-01-19',\r\n+      size: '156 KB',\r\n+      createdAt: '2024-01-19 14:30:00',\r\n       type: 'incremental',\r\n-      status: 'completed',\r\n+      status: 'completed'\r\n     },\r\n     {\r\n       id: '3',\r\n-      name: 'Manual Backup - Emergency',\r\n-      size: '2.1 GB',\r\n-      createdAt: new Date(Date.now() - 72 * 60 * 60 * 1000).toISOString(),\r\n+      name: 'Manual Backup - 2024-01-18',\r\n+      size: '1.8 MB',\r\n+      createdAt: '2024-01-18 10:15:00',\r\n       type: 'manual',\r\n-      status: 'completed',\r\n-    },\r\n+      status: 'completed'\r\n+    }\r\n   ]);\r\n \r\n-  // Mock active user sessions\r\n-  const [userSessions, setUserSessions] = useState<UserSession[]>([\r\n+  const [activeSessions, setActiveSessions] = useState<UserSession[]>([\r\n     {\r\n       id: '1',\r\n-      userId: 'user1',\r\n-      userName: 'John Admin',\r\n+      userId: 'admin',\r\n+      userName: 'Admin User',\r\n       role: 'admin',\r\n-      loginTime: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\r\n-      lastActivity: new Date(Date.now() - 5 * 60 * 1000).toISOString(),\r\n+      loginTime: '2024-01-20 09:00:00',\r\n+      lastActivity: '2024-01-20 15:30:00',\r\n       ipAddress: '192.168.1.100',\r\n-      userAgent: 'Chrome 120.0.0.0',\r\n-      isActive: true,\r\n+      userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64)',\r\n+      isActive: true\r\n     },\r\n     {\r\n       id: '2',\r\n-      userId: 'user2',\r\n-      userName: 'Sarah Manager',\r\n+      userId: 'user1',\r\n+      userName: 'John Kimani',\r\n       role: 'user',\r\n-      loginTime: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),\r\n-      lastActivity: new Date(Date.now() - 30 * 60 * 1000).toISOString(),\r\n+      loginTime: '2024-01-20 08:30:00',\r\n+      lastActivity: '2024-01-20 14:45:00',\r\n       ipAddress: '192.168.1.101',\r\n-      userAgent: 'Firefox 121.0.0.0',\r\n-      isActive: true,\r\n-    },\r\n-    {\r\n-      id: '3',\r\n-      userId: 'user3',\r\n-      userName: 'Mike Operator',\r\n-      role: 'user',\r\n-      loginTime: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(),\r\n-      lastActivity: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\r\n-      ipAddress: '192.168.1.102',\r\n-      userAgent: 'Safari 17.2.0',\r\n-      isActive: false,\r\n-    },\r\n+      userAgent: 'Mozilla/5.0 (Android 10; Mobile)',\r\n+      isActive: true\r\n+    }\r\n   ]);\r\n \r\n-  // System configuration state\r\n-  const [systemConfig, setSystemConfig] = useState({\r\n-    maintenanceMode: false,\r\n-    autoBackup: true,\r\n-    backupFrequency: 'daily',\r\n-    sessionTimeout: 30,\r\n-    maxLoginAttempts: 5,\r\n-    passwordPolicy: 'strong',\r\n-    dataRetention: 365,\r\n-    logLevel: 'info',\r\n-    emailNotifications: true,\r\n-    smsNotifications: false,\r\n-  });\r\n-\r\n-  const handleBackup = (type: 'full' | 'incremental' | 'manual') => {\r\n-    const newBackup: SystemBackup = {\r\n-      id: Date.now().toString(),\r\n-      name: `${type.charAt(0).toUpperCase() + type.slice(1)} Backup - ${new Date().toLocaleDateString()}`,\r\n-      size: type === 'full' ? '2.3 GB' : '450 MB',\r\n-      createdAt: new Date().toISOString(),\r\n-      type,\r\n-      status: 'in-progress',\r\n-    };\r\n-\r\n-    setSystemBackups([newBackup, ...systemBackups]);\r\n-\r\n-    // Simulate backup completion\r\n-    setTimeout(() => {\r\n-      setSystemBackups(prev => \r\n-        prev.map(backup => \r\n-          backup.id === newBackup.id \r\n-            ? { ...backup, status: 'completed' as const }\r\n-            : backup\r\n-        )\r\n-      );\r\n-    }, 3000);\r\n+  // System metrics\r\n+  const systemMetrics = {\r\n+    totalUsers: 12,\r\n+    activeUsers: activeSessions.filter(s => s.isActive).length,\r\n+    totalRecords: sourceRecords.length,\r\n+    systemUptime: '99.9%',\r\n+    storageUsed: '2.4 MB',\r\n+    lastBackup: backups[0]?.createdAt || 'Never',\r\n+    systemLoad: 'Low',\r\n+    memoryUsage: '45%',\r\n+    cpuUsage: '23%'\r\n   };\r\n \r\n-  const handleTerminateSession = (sessionId: string) => {\r\n-    setUserSessions(prev => prev.filter(session => session.id !== sessionId));\r\n-  };\r\n+  if (user?.role !== 'admin') {\r\n+    return (\r\n+      <div className=\"flex items-center justify-center h-full\">\r\n+        <Card variant=\"enhanced\" className=\"text-center p-8\">\r\n+          <AlertTriangle className=\"h-16 w-16 text-red-500 mx-auto mb-4\" />\r\n+          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mb-2\">Access Denied</h2>\r\n+          <p className=\"text-gray-600 dark:text-gray-400\">This page is only accessible to administrators.</p>\r\n+        </Card>\r\n+      </div>\r\n+    );\r\n+  }\r\n \r\n-  const handleSystemRestart = () => {\r\n-    if (window.confirm('Are you sure you want to restart the system? This will log out all users.')) {\r\n-      alert('System restart initiated. All users will be logged out.');\r\n+  const handleSystemConfigChange = async (key: keyof SystemConfig, value: any) => {\r\n+    setIsLoading(true);\r\n+    try {\r\n+      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\r\n+      \r\n+      setSystemConfig(prev => ({ ...prev, [key]: value }));\r\n+      \r\n+      if (key === 'maintenanceMode') {\r\n+        showWarningNotification(\r\n+          value ? 'Maintenance Mode Enabled' : 'Maintenance Mode Disabled',\r\n+          value \r\n+            ? 'System is now in maintenance mode. Users will see a maintenance page.' \r\n+            : 'System is now accessible to all users.'\r\n+        );\r\n+      } else {\r\n+        showSuccessNotification('Configuration Updated', 'System configuration has been saved successfully.');\r\n+      }\r\n+    } catch (error) {\r\n+      showErrorNotification('Update Failed', 'Failed to update system configuration.');\r\n+    } finally {\r\n+      setIsLoading(false);\r\n     }\r\n   };\r\n \r\n-  const handleClearCache = () => {\r\n-    if (window.confirm('Are you sure you want to clear all cached data?')) {\r\n-      alert('Cache cleared successfully.');\r\n+  const handleCreateBackup = async () => {\r\n+    setIsLoading(true);\r\n+    try {\r\n+      await new Promise(resolve => setTimeout(resolve, 2000)); // Simulate backup process\r\n+      \r\n+      const newBackup: SystemBackup = {\r\n+        id: Date.now().toString(),\r\n+        name: `Manual Backup - ${new Date().toLocaleDateString()}`,\r\n+        size: '1.2 MB',\r\n+        createdAt: new Date().toLocaleString(),\r\n+        type: 'manual',\r\n+        status: 'completed'\r\n+      };\r\n+      \r\n+      setBackups(prev => [newBackup, ...prev]);\r\n+      showSuccessNotification('Backup Created', 'System backup has been created successfully.');\r\n+      setShowModal(false);\r\n+    } catch (error) {\r\n+      showErrorNotification('Backup Failed', 'Failed to create system backup.');\r\n+    } finally {\r\n+      setIsLoading(false);\r\n     }\r\n   };\r\n \r\n-  const handleExportData = () => {\r\n-    const data = {\r\n-      sourceRecords,\r\n-      exportedAt: new Date().toISOString(),\r\n-      exportedBy: user?.name || 'Unknown',\r\n-    };\r\n-    \r\n-    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\r\n-    const url = URL.createObjectURL(blob);\r\n-    const a = document.createElement('a');\r\n-    a.href = url;\r\n-    a.download = `mwalimu-transporters-backup-${new Date().toISOString().split('T')[0]}.json`;\r\n-    document.body.appendChild(a);\r\n-    a.click();\r\n-    document.body.removeChild(a);\r\n-    URL.revokeObjectURL(url);\r\n+  const handleTerminateSession = async (sessionId: string) => {\r\n+    setIsLoading(true);\r\n+    try {\r\n+      await new Promise(resolve => setTimeout(resolve, 500));\r\n+      \r\n+      setActiveSessions(prev => prev.filter(s => s.id !== sessionId));\r\n+      showSuccessNotification('Session Terminated', 'User session has been terminated successfully.');\r\n+    } catch (error) {\r\n+      showErrorNotification('Termination Failed', 'Failed to terminate user session.');\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n   };\r\n \r\n-  const handleImportData = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n-    const file = event.target.files?.[0];\r\n-    if (file) {\r\n-      const reader = new FileReader();\r\n-      reader.onload = (e) => {\r\n-        try {\r\n-          const data = JSON.parse(e.target?.result as string);\r\n-          alert(`Data import completed. ${data.sourceRecords?.length || 0} records imported.`);\r\n-        } catch (error) {\r\n-          alert('Error importing data. Please check the file format.');\r\n-        }\r\n+  const handleExportData = async () => {\r\n+    setIsLoading(true);\r\n+    try {\r\n+      const exportData = {\r\n+        sourceRecords,\r\n+        transportLogs,\r\n+        systemConfig,\r\n+        backups,\r\n+        activeSessions,\r\n+        exportDate: new Date().toISOString(),\r\n+        version: '1.0'\r\n       };\r\n-      reader.readAsText(file);\r\n+\r\n+      const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\r\n+      const url = URL.createObjectURL(blob);\r\n+      const a = document.createElement('a');\r\n+      a.href = url;\r\n+      a.download = `mwalimu-admin-backup-${new Date().toISOString().split('T')[0]}.json`;\r\n+      document.body.appendChild(a);\r\n+      a.click();\r\n+      document.body.removeChild(a);\r\n+      URL.revokeObjectURL(url);\r\n+\r\n+      showSuccessNotification('Data Exported', 'System data has been exported successfully.');\r\n+    } catch (error) {\r\n+      showErrorNotification('Export Failed', 'Failed to export system data.');\r\n+    } finally {\r\n+      setIsLoading(false);\r\n     }\r\n   };\r\n \r\n-  if (user?.role !== 'admin') {\r\n-    return (\r\n-      <div className=\"flex items-center justify-center h-full\">\r\n-        <p className=\"text-xl text-red-500\">Access Denied: Admins only.</p>\r\n-      </div>\r\n-    );\r\n-  }\r\n+  const tabs = [\r\n+    { id: 'overview', label: 'Overview', icon: BarChart3 },\r\n+    { id: 'users', label: 'User Management', icon: Users },\r\n+    { id: 'system', label: 'System Config', icon: Settings },\r\n+    { id: 'backup', label: 'Backup & Restore', icon: Database },\r\n+    { id: 'security', label: 'Security', icon: Shield },\r\n+  ];\r\n \r\n   return (\r\n-    <div className=\"space-y-6\">\r\n+    <div className=\"animate-fade-in\">\r\n       {/* Header */}\r\n-      <div className=\"flex items-center justify-between\">\r\n-        <div>\r\n-          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Admin Controls</h1>\r\n-          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n-            System administration and configuration management\r\n-          </p>\r\n-        </div>\r\n-        \r\n-        <div className=\"flex items-center space-x-2\">\r\n-          <button\r\n-            onClick={() => setShowSensitiveData(!showSensitiveData)}\r\n-            className=\"flex items-center space-x-2 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n-          >\r\n-            {showSensitiveData ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n-            <span>{showSensitiveData ? 'Hide' : 'Show'} Sensitive Data</span>\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* System Status */}\r\n-      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n-        <Card className=\"p-6\">\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <div>\r\n-              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">System Status</p>\r\n-              <p className=\"text-2xl font-bold text-green-600\">Online</p>\r\n-              <p className=\"text-xs text-gray-500 mt-1\">All services running</p>\r\n-            </div>\r\n-            <div className=\"p-3 rounded-full bg-green-100 dark:bg-green-900/20\">\r\n-              <CheckCircle className=\"h-6 w-6 text-green-600\" />\r\n-            </div>\r\n+      <div className=\"mb-6\">\r\n+        <div className=\"flex items-center justify-between\">\r\n+          <div>\r\n+            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100 mb-2\">Admin Controls</h1>\r\n+            <p className=\"text-lg text-gray-600 dark:text-gray-400\">\r\n+              System administration and configuration management\r\n+            </p>\r\n           </div>\r\n-        </Card>\r\n-\r\n-        <Card className=\"p-6\">\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <div>\r\n-              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Active Users</p>\r\n-              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n-                {userSessions.filter(s => s.isActive).length}\r\n+          <div className=\"flex items-center space-x-4\">\r\n+            <div className=\"text-right\">\r\n+              <div className=\"flex items-center space-x-2\">\r\n+                <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\r\n+                <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">System Online</span>\r\n+              </div>\r\n+              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n+                Uptime: {systemMetrics.systemUptime}\r\n               </p>\r\n-              <p className=\"text-xs text-gray-500 mt-1\">Currently logged in</p>\r\n             </div>\r\n-            <div className=\"p-3 rounded-full bg-blue-100 dark:bg-blue-900/20\">\r\n-              <Users className=\"h-6 w-6 text-blue-600\" />\r\n-            </div>\r\n           </div>\r\n-        </Card>\r\n-\r\n-        <Card className=\"p-6\">\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <div>\r\n-              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Database Size</p>\r\n-              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">45.2 MB</p>\r\n-              <p className=\"text-xs text-gray-500 mt-1\">Total records: {sourceRecords.length}</p>\r\n-            </div>\r\n-            <div className=\"p-3 rounded-full bg-purple-100 dark:bg-purple-900/20\">\r\n-              <Database className=\"h-6 w-6 text-purple-600\" />\r\n-            </div>\r\n-          </div>\r\n-        </Card>\r\n-\r\n-        <Card className=\"p-6\">\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <div>\r\n-              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Uptime</p>\r\n-              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">99.9%</p>\r\n-              <p className=\"text-xs text-gray-500 mt-1\">Last 30 days</p>\r\n-            </div>\r\n-            <div className=\"p-3 rounded-full bg-yellow-100 dark:bg-yellow-900/20\">\r\n-              <Clock className=\"h-6 w-6 text-yellow-600\" />\r\n-            </div>\r\n-          </div>\r\n-        </Card>\r\n+        </div>\r\n       </div>\r\n \r\n-      {/* System Configuration */}\r\n-      <Card className=\"p-6\">\r\n-        <div className=\"flex items-center justify-between mb-6\">\r\n-          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">System Configuration</h3>\r\n-          <Settings className=\"h-5 w-5 text-gray-500\" />\r\n-        </div>\r\n-        \r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n-          <div className=\"space-y-4\">\r\n-            <div className=\"flex items-center justify-between\">\r\n-              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Maintenance Mode</span>\r\n-              <button\r\n-                onClick={() => setSystemConfig({ ...systemConfig, maintenanceMode: !systemConfig.maintenanceMode })}\r\n-                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n-                  systemConfig.maintenanceMode ? 'bg-bright-green' : 'bg-gray-200 dark:bg-gray-700'\r\n-                }`}\r\n-              >\r\n-                <span\r\n-                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n-                    systemConfig.maintenanceMode ? 'translate-x-6' : 'translate-x-1'\r\n-                  }`}\r\n-                />\r\n-              </button>\r\n+      <div className=\"flex flex-col lg:flex-row gap-6\">\r\n+        {/* Sidebar */}\r\n+        <div className=\"lg:w-64\">\r\n+          <Card variant=\"enhanced\">\r\n+            <div className=\"mb-6\">\r\n+              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2\">Admin Panel</h3>\r\n+              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n+                System administration tools\r\n+              </p>\r\n             </div>\r\n             \r\n-            <div className=\"flex items-center justify-between\">\r\n-              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Auto Backup</span>\r\n-              <button\r\n-                onClick={() => setSystemConfig({ ...systemConfig, autoBackup: !systemConfig.autoBackup })}\r\n-                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n-                  systemConfig.autoBackup ? 'bg-bright-green' : 'bg-gray-200 dark:bg-gray-700'\r\n-                }`}\r\n-              >\r\n-                <span\r\n-                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n-                    systemConfig.autoBackup ? 'translate-x-6' : 'translate-x-1'\r\n+            <nav className=\"space-y-2\">\r\n+              {tabs.map((tab) => (\r\n+                <button\r\n+                  key={tab.id}\r\n+                  onClick={() => setActiveTab(tab.id as any)}\r\n+                  className={`flex items-center space-x-3 w-full px-3 py-2 rounded-lg text-left transition-all duration-200 hover-lift ${\r\n+                    activeTab === tab.id\r\n+                      ? 'bg-gradient-to-r from-bright-green to-green-600 text-white shadow-lg'\r\n+                      : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n                   }`}\r\n-                />\r\n-              </button>\r\n+                >\r\n+                  <tab.icon className=\"h-4 w-4\" />\r\n+                  <span className=\"font-medium\">{tab.label}</span>\r\n+                </button>\r\n+              ))}\r\n+            </nav>\r\n+          </Card>\r\n+        </div>\r\n+\r\n+        {/* Content */}\r\n+        <div className=\"flex-1\">\r\n+          {/* Overview Tab */}\r\n+          {activeTab === 'overview' && (\r\n+            <div className=\"space-y-6\">\r\n+              {/* System Metrics */}\r\n+              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n+                <Card variant=\"enhanced\">\r\n+                  <div className=\"flex items-center justify-between\">\r\n+                    <div>\r\n+                      <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Users</p>\r\n+                      <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{systemMetrics.totalUsers}</p>\r\n+                    </div>\r\n+                    <Users className=\"h-8 w-8 text-blue-500\" />\r\n+                  </div>\r\n+                </Card>\r\n+\r\n+                <Card variant=\"enhanced\">\r\n+                  <div className=\"flex items-center justify-between\">\r\n+                    <div>\r\n+                      <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Active Sessions</p>\r\n+                      <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{systemMetrics.activeUsers}</p>\r\n+                    </div>\r\n+                    <Activity className=\"h-8 w-8 text-green-500\" />\r\n+                  </div>\r\n+                </Card>\r\n+\r\n+                <Card variant=\"enhanced\">\r\n+                  <div className=\"flex items-center justify-between\">\r\n+                    <div>\r\n+                      <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Records</p>\r\n+                      <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{systemMetrics.totalRecords}</p>\r\n+                    </div>\r\n+                    <Database className=\"h-8 w-8 text-purple-500\" />\r\n+                  </div>\r\n+                </Card>\r\n+\r\n+                <Card variant=\"enhanced\">\r\n+                  <div className=\"flex items-center justify-between\">\r\n+                    <div>\r\n+                      <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">System Uptime</p>\r\n+                      <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{systemMetrics.systemUptime}</p>\r\n+                    </div>\r\n+                    <Server className=\"h-8 w-8 text-orange-500\" />\r\n+                  </div>\r\n+                </Card>\r\n+              </div>\r\n+\r\n+              {/* System Status */}\r\n+              <Card variant=\"enhanced\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100 mb-4\">System Status</h3>\r\n+                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n+                  <div className=\"p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\r\n+                    <div className=\"flex items-center space-x-3\">\r\n+                      <CheckCircle className=\"h-5 w-5 text-green-600\" />\r\n+                      <div>\r\n+                        <p className=\"font-medium text-gray-900 dark:text-gray-100\">System Load</p>\r\n+                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">{systemMetrics.systemLoad}</p>\r\n+                      </div>\r\n+                    </div>\r\n+                  </div>\r\n+\r\n+                  <div className=\"p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n+                    <div className=\"flex items-center space-x-3\">\r\n+                      <HardDrive className=\"h-5 w-5 text-blue-600\" />\r\n+                      <div>\r\n+                        <p className=\"font-medium text-gray-900 dark:text-gray-100\">Memory Usage</p>\r\n+                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">{systemMetrics.memoryUsage}</p>\r\n+                      </div>\r\n+                    </div>\r\n+                  </div>\r\n+\r\n+                  <div className=\"p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg\">\r\n+                    <div className=\"flex items-center space-x-3\">\r\n+                      <Activity className=\"h-5 w-5 text-purple-600\" />\r\n+                      <div>\r\n+                        <p className=\"font-medium text-gray-900 dark:text-gray-100\">CPU Usage</p>\r\n+                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">{systemMetrics.cpuUsage}</p>\r\n+                      </div>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+              </Card>\r\n             </div>\r\n-            \r\n-            <div className=\"flex items-center justify-between\">\r\n-              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Email Notifications</span>\r\n-              <button\r\n-                onClick={() => setSystemConfig({ ...systemConfig, emailNotifications: !systemConfig.emailNotifications })}\r\n-                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n-                  systemConfig.emailNotifications ? 'bg-bright-green' : 'bg-gray-200 dark:bg-gray-700'\r\n-                }`}\r\n-              >\r\n-                <span\r\n-                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n-                    systemConfig.emailNotifications ? 'translate-x-6' : 'translate-x-1'\r\n-                  }`}\r\n-                />\r\n-              </button>\r\n+          )}\r\n+\r\n+          {/* User Management Tab */}\r\n+          {activeTab === 'users' && (\r\n+            <div className=\"space-y-6\">\r\n+              <Card variant=\"enhanced\">\r\n+                <div className=\"flex items-center justify-between mb-6\">\r\n+                  <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">Active Sessions</h3>\r\n+                  <button\r\n+                    onClick={() => setShowModal(true)}\r\n+                    className=\"btn-primary flex items-center space-x-2\"\r\n+                  >\r\n+                    <Plus className=\"h-4 w-4\" />\r\n+                    <span>Add User</span>\r\n+                  </button>\r\n+                </div>\r\n+\r\n+                <div className=\"overflow-x-auto\">\r\n+                  <table className=\"w-full\">\r\n+                    <thead>\r\n+                      <tr className=\"border-b border-gray-200 dark:border-gray-700\">\r\n+                        <th className=\"text-left py-3 px-4 font-medium text-gray-700 dark:text-gray-300\">User</th>\r\n+                        <th className=\"text-left py-3 px-4 font-medium text-gray-700 dark:text-gray-300\">Role</th>\r\n+                        <th className=\"text-left py-3 px-4 font-medium text-gray-700 dark:text-gray-300\">Login Time</th>\r\n+                        <th className=\"text-left py-3 px-4 font-medium text-gray-700 dark:text-gray-300\">Last Activity</th>\r\n+                        <th className=\"text-left py-3 px-4 font-medium text-gray-700 dark:text-gray-300\">IP Address</th>\r\n+                        <th className=\"text-left py-3 px-4 font-medium text-gray-700 dark:text-gray-300\">Actions</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                      {activeSessions.map((session) => (\r\n+                        <tr key={session.id} className=\"border-b border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-800\">\r\n+                          <td className=\"py-3 px-4\">\r\n+                            <div>\r\n+                              <p className=\"font-medium text-gray-900 dark:text-gray-100\">{session.userName}</p>\r\n+                              <p className=\"text-sm text-gray-500 dark:text-gray-400\">{session.userId}</p>\r\n+                            </div>\r\n+                          </td>\r\n+                          <td className=\"py-3 px-4\">\r\n+                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n+                              session.role === 'admin' \r\n+                                ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-200'\r\n+                                : 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-200'\r\n+                            }`}>\r\n+                              {session.role}\r\n+                            </span>\r\n+                          </td>\r\n+                          <td className=\"py-3 px-4 text-sm text-gray-600 dark:text-gray-400\">{session.loginTime}</td>\r\n+                          <td className=\"py-3 px-4 text-sm text-gray-600 dark:text-gray-400\">{session.lastActivity}</td>\r\n+                          <td className=\"py-3 px-4 text-sm text-gray-600 dark:text-gray-400\">{session.ipAddress}</td>\r\n+                          <td className=\"py-3 px-4\">\r\n+                            <button\r\n+                              onClick={() => handleTerminateSession(session.id)}\r\n+                              disabled={isLoading}\r\n+                              className=\"text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-200 disabled:opacity-50\"\r\n+                            >\r\n+                              <X className=\"h-4 w-4\" />\r\n+                            </button>\r\n+                          </td>\r\n+                        </tr>\r\n+                      ))}\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+              </Card>\r\n             </div>\r\n-          </div>\r\n-          \r\n-          <div className=\"space-y-4\">\r\n-            <div>\r\n-              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n-                Backup Frequency\r\n-              </label>\r\n-              <select\r\n-                value={systemConfig.backupFrequency}\r\n-                onChange={(e) => setSystemConfig({ ...systemConfig, backupFrequency: e.target.value })}\r\n-                className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n-              >\r\n-                <option value=\"hourly\">Hourly</option>\r\n-                <option value=\"daily\">Daily</option>\r\n-                <option value=\"weekly\">Weekly</option>\r\n-                <option value=\"monthly\">Monthly</option>\r\n-              </select>\r\n+          )}\r\n+\r\n+          {/* System Configuration Tab */}\r\n+          {activeTab === 'system' && (\r\n+            <div className=\"space-y-6\">\r\n+              <Card variant=\"enhanced\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100 mb-6\">System Configuration</h3>\r\n+                \r\n+                <div className=\"space-y-6\">\r\n+                  {/* Maintenance Mode */}\r\n+                  <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n+                    <div>\r\n+                      <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">Maintenance Mode</h4>\r\n+                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Enable maintenance mode to restrict user access</p>\r\n+                    </div>\r\n+                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                      <input\r\n+                        type=\"checkbox\"\r\n+                        checked={systemConfig.maintenanceMode}\r\n+                        onChange={(e) => handleSystemConfigChange('maintenanceMode', e.target.checked)}\r\n+                        className=\"sr-only peer\"\r\n+                      />\r\n+                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                    </label>\r\n+                  </div>\r\n+\r\n+                  {/* Auto Backup */}\r\n+                  <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n+                    <div>\r\n+                      <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">Automatic Backup</h4>\r\n+                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Enable automatic system backups</p>\r\n+                    </div>\r\n+                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                      <input\r\n+                        type=\"checkbox\"\r\n+                        checked={systemConfig.autoBackup}\r\n+                        onChange={(e) => handleSystemConfigChange('autoBackup', e.target.checked)}\r\n+                        className=\"sr-only peer\"\r\n+                      />\r\n+                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                    </label>\r\n+                  </div>\r\n+\r\n+                  {/* Backup Frequency */}\r\n+                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+                    <FormSelect\r\n+                      label=\"Backup Frequency\"\r\n+                      value={systemConfig.backupFrequency}\r\n+                      onChange={(value) => handleSystemConfigChange('backupFrequency', value)}\r\n+                      options={[\r\n+                        { value: 'daily', label: 'Daily' },\r\n+                        { value: 'weekly', label: 'Weekly' },\r\n+                        { value: 'monthly', label: 'Monthly' },\r\n+                      ]}\r\n+                    />\r\n+\r\n+                    <FormInput\r\n+                      label=\"Data Retention (days)\"\r\n+                      type=\"number\"\r\n+                      value={systemConfig.dataRetention.toString()}\r\n+                      onChange={(value) => handleSystemConfigChange('dataRetention', parseInt(value as string))}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {/* Session Timeout */}\r\n+                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+                    <FormInput\r\n+                      label=\"Session Timeout (minutes)\"\r\n+                      type=\"number\"\r\n+                      value={systemConfig.sessionTimeout.toString()}\r\n+                      onChange={(value) => handleSystemConfigChange('sessionTimeout', parseInt(value as string))}\r\n+                    />\r\n+\r\n+                    <FormInput\r\n+                      label=\"Max File Size (MB)\"\r\n+                      type=\"number\"\r\n+                      value={systemConfig.maxFileSize.toString()}\r\n+                      onChange={(value) => handleSystemConfigChange('maxFileSize', parseInt(value as string))}\r\n+                    />\r\n+                  </div>\r\n+                </div>\r\n+              </Card>\r\n             </div>\r\n-            \r\n-            <div>\r\n-              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n-                Session Timeout (minutes)\r\n-              </label>\r\n-              <input\r\n-                type=\"number\"\r\n-                value={systemConfig.sessionTimeout}\r\n-                onChange={(e) => setSystemConfig({ ...systemConfig, sessionTimeout: Number(e.target.value) })}\r\n-                className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n-                min=\"5\"\r\n-                max=\"480\"\r\n-              />\r\n-            </div>\r\n-            \r\n-            <div>\r\n-              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n-                Max Login Attempts\r\n-              </label>\r\n-              <input\r\n-                type=\"number\"\r\n-                value={systemConfig.maxLoginAttempts}\r\n-                onChange={(e) => setSystemConfig({ ...systemConfig, maxLoginAttempts: Number(e.target.value) })}\r\n-                className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n-                min=\"3\"\r\n-                max=\"10\"\r\n-              />\r\n-            </div>\r\n-          </div>\r\n-          \r\n-          <div className=\"space-y-4\">\r\n-            <div>\r\n-              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n-                Password Policy\r\n-              </label>\r\n-              <select\r\n-                value={systemConfig.passwordPolicy}\r\n-                onChange={(e) => setSystemConfig({ ...systemConfig, passwordPolicy: e.target.value })}\r\n-                className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n-              >\r\n-                <option value=\"basic\">Basic (6+ chars)</option>\r\n-                <option value=\"medium\">Medium (8+ chars, numbers)</option>\r\n-                <option value=\"strong\">Strong (8+ chars, numbers, symbols)</option>\r\n-              </select>\r\n-            </div>\r\n-            \r\n-            <div>\r\n-              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n-                Data Retention (days)\r\n-              </label>\r\n-              <input\r\n-                type=\"number\"\r\n-                value={systemConfig.dataRetention}\r\n-                onChange={(e) => setSystemConfig({ ...systemConfig, dataRetention: Number(e.target.value) })}\r\n-                className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n-                min=\"30\"\r\n-                max=\"3650\"\r\n-              />\r\n-            </div>\r\n-            \r\n-            <div>\r\n-              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n-                Log Level\r\n-              </label>\r\n-              <select\r\n-                value={systemConfig.logLevel}\r\n-                onChange={(e) => setSystemConfig({ ...systemConfig, logLevel: e.target.value })}\r\n-                className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n-              >\r\n-                <option value=\"debug\">Debug</option>\r\n-                <option value=\"info\">Info</option>\r\n-                <option value=\"warn\">Warning</option>\r\n-                <option value=\"error\">Error</option>\r\n-              </select>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-        \r\n-        <div className=\"mt-6 flex justify-end\">\r\n-          <button className=\"px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\">\r\n-            Save Configuration\r\n-          </button>\r\n-        </div>\r\n-      </Card>\r\n+          )}\r\n \r\n-      {/* Data Management */}\r\n-      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n-        {/* Backup Management */}\r\n-        <Card className=\"p-6\">\r\n-          <div className=\"flex items-center justify-between mb-6\">\r\n-            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Backup Management</h3>\r\n-            <HardDrive className=\"h-5 w-5 text-gray-500\" />\r\n-          </div>\r\n-          \r\n-          <div className=\"space-y-4\">\r\n-            <div className=\"flex space-x-2\">\r\n-              <button\r\n-                onClick={() => handleBackup('full')}\r\n-                className=\"flex-1 px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\"\r\n-              >\r\n-                Full Backup\r\n-              </button>\r\n-              <button\r\n-                onClick={() => handleBackup('incremental')}\r\n-                className=\"flex-1 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-sm\"\r\n-              >\r\n-                Incremental\r\n-              </button>\r\n-              <button\r\n-                onClick={() => handleBackup('manual')}\r\n-                className=\"flex-1 px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm\"\r\n-              >\r\n-                Manual\r\n-              </button>\r\n-            </div>\r\n-            \r\n-            <div className=\"space-y-2\">\r\n-              <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">Recent Backups</h4>\r\n-              {systemBackups.slice(0, 3).map((backup) => (\r\n-                <div key={backup.id} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n-                  <div>\r\n-                    <p className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{backup.name}</p>\r\n-                    <p className=\"text-xs text-gray-500\">{backup.size} • {new Date(backup.createdAt).toLocaleDateString()}</p>\r\n-                  </div>\r\n-                  <div className=\"flex items-center space-x-2\">\r\n-                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n-                      backup.status === 'completed' ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-200' :\r\n-                      backup.status === 'in-progress' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-200' :\r\n-                      'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-200'\r\n-                    }`}>\r\n-                      {backup.status}\r\n-                    </span>\r\n-                    <button className=\"text-blue-600 hover:text-blue-800\">\r\n+          {/* Backup & Restore Tab */}\r\n+          {activeTab === 'backup' && (\r\n+            <div className=\"space-y-6\">\r\n+              <Card variant=\"enhanced\">\r\n+                <div className=\"flex items-center justify-between mb-6\">\r\n+                  <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">Backup Management</h3>\r\n+                  <div className=\"flex space-x-2\">\r\n+                    <button\r\n+                      onClick={() => {\r\n+                        setModalType('backup');\r\n+                        setShowModal(true);\r\n+                      }}\r\n+                      className=\"btn-primary flex items-center space-x-2\"\r\n+                    >\r\n+                      <Plus className=\"h-4 w-4\" />\r\n+                      <span>Create Backup</span>\r\n+                    </button>\r\n+                    <button\r\n+                      onClick={handleExportData}\r\n+                      disabled={isLoading}\r\n+                      className=\"btn-secondary flex items-center space-x-2\"\r\n+                    >\r\n                       <Download className=\"h-4 w-4\" />\r\n+                      <span>Export Data</span>\r\n                     </button>\r\n                   </div>\r\n                 </div>\r\n-              ))}\r\n+\r\n+                <div className=\"space-y-4\">\r\n+                  {backups.map((backup) => (\r\n+                    <div key={backup.id} className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n+                      <div className=\"flex items-center space-x-4\">\r\n+                        <div className={`p-2 rounded-lg ${\r\n+                          backup.status === 'completed' ? 'bg-green-100 dark:bg-green-900/20' :\r\n+                          backup.status === 'failed' ? 'bg-red-100 dark:bg-red-900/20' :\r\n+                          'bg-yellow-100 dark:bg-yellow-900/20'\r\n+                        }`}>\r\n+                          <Database className={`h-5 w-5 ${\r\n+                            backup.status === 'completed' ? 'text-green-600' :\r\n+                            backup.status === 'failed' ? 'text-red-600' :\r\n+                            'text-yellow-600'\r\n+                          }`} />\r\n+                        </div>\r\n+                        <div>\r\n+                          <p className=\"font-medium text-gray-900 dark:text-gray-100\">{backup.name}</p>\r\n+                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n+                            {backup.size} • {backup.type} • {backup.createdAt}\r\n+                          </p>\r\n+                        </div>\r\n+                      </div>\r\n+                      <div className=\"flex items-center space-x-2\">\r\n+                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n+                          backup.status === 'completed' ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-200' :\r\n+                          backup.status === 'failed' ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-200' :\r\n+                          'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-200'\r\n+                        }`}>\r\n+                          {backup.status}\r\n+                        </span>\r\n+                        <button className=\"text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200\">\r\n+                          <Download className=\"h-4 w-4\" />\r\n+                        </button>\r\n+                      </div>\r\n+                    </div>\r\n+                  ))}\r\n+                </div>\r\n+              </Card>\r\n             </div>\r\n-          </div>\r\n-        </Card>\r\n+          )}\r\n \r\n-        {/* Data Export/Import */}\r\n-        <Card className=\"p-6\">\r\n-          <div className=\"flex items-center justify-between mb-6\">\r\n-            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Data Management</h3>\r\n-            <Database className=\"h-5 w-5 text-gray-500\" />\r\n-          </div>\r\n-          \r\n-          <div className=\"space-y-4\">\r\n-            <div className=\"flex space-x-2\">\r\n+          {/* Security Tab */}\r\n+          {activeTab === 'security' && (\r\n+            <div className=\"space-y-6\">\r\n+              <Card variant=\"enhanced\">\r\n+                <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100 mb-6\">Security Settings</h3>\r\n+                \r\n+                <div className=\"space-y-6\">\r\n+                  {/* Two-Factor Authentication */}\r\n+                  <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n+                    <div>\r\n+                      <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">Two-Factor Authentication</h4>\r\n+                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Require 2FA for all admin accounts</p>\r\n+                    </div>\r\n+                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                      <input\r\n+                        type=\"checkbox\"\r\n+                        checked={systemConfig.twoFactorAuth}\r\n+                        onChange={(e) => handleSystemConfigChange('twoFactorAuth', e.target.checked)}\r\n+                        className=\"sr-only peer\"\r\n+                      />\r\n+                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                    </label>\r\n+                  </div>\r\n+\r\n+                  {/* System Logs */}\r\n+                  <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n+                    <div>\r\n+                      <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">System Logging</h4>\r\n+                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Enable detailed system activity logging</p>\r\n+                    </div>\r\n+                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                      <input\r\n+                        type=\"checkbox\"\r\n+                        checked={systemConfig.systemLogs}\r\n+                        onChange={(e) => handleSystemConfigChange('systemLogs', e.target.checked)}\r\n+                        className=\"sr-only peer\"\r\n+                      />\r\n+                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                    </label>\r\n+                  </div>\r\n+\r\n+                  {/* Email Notifications */}\r\n+                  <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n+                    <div>\r\n+                      <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">Email Notifications</h4>\r\n+                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Send security alerts via email</p>\r\n+                    </div>\r\n+                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                      <input\r\n+                        type=\"checkbox\"\r\n+                        checked={systemConfig.emailNotifications}\r\n+                        onChange={(e) => handleSystemConfigChange('emailNotifications', e.target.checked)}\r\n+                        className=\"sr-only peer\"\r\n+                      />\r\n+                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                    </label>\r\n+                  </div>\r\n+                </div>\r\n+              </Card>\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Modal */}\r\n+      {showModal && (\r\n+        <Modal onClose={() => setShowModal(false)}>\r\n+          <div className=\"p-6\">\r\n+            <div className=\"flex items-center justify-between mb-4\">\r\n+              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n+                {modalType === 'backup' ? 'Create System Backup' : 'Add New User'}\r\n+              </h3>\r\n               <button\r\n-                onClick={handleExportData}\r\n-                className=\"flex-1 flex items-center justify-center space-x-2 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-sm\"\r\n+                onClick={() => setShowModal(false)}\r\n+                className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-200\"\r\n               >\r\n-                <Download className=\"h-4 w-4\" />\r\n-                <span>Export Data</span>\r\n+                <X className=\"h-5 w-5\" />\r\n               </button>\r\n-              <label className=\"flex-1 flex items-center justify-center space-x-2 px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm cursor-pointer\">\r\n-                <Upload className=\"h-4 w-4\" />\r\n-                <span>Import Data</span>\r\n-                <input\r\n-                  type=\"file\"\r\n-                  accept=\".json\"\r\n-                  onChange={handleImportData}\r\n-                  className=\"hidden\"\r\n-                />\r\n-              </label>\r\n             </div>\r\n-            \r\n-            <div className=\"space-y-2\">\r\n-              <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">Quick Actions</h4>\r\n-              <div className=\"grid grid-cols-2 gap-2\">\r\n-                <button\r\n-                  onClick={handleClearCache}\r\n-                  className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 text-sm\"\r\n-                >\r\n-                  Clear Cache\r\n-                </button>\r\n-                <button\r\n-                  onClick={handleSystemRestart}\r\n-                  className=\"px-3 py-2 border border-red-300 dark:border-red-600 rounded-lg hover:bg-red-50 dark:hover:bg-red-900/20 text-red-600 text-sm\"\r\n-                >\r\n-                  Restart System\r\n-                </button>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        </Card>\r\n-      </div>\r\n \r\n-      {/* Active User Sessions */}\r\n-      <Card className=\"p-6\">\r\n-        <div className=\"flex items-center justify-between mb-6\">\r\n-          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Active User Sessions</h3>\r\n-          <Users className=\"h-5 w-5 text-gray-500\" />\r\n-        </div>\r\n-        \r\n-        <div className=\"space-y-3\">\r\n-          {userSessions.map((session) => (\r\n-            <div key={session.id} className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n-              <div className=\"flex items-center space-x-4\">\r\n-                <div className={`w-3 h-3 rounded-full ${session.isActive ? 'bg-green-500' : 'bg-gray-400'}`}></div>\r\n-                <div>\r\n-                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{session.userName}</p>\r\n-                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">{session.role}</p>\r\n+            {modalType === 'backup' ? (\r\n+              <div className=\"space-y-4\">\r\n+                <p className=\"text-gray-600 dark:text-gray-400\">\r\n+                  This will create a complete backup of all system data including records, configurations, and user data.\r\n+                </p>\r\n+                <div className=\"flex justify-end space-x-3\">\r\n+                  <button\r\n+                    onClick={() => setShowModal(false)}\r\n+                    className=\"btn-outline\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button\r\n+                    onClick={handleCreateBackup}\r\n+                    disabled={isLoading}\r\n+                    className=\"btn-primary flex items-center space-x-2\"\r\n+                  >\r\n+                    {isLoading ? <RefreshCw className=\"h-4 w-4 animate-spin\" /> : <Save className=\"h-4 w-4\" />}\r\n+                    <span>{isLoading ? 'Creating...' : 'Create Backup'}</span>\r\n+                  </button>\r\n                 </div>\r\n               </div>\r\n-              \r\n-              <div className=\"text-right\">\r\n-                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n-                  {showSensitiveData ? session.ipAddress : '***.***.***.***'}\r\n-                </p>\r\n-                <p className=\"text-xs text-gray-500\">\r\n-                  Last activity: {new Date(session.lastActivity).toLocaleTimeString()}\r\n-                </p>\r\n+            ) : (\r\n+              <div className=\"space-y-4\">\r\n+                <FormInput\r\n+                  label=\"Username\"\r\n+                  type=\"text\"\r\n+                  value=\"\"\r\n+                  onChange={() => {}}\r\n+                  required\r\n+                />\r\n+                <FormInput\r\n+                  label=\"Email\"\r\n+                  type=\"email\"\r\n+                  value=\"\"\r\n+                  onChange={() => {}}\r\n+                  required\r\n+                />\r\n+                <FormSelect\r\n+                  label=\"Role\"\r\n+                  value=\"\"\r\n+                  onChange={() => {}}\r\n+                  options={[\r\n+                    { value: 'user', label: 'User' },\r\n+                    { value: 'admin', label: 'Admin' },\r\n+                  ]}\r\n+                />\r\n+                <div className=\"flex justify-end space-x-3\">\r\n+                  <button\r\n+                    onClick={() => setShowModal(false)}\r\n+                    className=\"btn-outline\"\r\n+                  >\r\n+                    Cancel\r\n+                  </button>\r\n+                  <button className=\"btn-primary\">\r\n+                    Add User\r\n+                  </button>\r\n+                </div>\r\n               </div>\r\n-              \r\n-              <div className=\"flex items-center space-x-2\">\r\n-                <button\r\n-                  onClick={() => handleTerminateSession(session.id)}\r\n-                  className=\"px-3 py-1 text-red-600 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg text-sm\"\r\n-                >\r\n-                  Terminate\r\n-                </button>\r\n-              </div>\r\n-            </div>\r\n-          ))}\r\n-        </div>\r\n-      </Card>\r\n-\r\n-      {/* System Information */}\r\n-      <Card className=\"p-6\">\r\n-        <div className=\"flex items-center justify-between mb-6\">\r\n-          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">System Information</h3>\r\n-          <Server className=\"h-5 w-5 text-gray-500\" />\r\n-        </div>\r\n-        \r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n-          <div className=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n-            <div className=\"flex items-center space-x-2 mb-2\">\r\n-              <Cpu className=\"h-4 w-4 text-blue-500\" />\r\n-              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">CPU Usage</span>\r\n-            </div>\r\n-            <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">45%</p>\r\n+            )}\r\n           </div>\r\n-          \r\n-          <div className=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n-            <div className=\"flex items-center space-x-2 mb-2\">\r\n-              <MemoryStick className=\"h-4 w-4 text-green-500\" />\r\n-              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Memory</span>\r\n-            </div>\r\n-            <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">78%</p>\r\n-          </div>\r\n-          \r\n-          <div className=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n-            <div className=\"flex items-center space-x-2 mb-2\">\r\n-              <HardDrive className=\"h-4 w-4 text-purple-500\" />\r\n-              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Disk Space</span>\r\n-            </div>\r\n-            <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">62%</p>\r\n-          </div>\r\n-          \r\n-          <div className=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n-            <div className=\"flex items-center space-x-2 mb-2\">\r\n-              <Globe className=\"h-4 w-4 text-orange-500\" />\r\n-              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Network</span>\r\n-            </div>\r\n-            <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">120ms</p>\r\n-          </div>\r\n-        </div>\r\n-      </Card>\r\n+        </Modal>\r\n+      )}\r\n     </div>\r\n   );\r\n-};\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1759907823457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState, useEffect } from 'react';\r\n+import React, { useState } from 'react';\r\n import { Card } from '../../components/Card';\r\n import { Modal } from '../../components/Modal';\r\n import { FormInput } from '../../components/FormInput';\r\n import { FormSelect } from '../../components/FormSelect';\r\n@@ -9,33 +9,18 @@\n   Settings, \r\n   Users, \r\n   Database, \r\n   Shield, \r\n-  Key, \r\n-  Trash2, \r\n   Download, \r\n-  Upload,\r\n   RefreshCw,\r\n   AlertTriangle,\r\n   CheckCircle,\r\n-  Clock,\r\n   Activity,\r\n   Server,\r\n   HardDrive,\r\n-  Globe,\r\n-  Lock,\r\n-  Unlock,\r\n-  Eye,\r\n-  EyeOff,\r\n   Save,\r\n   X,\r\n-  Plus,\r\n-  Edit,\r\n-  Search,\r\n-  Filter,\r\n-  BarChart3,\r\n-  TrendingUp,\r\n-  TrendingDown\r\n+  Plus\r\n } from 'lucide-react';\r\n \r\n interface SystemBackup {\r\n   id: string;\r\n@@ -697,9 +682,9 @@\n       </div>\r\n \r\n       {/* Modal */}\r\n       {showModal && (\r\n-        <Modal onClose={() => setShowModal(false)}>\r\n+        <Modal isOpen={showModal} onClose={() => setShowModal(false)} title={modalType === 'backup' ? 'Create System Backup' : 'Add New User'}>\r\n           <div className=\"p-6\">\r\n             <div className=\"flex items-center justify-between mb-4\">\r\n               <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n                 {modalType === 'backup' ? 'Create System Backup' : 'Add New User'}\r\n"
                },
                {
                    "date": 1759907898805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,10 @@\n   Server,\r\n   HardDrive,\r\n   Save,\r\n   X,\r\n-  Plus\r\n+  Plus,\r\n+  BarChart3\r\n } from 'lucide-react';\r\n \r\n interface SystemBackup {\r\n   id: string;\r\n"
                }
            ],
            "date": 1759903929624,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Card } from '../../components/Card';\r\nimport { Modal } from '../../components/Modal';\r\nimport { FormInput } from '../../components/FormInput';\r\nimport { FormSelect } from '../../components/FormSelect';\r\nimport { useApp } from '../../context/AppContext';\r\nimport { \r\n  Settings, \r\n  Users, \r\n  Database, \r\n  Shield, \r\n  Key, \r\n  Trash2, \r\n  Download, \r\n  Upload,\r\n  RefreshCw,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Clock,\r\n  Activity,\r\n  Server,\r\n  HardDrive,\r\n  Cpu,\r\n  MemoryStick,\r\n  Globe,\r\n  Lock,\r\n  Unlock,\r\n  Eye,\r\n  EyeOff\r\n} from 'lucide-react';\r\n\r\ninterface SystemBackup {\r\n  id: string;\r\n  name: string;\r\n  size: string;\r\n  createdAt: string;\r\n  type: 'full' | 'incremental' | 'manual';\r\n  status: 'completed' | 'failed' | 'in-progress';\r\n}\r\n\r\ninterface UserSession {\r\n  id: string;\r\n  userId: string;\r\n  userName: string;\r\n  role: string;\r\n  loginTime: string;\r\n  lastActivity: string;\r\n  ipAddress: string;\r\n  userAgent: string;\r\n  isActive: boolean;\r\n}\r\n\r\nexport const AdminControlsPage: React.FC = () => {\r\n  const { user, sourceRecords } = useApp();\r\n  const [isBackupModalOpen, setIsBackupModalOpen] = useState(false);\r\n  const [isUserModalOpen, setIsUserModalOpen] = useState(false);\r\n  const [isSystemModalOpen, setIsSystemModalOpen] = useState(false);\r\n  const [showSensitiveData, setShowSensitiveData] = useState(false);\r\n\r\n  // Mock system backups\r\n  const [systemBackups, setSystemBackups] = useState<SystemBackup[]>([\r\n    {\r\n      id: '1',\r\n      name: 'Daily Backup - 2024-01-15',\r\n      size: '2.3 GB',\r\n      createdAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\r\n      type: 'full',\r\n      status: 'completed',\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Incremental Backup - 2024-01-14',\r\n      size: '450 MB',\r\n      createdAt: new Date(Date.now() - 48 * 60 * 60 * 1000).toISOString(),\r\n      type: 'incremental',\r\n      status: 'completed',\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Manual Backup - Emergency',\r\n      size: '2.1 GB',\r\n      createdAt: new Date(Date.now() - 72 * 60 * 60 * 1000).toISOString(),\r\n      type: 'manual',\r\n      status: 'completed',\r\n    },\r\n  ]);\r\n\r\n  // Mock active user sessions\r\n  const [userSessions, setUserSessions] = useState<UserSession[]>([\r\n    {\r\n      id: '1',\r\n      userId: 'user1',\r\n      userName: 'John Admin',\r\n      role: 'admin',\r\n      loginTime: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\r\n      lastActivity: new Date(Date.now() - 5 * 60 * 1000).toISOString(),\r\n      ipAddress: '192.168.1.100',\r\n      userAgent: 'Chrome 120.0.0.0',\r\n      isActive: true,\r\n    },\r\n    {\r\n      id: '2',\r\n      userId: 'user2',\r\n      userName: 'Sarah Manager',\r\n      role: 'user',\r\n      loginTime: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),\r\n      lastActivity: new Date(Date.now() - 30 * 60 * 1000).toISOString(),\r\n      ipAddress: '192.168.1.101',\r\n      userAgent: 'Firefox 121.0.0.0',\r\n      isActive: true,\r\n    },\r\n    {\r\n      id: '3',\r\n      userId: 'user3',\r\n      userName: 'Mike Operator',\r\n      role: 'user',\r\n      loginTime: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(),\r\n      lastActivity: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\r\n      ipAddress: '192.168.1.102',\r\n      userAgent: 'Safari 17.2.0',\r\n      isActive: false,\r\n    },\r\n  ]);\r\n\r\n  // System configuration state\r\n  const [systemConfig, setSystemConfig] = useState({\r\n    maintenanceMode: false,\r\n    autoBackup: true,\r\n    backupFrequency: 'daily',\r\n    sessionTimeout: 30,\r\n    maxLoginAttempts: 5,\r\n    passwordPolicy: 'strong',\r\n    dataRetention: 365,\r\n    logLevel: 'info',\r\n    emailNotifications: true,\r\n    smsNotifications: false,\r\n  });\r\n\r\n  const handleBackup = (type: 'full' | 'incremental' | 'manual') => {\r\n    const newBackup: SystemBackup = {\r\n      id: Date.now().toString(),\r\n      name: `${type.charAt(0).toUpperCase() + type.slice(1)} Backup - ${new Date().toLocaleDateString()}`,\r\n      size: type === 'full' ? '2.3 GB' : '450 MB',\r\n      createdAt: new Date().toISOString(),\r\n      type,\r\n      status: 'in-progress',\r\n    };\r\n\r\n    setSystemBackups([newBackup, ...systemBackups]);\r\n\r\n    // Simulate backup completion\r\n    setTimeout(() => {\r\n      setSystemBackups(prev => \r\n        prev.map(backup => \r\n          backup.id === newBackup.id \r\n            ? { ...backup, status: 'completed' as const }\r\n            : backup\r\n        )\r\n      );\r\n    }, 3000);\r\n  };\r\n\r\n  const handleTerminateSession = (sessionId: string) => {\r\n    setUserSessions(prev => prev.filter(session => session.id !== sessionId));\r\n  };\r\n\r\n  const handleSystemRestart = () => {\r\n    if (window.confirm('Are you sure you want to restart the system? This will log out all users.')) {\r\n      alert('System restart initiated. All users will be logged out.');\r\n    }\r\n  };\r\n\r\n  const handleClearCache = () => {\r\n    if (window.confirm('Are you sure you want to clear all cached data?')) {\r\n      alert('Cache cleared successfully.');\r\n    }\r\n  };\r\n\r\n  const handleExportData = () => {\r\n    const data = {\r\n      sourceRecords,\r\n      exportedAt: new Date().toISOString(),\r\n      exportedBy: user?.name || 'Unknown',\r\n    };\r\n    \r\n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `mwalimu-transporters-backup-${new Date().toISOString().split('T')[0]}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleImportData = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        try {\r\n          const data = JSON.parse(e.target?.result as string);\r\n          alert(`Data import completed. ${data.sourceRecords?.length || 0} records imported.`);\r\n        } catch (error) {\r\n          alert('Error importing data. Please check the file format.');\r\n        }\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  if (user?.role !== 'admin') {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-full\">\r\n        <p className=\"text-xl text-red-500\">Access Denied: Admins only.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Admin Controls</h1>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n            System administration and configuration management\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-2\">\r\n          <button\r\n            onClick={() => setShowSensitiveData(!showSensitiveData)}\r\n            className=\"flex items-center space-x-2 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n          >\r\n            {showSensitiveData ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n            <span>{showSensitiveData ? 'Hide' : 'Show'} Sensitive Data</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* System Status */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <Card className=\"p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">System Status</p>\r\n              <p className=\"text-2xl font-bold text-green-600\">Online</p>\r\n              <p className=\"text-xs text-gray-500 mt-1\">All services running</p>\r\n            </div>\r\n            <div className=\"p-3 rounded-full bg-green-100 dark:bg-green-900/20\">\r\n              <CheckCircle className=\"h-6 w-6 text-green-600\" />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Active Users</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n                {userSessions.filter(s => s.isActive).length}\r\n              </p>\r\n              <p className=\"text-xs text-gray-500 mt-1\">Currently logged in</p>\r\n            </div>\r\n            <div className=\"p-3 rounded-full bg-blue-100 dark:bg-blue-900/20\">\r\n              <Users className=\"h-6 w-6 text-blue-600\" />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Database Size</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">45.2 MB</p>\r\n              <p className=\"text-xs text-gray-500 mt-1\">Total records: {sourceRecords.length}</p>\r\n            </div>\r\n            <div className=\"p-3 rounded-full bg-purple-100 dark:bg-purple-900/20\">\r\n              <Database className=\"h-6 w-6 text-purple-600\" />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Uptime</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">99.9%</p>\r\n              <p className=\"text-xs text-gray-500 mt-1\">Last 30 days</p>\r\n            </div>\r\n            <div className=\"p-3 rounded-full bg-yellow-100 dark:bg-yellow-900/20\">\r\n              <Clock className=\"h-6 w-6 text-yellow-600\" />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* System Configuration */}\r\n      <Card className=\"p-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">System Configuration</h3>\r\n          <Settings className=\"h-5 w-5 text-gray-500\" />\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Maintenance Mode</span>\r\n              <button\r\n                onClick={() => setSystemConfig({ ...systemConfig, maintenanceMode: !systemConfig.maintenanceMode })}\r\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n                  systemConfig.maintenanceMode ? 'bg-bright-green' : 'bg-gray-200 dark:bg-gray-700'\r\n                }`}\r\n              >\r\n                <span\r\n                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n                    systemConfig.maintenanceMode ? 'translate-x-6' : 'translate-x-1'\r\n                  }`}\r\n                />\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Auto Backup</span>\r\n              <button\r\n                onClick={() => setSystemConfig({ ...systemConfig, autoBackup: !systemConfig.autoBackup })}\r\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n                  systemConfig.autoBackup ? 'bg-bright-green' : 'bg-gray-200 dark:bg-gray-700'\r\n                }`}\r\n              >\r\n                <span\r\n                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n                    systemConfig.autoBackup ? 'translate-x-6' : 'translate-x-1'\r\n                  }`}\r\n                />\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Email Notifications</span>\r\n              <button\r\n                onClick={() => setSystemConfig({ ...systemConfig, emailNotifications: !systemConfig.emailNotifications })}\r\n                className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n                  systemConfig.emailNotifications ? 'bg-bright-green' : 'bg-gray-200 dark:bg-gray-700'\r\n                }`}\r\n              >\r\n                <span\r\n                  className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n                    systemConfig.emailNotifications ? 'translate-x-6' : 'translate-x-1'\r\n                  }`}\r\n                />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Backup Frequency\r\n              </label>\r\n              <select\r\n                value={systemConfig.backupFrequency}\r\n                onChange={(e) => setSystemConfig({ ...systemConfig, backupFrequency: e.target.value })}\r\n                className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n              >\r\n                <option value=\"hourly\">Hourly</option>\r\n                <option value=\"daily\">Daily</option>\r\n                <option value=\"weekly\">Weekly</option>\r\n                <option value=\"monthly\">Monthly</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Session Timeout (minutes)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={systemConfig.sessionTimeout}\r\n                onChange={(e) => setSystemConfig({ ...systemConfig, sessionTimeout: Number(e.target.value) })}\r\n                className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n                min=\"5\"\r\n                max=\"480\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Max Login Attempts\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={systemConfig.maxLoginAttempts}\r\n                onChange={(e) => setSystemConfig({ ...systemConfig, maxLoginAttempts: Number(e.target.value) })}\r\n                className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n                min=\"3\"\r\n                max=\"10\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Password Policy\r\n              </label>\r\n              <select\r\n                value={systemConfig.passwordPolicy}\r\n                onChange={(e) => setSystemConfig({ ...systemConfig, passwordPolicy: e.target.value })}\r\n                className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n              >\r\n                <option value=\"basic\">Basic (6+ chars)</option>\r\n                <option value=\"medium\">Medium (8+ chars, numbers)</option>\r\n                <option value=\"strong\">Strong (8+ chars, numbers, symbols)</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Data Retention (days)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={systemConfig.dataRetention}\r\n                onChange={(e) => setSystemConfig({ ...systemConfig, dataRetention: Number(e.target.value) })}\r\n                className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n                min=\"30\"\r\n                max=\"3650\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Log Level\r\n              </label>\r\n              <select\r\n                value={systemConfig.logLevel}\r\n                onChange={(e) => setSystemConfig({ ...systemConfig, logLevel: e.target.value })}\r\n                className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n              >\r\n                <option value=\"debug\">Debug</option>\r\n                <option value=\"info\">Info</option>\r\n                <option value=\"warn\">Warning</option>\r\n                <option value=\"error\">Error</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-6 flex justify-end\">\r\n          <button className=\"px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\">\r\n            Save Configuration\r\n          </button>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Data Management */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Backup Management */}\r\n        <Card className=\"p-6\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Backup Management</h3>\r\n            <HardDrive className=\"h-5 w-5 text-gray-500\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex space-x-2\">\r\n              <button\r\n                onClick={() => handleBackup('full')}\r\n                className=\"flex-1 px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\"\r\n              >\r\n                Full Backup\r\n              </button>\r\n              <button\r\n                onClick={() => handleBackup('incremental')}\r\n                className=\"flex-1 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-sm\"\r\n              >\r\n                Incremental\r\n              </button>\r\n              <button\r\n                onClick={() => handleBackup('manual')}\r\n                className=\"flex-1 px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm\"\r\n              >\r\n                Manual\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">Recent Backups</h4>\r\n              {systemBackups.slice(0, 3).map((backup) => (\r\n                <div key={backup.id} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{backup.name}</p>\r\n                    <p className=\"text-xs text-gray-500\">{backup.size} • {new Date(backup.createdAt).toLocaleDateString()}</p>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                      backup.status === 'completed' ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-200' :\r\n                      backup.status === 'in-progress' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-200' :\r\n                      'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-200'\r\n                    }`}>\r\n                      {backup.status}\r\n                    </span>\r\n                    <button className=\"text-blue-600 hover:text-blue-800\">\r\n                      <Download className=\"h-4 w-4\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        {/* Data Export/Import */}\r\n        <Card className=\"p-6\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Data Management</h3>\r\n            <Database className=\"h-5 w-5 text-gray-500\" />\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex space-x-2\">\r\n              <button\r\n                onClick={handleExportData}\r\n                className=\"flex-1 flex items-center justify-center space-x-2 px-3 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-sm\"\r\n              >\r\n                <Download className=\"h-4 w-4\" />\r\n                <span>Export Data</span>\r\n              </button>\r\n              <label className=\"flex-1 flex items-center justify-center space-x-2 px-3 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm cursor-pointer\">\r\n                <Upload className=\"h-4 w-4\" />\r\n                <span>Import Data</span>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".json\"\r\n                  onChange={handleImportData}\r\n                  className=\"hidden\"\r\n                />\r\n              </label>\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">Quick Actions</h4>\r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                <button\r\n                  onClick={handleClearCache}\r\n                  className=\"px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 text-sm\"\r\n                >\r\n                  Clear Cache\r\n                </button>\r\n                <button\r\n                  onClick={handleSystemRestart}\r\n                  className=\"px-3 py-2 border border-red-300 dark:border-red-600 rounded-lg hover:bg-red-50 dark:hover:bg-red-900/20 text-red-600 text-sm\"\r\n                >\r\n                  Restart System\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Active User Sessions */}\r\n      <Card className=\"p-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Active User Sessions</h3>\r\n          <Users className=\"h-5 w-5 text-gray-500\" />\r\n        </div>\r\n        \r\n        <div className=\"space-y-3\">\r\n          {userSessions.map((session) => (\r\n            <div key={session.id} className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div className={`w-3 h-3 rounded-full ${session.isActive ? 'bg-green-500' : 'bg-gray-400'}`}></div>\r\n                <div>\r\n                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{session.userName}</p>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">{session.role}</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"text-right\">\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                  {showSensitiveData ? session.ipAddress : '***.***.***.***'}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500\">\r\n                  Last activity: {new Date(session.lastActivity).toLocaleTimeString()}\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center space-x-2\">\r\n                <button\r\n                  onClick={() => handleTerminateSession(session.id)}\r\n                  className=\"px-3 py-1 text-red-600 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg text-sm\"\r\n                >\r\n                  Terminate\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Card>\r\n\r\n      {/* System Information */}\r\n      <Card className=\"p-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">System Information</h3>\r\n          <Server className=\"h-5 w-5 text-gray-500\" />\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n          <div className=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n            <div className=\"flex items-center space-x-2 mb-2\">\r\n              <Cpu className=\"h-4 w-4 text-blue-500\" />\r\n              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">CPU Usage</span>\r\n            </div>\r\n            <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">45%</p>\r\n          </div>\r\n          \r\n          <div className=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n            <div className=\"flex items-center space-x-2 mb-2\">\r\n              <MemoryStick className=\"h-4 w-4 text-green-500\" />\r\n              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Memory</span>\r\n            </div>\r\n            <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">78%</p>\r\n          </div>\r\n          \r\n          <div className=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n            <div className=\"flex items-center space-x-2 mb-2\">\r\n              <HardDrive className=\"h-4 w-4 text-purple-500\" />\r\n              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Disk Space</span>\r\n            </div>\r\n            <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">62%</p>\r\n          </div>\r\n          \r\n          <div className=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n            <div className=\"flex items-center space-x-2 mb-2\">\r\n              <Globe className=\"h-4 w-4 text-orange-500\" />\r\n              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Network</span>\r\n            </div>\r\n            <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">120ms</p>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n"
        }
    ]
}