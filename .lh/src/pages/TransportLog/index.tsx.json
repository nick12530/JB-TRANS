{
    "sourceFile": "src/pages/TransportLog/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1759569426040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759569438001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n     <div className=\"space-y-6\">\r\n       {/* Header */}\r\n       <div className=\"flex items-center justify-between\">\r\n         <div>\r\n-          <h1 className={label: 'Transport Log';\r\n+          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Transport Log</h1>\r\n           <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n             Track vehicles, drivers, and goods in transit\r\n           </p>\r\n         </div>\r\n"
                },
                {
                    "date": 1759569487923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,10 +161,81 @@\n             {/* Header with Status */}\r\n             <div className=\"flex items-center justify-between mb-4\">\r\n               <div className=\"flex items-center space-x-2\">\r\n                 {getStatusIcon(entry.status)}\r\n-              </button>\r\n+                <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(entry.status)}`}>\r\n+                  {getStatusText(entry.status)}\r\n+                )}\r\n+              </div>\r\n+              <div className=\"text-right\">\r\n+                <div className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{entry.tripId}</div>\r\n+                <div className=\"text-xs text-gray-500 dark:text-gray-400\">{formatDate(entry.date)}</div>\r\n+              </div>\r\n             </div>\r\n+\r\n+            {/* Vehicle & Driver Info */}\r\n+            <div className=\"space-y-3\">\r\n+              <div className=\"grid grid-cols-2 gap-4\">\r\n+                <div>\r\n+                  <p className=\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide\">Driver</p>\r\n+                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{entry.driver}</p>\r\n+                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">{entry.driverPhone}</p>\r\n+                </div>\r\n+                <div>\r\n+                  <p className=\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide\">Vehicle</p>\r\n+                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{entry.vehicleReg}</p>\r\n+                  {entry.vehicleMake && (\r\n+                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">{entry.vehicleMake}</p>\r\n+                  )}\r\n+                </div>\r\n+              </div>\r\n+\r\n+              <div className=\"grid grid-cols-2 gap-4\">\r\n+                <div>\r\n+                  <p className=\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide\">Route</p>\r\n+                  <div className=\"font-medium text-gray-900 dark:text-gray-100\">{entry.pickupPoint}</div>\r\n+                  <div className=\"flex items-center space-x-1 text-sm text-gray-600 dark:text-gray-400\">\r\n+                    <MapPin className=\"h-3 w-3\" />\r\n+                    <span>{entry.destination}</span>\r\n+                  </div>\r\n+                </div>\r\n+                <div>\r\n+                  <p className=\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide\">Goods</p>\r\n+                  <p className=\"font-medium text-gray-900 dark:text-gray-100\">{entry.goodsQuantity} kg</p>\r\n+                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">{formatCurrency(entry.goodsValue)}</p>\r\n+                </div>\r\n+              </div>\r\n+\r\n+              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-3\">\r\n+                <p className=\"text-xs text-gray-500 dark:text-gray-400 uppercase tracking-wide mb-1\">Packaging</p>\r\n+                <p className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{entry.packagingDetails}</p>\r\n+                {entry.estimatedArrival && entry.status === 'in-transit' && (\r\n+                  <p className=\"text-xs text-blue-600 dark:text-blue-400 mt-1\">\r\n+                    ETA: {entry.estimatedArrival}\r\n+                  </p>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+\r\n+            {/* Action Buttons */}\r\n+            {user?.role === 'admin' && (\r\n+              <div className=\"flex space-x-2 pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n+                {entry.status === 'loading' && (\r\n+                  <button className=\"flex-1 text-xs px-3 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md transition-colors\">\r\n+                    Start Trip\r\n+                  </button>\r\n+                )}\r\n+                {entry.status === 'in-transit' && (\r\n+                  <button className=\"flex-1 text-xs px-3 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md transition-colors\">\r\n+                    Mark Delivered\r\n+                  </button>\r\n+                )}\r\n+                <button className=\"text-xs px-3 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\">\r\n+                  Edit\r\n+                </button>\r\n+              </div>\r\n+            )}\r\n+          </Card>\r\n         ))}\r\n       </div>\r\n \r\n       {/* Empty State */}\r\n"
                },
                {
                    "date": 1759569545465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n               <div className=\"flex items-center space-x-2\">\r\n                 {getStatusIcon(entry.status)}\r\n                 <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(entry.status)}`}>\r\n                   {getStatusText(entry.status)}\r\n-                )}\r\n+                </span>\r\n               </div>\r\n               <div className=\"text-right\">\r\n                 <div className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{entry.tripId}</div>\r\n                 <div className=\"text-xs text-gray-500 dark:text-gray-400\">{formatDate(entry.date)}</div>\r\n"
                },
                {
                    "date": 1759902843382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,10 @@\n import React, { useState } from 'react';\r\n-import { Truck, MapPin, Clock, CheckCircle, AlertCircle } from 'lucide-react';\r\n+import { Truck, MapPin, Clock, CheckCircle, AlertCircle, Plus } from 'lucide-react';\r\n import { Card } from '../../components/Card';\r\n+import { Modal } from '../../components/Modal';\r\n+import { FormInput } from '../../components/FormInput';\r\n+import { FormSelect } from '../../components/FormSelect';\r\n import { useApp } from '../../context/AppContext';\r\n import { formatDate, formatCurrency } from '../../utils/helpers';\r\n \r\n type TripStatus = 'loading' | 'in-transit' | 'dropped-off';\r\n@@ -25,11 +28,26 @@\n \r\n export const TransportLogPage: React.FC = () => {\r\n   const { user } = useApp();\r\n   const [activeTab, setActiveTab] = useState<'all' | 'loading' | 'in-transit' | 'dropped-off'>('all');\r\n+  const [isModalOpen, setIsModalOpen] = useState(false);\r\n+  const [formData, setFormData] = useState<Omit<TransportEntry, 'id'>>({\r\n+    tripId: '',\r\n+    date: new Date().toISOString().split('T')[0],\r\n+    driver: '',\r\n+    driverPhone: '',\r\n+    vehicleReg: '',\r\n+    vehicleMake: '',\r\n+    pickupPoint: '',\r\n+    destination: '',\r\n+    goodsQuantity: 0,\r\n+    goodsValue: 0,\r\n+    packagingDetails: '',\r\n+    status: 'loading',\r\n+    estimatedArrival: '',\r\n+  });\r\n \r\n-  // Mock data - in real app this would come from Context/API\r\n-  const transportEntries: TransportEntry[] = [\r\n+  const [transportEntries, setTransportEntries] = useState<TransportEntry[]>([\r\n     {\r\n       id: '1',\r\n       tripId: 'TRIP-001',\r\n       date: '2024-01-15',\r\n@@ -80,8 +98,49 @@\n   const filteredEntries = activeTab === 'all' \r\n     ? transportEntries \r\n     : transportEntries.filter(entry => entry.status === activeTab);\r\n \r\n+  const handleStatusChange = (id: string, newStatus: TripStatus) => {\r\n+    setTransportEntries(entries => \r\n+      entries.map(entry => \r\n+        entry.id === id ? { ...entry, status: newStatus } : entry\r\n+      )\r\n+    );\r\n+  };\r\n+\r\n+  const handleOpenModal = () => {\r\n+    setFormData({\r\n+      tripId: `TRIP-${Date.now()}`,\r\n+      date: new Date().toISOString().split('T')[0],\r\n+      driver: '',\r\n+      driverPhone: '',\r\n+      vehicleReg: '',\r\n+      vehicleMake: '',\r\n+      pickupPoint: '',\r\n+      destination: '',\r\n+      goodsQuantity: 0,\r\n+      goodsValue: 0,\r\n+      packagingDetails: '',\r\n+      status: 'loading',\r\n+      estimatedArrival: '',\r\n+    });\r\n+    setIsModalOpen(true);\r\n+  };\r\n+\r\n+  const handleCloseModal = () => {\r\n+    setIsModalOpen(false);\r\n+  };\r\n+\r\n+  const handleSubmit = (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    const newEntry: TransportEntry = {\r\n+      id: Date.now().toString(),\r\n+      ...formData,\r\n+    };\r\n+    setTransportEntries([...transportEntries, newEntry]);\r\n+    handleCloseModal();\r\n+  };\r\n+\r\n   const getStatusIcon = (status: TripStatus) => {\r\n     switch (status) {\r\n       case 'loading':\r\n         return <Clock className=\"h-4 w-4 text-yellow-500\" />;\r\n@@ -130,10 +189,14 @@\n             Track vehicles, drivers, and goods in transit\r\n           </p>\r\n         </div>\r\n         {user?.role === 'user' && (\r\n-          <button className=\"btn-primary\">\r\n-            New Trip\r\n+          <button \r\n+            onClick={handleOpenModal}\r\n+            className=\"flex items-center space-x-2 px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n+          >\r\n+            <Plus className=\"h-4 w-4\" />\r\n+            <span>New Trip</span>\r\n           </button>\r\n         )}\r\n       </div>\r\n \r\n@@ -219,14 +282,20 @@\n             {/* Action Buttons */}\r\n             {user?.role === 'admin' && (\r\n               <div className=\"flex space-x-2 pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n                 {entry.status === 'loading' && (\r\n-                  <button className=\"flex-1 text-xs px-3 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md transition-colors\">\r\n+                  <button \r\n+                    onClick={() => handleStatusChange(entry.id, 'in-transit')}\r\n+                    className=\"flex-1 text-xs px-3 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md transition-colors\"\r\n+                  >\r\n                     Start Trip\r\n                   </button>\r\n                 )}\r\n                 {entry.status === 'in-transit' && (\r\n-                  <button className=\"flex-1 text-xs px-3 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md transition-colors\">\r\n+                  <button \r\n+                    onClick={() => handleStatusChange(entry.id, 'dropped-off')}\r\n+                    className=\"flex-1 text-xs px-3 py-2 bg-green-600 hover:bg-green-700 text-white rounded-md transition-colors\"\r\n+                  >\r\n                     Mark Delivered\r\n                   </button>\r\n                 )}\r\n                 <button className=\"text-xs px-3 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\">\r\n@@ -249,7 +318,148 @@\n             No entries match the current filter criteria.\r\n           </p>\r\n         </Card>\r\n       )}\r\n+\r\n+      {/* Add Trip Modal */}\r\n+      <Modal\r\n+        isOpen={isModalOpen}\r\n+        onClose={handleCloseModal}\r\n+        title=\"Add New Trip\"\r\n+        size=\"lg\"\r\n+      >\r\n+        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+            <FormInput\r\n+              label=\"Trip ID\"\r\n+              type=\"text\"\r\n+              value={formData.tripId}\r\n+              onChange={(value) => setFormData({ ...formData, tripId: value as string })}\r\n+              required\r\n+            />\r\n+            \r\n+            <FormInput\r\n+              label=\"Date\"\r\n+              type=\"date\"\r\n+              value={formData.date}\r\n+              onChange={(value) => setFormData({ ...formData, date: value as string })}\r\n+              required\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+            <FormInput\r\n+              label=\"Driver Name\"\r\n+              type=\"text\"\r\n+              value={formData.driver}\r\n+              onChange={(value) => setFormData({ ...formData, driver: value as string })}\r\n+              required\r\n+            />\r\n+            \r\n+            <FormInput\r\n+              label=\"Driver Phone\"\r\n+              type=\"tel\"\r\n+              value={formData.driverPhone}\r\n+              onChange={(value) => setFormData({ ...formData, driverPhone: value as string })}\r\n+              required\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+            <FormInput\r\n+              label=\"Vehicle Registration\"\r\n+              type=\"text\"\r\n+              value={formData.vehicleReg}\r\n+              onChange={(value) => setFormData({ ...formData, vehicleReg: value as string })}\r\n+              required\r\n+            />\r\n+            \r\n+            <FormInput\r\n+              label=\"Vehicle Make\"\r\n+              type=\"text\"\r\n+              value={formData.vehicleMake}\r\n+              onChange={(value) => setFormData({ ...formData, vehicleMake: value as string })}\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+            <FormSelect\r\n+              label=\"Pickup Point\"\r\n+              value={formData.pickupPoint}\r\n+              onChange={(value) => setFormData({ ...formData, pickupPoint: value as string })}\r\n+              options={[\r\n+                { value: 'Point A', label: 'Point A' },\r\n+                { value: 'Point B', label: 'Point B' },\r\n+                { value: 'Point C', label: 'Point C' },\r\n+                { value: 'Point D', label: 'Point D' },\r\n+              ]}\r\n+              required\r\n+            />\r\n+            \r\n+            <FormSelect\r\n+              label=\"Destination\"\r\n+              value={formData.destination}\r\n+              onChange={(value) => setFormData({ ...formData, destination: value as string })}\r\n+              options={[\r\n+                { value: 'Nairobi CBD', label: 'Nairobi CBD' },\r\n+                { value: 'Mombasa', label: 'Mombasa' },\r\n+                { value: 'Garissa', label: 'Garissa' },\r\n+                { value: 'Meru', label: 'Meru' },\r\n+              ]}\r\n+              required\r\n+            />\r\n+          </div>\r\n+\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+            <FormInput\r\n+              label=\"Goods Quantity (kg)\"\r\n+              type=\"number\"\r\n+              value={formData.goodsQuantity}\r\n+              onChange={(value) => setFormData({ ...formData, goodsQuantity: value as number })}\r\n+              required\r\n+            />\r\n+            \r\n+            <FormInput\r\n+              label=\"Goods Value\"\r\n+              type=\"number\"\r\n+              value={formData.goodsValue}\r\n+              onChange={(value) => setFormData({ ...formData, goodsValue: value as number })}\r\n+              required\r\n+            />\r\n+          </div>\r\n+\r\n+          <FormInput\r\n+            label=\"Packaging Details\"\r\n+            type=\"text\"\r\n+            value={formData.packagingDetails}\r\n+            onChange={(value) => setFormData({ ...formData, packagingDetails: value as string })}\r\n+            placeholder=\"e.g., 2 Basins, 1 Sack\"\r\n+            required\r\n+          />\r\n+\r\n+          <FormInput\r\n+            label=\"Estimated Arrival\"\r\n+            type=\"datetime-local\"\r\n+            value={formData.estimatedArrival}\r\n+            onChange={(value) => setFormData({ ...formData, estimatedArrival: value as string })}\r\n+          />\r\n+\r\n+          <div className=\"flex justify-end space-x-3\">\r\n+            <button\r\n+              type=\"button\"\r\n+              onClick={handleCloseModal}\r\n+              className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n+            >\r\n+              Cancel\r\n+            </button>\r\n+            <button\r\n+              type=\"submit\"\r\n+              className=\"px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n+            >\r\n+              Add Trip\r\n+            </button>\r\n+          </div>\r\n+        </form>\r\n+      </Modal>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1759903333096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n       goodsQuantity: 30,\r\n       goodsValue: 15000,\r\n       packagingDetails: '1 Sack, 1 Box',\r\n       status: 'dropped-off',\r\n-    }\r\n+    },\r\n   ];\r\n \r\n   const filteredEntries = activeTab === 'all' \r\n     ? transportEntries \r\n"
                },
                {
                    "date": 1759903374575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -375,9 +375,9 @@\n             \r\n             <FormInput\r\n               label=\"Vehicle Make\"\r\n               type=\"text\"\r\n-              value={formData.vehicleMake}\r\n+              value={formData.vehicleMake || ''}\r\n               onChange={(value) => setFormData({ ...formData, vehicleMake: value as string })}\r\n             />\r\n           </div>\r\n \r\n"
                },
                {
                    "date": 1759903400188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -438,9 +438,9 @@\n \r\n           <FormInput\r\n             label=\"Estimated Arrival\"\r\n             type=\"datetime-local\"\r\n-            value={formData.estimatedArrival}\r\n+            value={formData.estimatedArrival || ''}\r\n             onChange={(value) => setFormData({ ...formData, estimatedArrival: value as string })}\r\n           />\r\n \r\n           <div className=\"flex justify-end space-x-3\">\r\n"
                },
                {
                    "date": 1759903422851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n       goodsQuantity: 50,\r\n       goodsValue: 25000,\r\n       packagingDetails: '2 Basins, 1 Sack',\r\n       status: 'in-transit',\r\n-      estimatedArrival: '2024-01-15 15:30'\r\n+      estimatedArrival: '2024-01-15 15:30',\r\n     },\r\n     {\r\n       id: '2',\r\n       tripId: 'TRIP-002',\r\n"
                },
                {
                    "date": 1759903448422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n       goodsValue: 15000,\r\n       packagingDetails: '1 Sack, 1 Box',\r\n       status: 'dropped-off',\r\n     },\r\n-  ];\r\n+  ]);\r\n \r\n   const filteredEntries = activeTab === 'all' \r\n     ? transportEntries \r\n     : transportEntries.filter(entry => entry.status === activeTab);\r\n"
                }
            ],
            "date": 1759569426040,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Truck, MapPin, Clock, CheckCircle, AlertCircle } from 'lucide-react';\r\nimport { Card } from '../../components/Card';\r\nimport { useApp } from '../../context/AppContext';\r\nimport { formatDate, formatCurrency } from '../../utils/helpers';\r\n\r\ntype TripStatus = 'loading' | 'in-transit' | 'dropped-off';\r\n\r\ninterface TransportEntry {\r\n  id: string;\r\n  tripId: string;\r\n  date: string;\r\n  driver: string;\r\n  driverPhone: string;\r\n  vehicleReg: string;\r\n  vehicleMake?: string;\r\n  pickupPoint: string;\r\n  destination: string;\r\n  goodsQuantity: number;\r\n  goodsValue: number;\r\n  packagingDetails: string;\r\n  status: TripStatus;\r\n  estimatedArrival?: string;\r\n}\r\n\r\nexport const TransportLogPage: React.FC = () => {\r\n  const { user } = useApp();\r\n  const [activeTab, setActiveTab] = useState<'all' | 'loading' | 'in-transit' | 'dropped-off'>('all');\r\n\r\n  // Mock data - in real app this would come from Context/API\r\n  const transportEntries: TransportEntry[] = [\r\n    {\r\n      id: '1',\r\n      tripId: 'TRIP-001',\r\n      date: '2024-01-15',\r\n      driver: 'John Kimani',\r\n      driverPhone: '+254 712 345678',\r\n      vehicleReg: 'KAA 123A',\r\n      vehicleMake: 'Toyota Hiace',\r\n      pickupPoint: 'Point A',\r\n      destination: 'Nairobi CBD',\r\n      goodsQuantity: 50,\r\n      goodsValue: 25000,\r\n      packagingDetails: '2 Basins, 1 Sack',\r\n      status: 'in-transit',\r\n      estimatedArrival: '2024-01-15 15:30'\r\n    },\r\n    {\r\n      id: '2',\r\n      tripId: 'TRIP-002',\r\n      date: '2024-01-15',\r\n      driver: 'Peter Wanjiku',\r\n      driverPhone: '+254 723 456789',\r\n      vehicleReg: 'KBC 567B',\r\n      vehicleMake: 'Mitsubishi Canter',\r\n      pickupPoint: 'Point B',\r\n      destination: 'Mombasa',\r\n      goodsQuantity: 75,\r\n      goodsValue: 37500,\r\n      packagingDetails: '3 Basins, 2 Boxes',\r\n      status: 'loading',\r\n    },\r\n    {\r\n      id: '3',\r\n      tripId: 'TRIP-003',\r\n      date: '2024-01-14',\r\n      driver: 'Mary Njoki',\r\n      driverPhone: '+254 734 567890',\r\n      vehicleReg: 'KAB 789C',\r\n      vehicleMake: 'Isuzu NKR',\r\n      pickupPoint: 'Point C',\r\n      destination: 'Garissa',\r\n      goodsQuantity: 30,\r\n      goodsValue: 15000,\r\n      packagingDetails: '1 Sack, 1 Box',\r\n      status: 'dropped-off',\r\n    }\r\n  ];\r\n\r\n  const filteredEntries = activeTab === 'all' \r\n    ? transportEntries \r\n    : transportEntries.filter(entry => entry.status === activeTab);\r\n\r\n  const getStatusIcon = (status: TripStatus) => {\r\n    switch (status) {\r\n      case 'loading':\r\n        return <Clock className=\"h-4 w-4 text-yellow-500\" />;\r\n      case 'in-transit':\r\n        return <Truck className=\"h-4 w-4 text-blue-500\" />;\r\n      case 'dropped-off':\r\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\r\n      default:\r\n        return <AlertCircle className=\"h-4 w-4 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: TripStatus) => {\r\n    switch (status) {\r\n      case 'loading':\r\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-200';\r\n      case 'in-transit':\r\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-200';\r\n      case 'dropped-off':\r\n        return 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-200';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-200';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: TripStatus) => {\r\n    switch (status) {\r\n      case 'loading':\r\n        return 'Loading';\r\n      case 'in-transit':\r\n        return 'In Transit';\r\n      case 'dropped-off':\r\n        return 'Delivered';\r\n      default:\r\n        return 'Unknown';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className={label: 'Transport Log';\r\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n            Track vehicles, drivers, and goods in transit\r\n          </p>\r\n        </div>\r\n        {user?.role === 'user' && (\r\n          <button className=\"btn-primary\">\r\n            New Trip\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Status Tabs */}\r\n      <div className=\"flex space-x-1 bg-gray-100 dark:bg-gray-800 p-1 rounded-lg\">\r\n        {['all', 'loading', 'in-transit', 'dropped-off'].map((tab) => (\r\n          <button\r\n            key={tab}\r\n            onClick={() => setActiveTab(tab as any)}\r\n            className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${\r\n              activeTab === tab\r\n                ? 'bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 shadow-sm'\r\n                : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100'\r\n            }`}\r\n          >\r\n            {tab.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Transport Entries */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n        {filteredEntries.map((entry) => (\r\n          <Card key={entry.id} className=\"p-6 hover:shadow-lg transition-shadow\">\r\n            {/* Header with Status */}\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                {getStatusIcon(entry.status)}\r\n              </button>\r\n            </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Empty State */}\r\n      {filteredEntries.length === 0 && (\r\n        <Card className=\"p-12 text-center\">\r\n          <Truck className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100 mb-2\">\r\n            No transport entries found\r\n          </h3>\r\n          <p className=\"text-gray-500 dark:text-gray-400\">\r\n            No entries match the current filter criteria.\r\n          </p>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"
        }
    ]
}