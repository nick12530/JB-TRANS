{
    "sourceFile": "src/pages/Settings/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1759902867385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759906096635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,127 +1,481 @@\n-import React, { useState } from 'react';\r\n+import React, { useState, useRef, useEffect } from 'react';\r\n import { Card } from '../../components/Card';\r\n import { FormInput } from '../../components/FormInput';\r\n import { FormSelect } from '../../components/FormSelect';\r\n import { useApp } from '../../context/AppContext';\r\n-import { User, Bell, Shield, Palette, Database, Download, Upload, Save } from 'lucide-react';\r\n+import { useNotifications } from '../../context/NotificationsContext';\r\n+import { useNotificationService } from '../../services/notificationService';\r\n+import { \r\n+  User, \r\n+  Bell, \r\n+  Shield, \r\n+  Palette, \r\n+  Database, \r\n+  Download, \r\n+  Upload, \r\n+  Save, \r\n+  Camera,\r\n+  Lock,\r\n+  Key,\r\n+  Trash2,\r\n+  AlertTriangle,\r\n+  CheckCircle,\r\n+  Eye,\r\n+  EyeOff,\r\n+  Settings as SettingsIcon,\r\n+  Users,\r\n+  Server,\r\n+  HardDrive,\r\n+  RefreshCw,\r\n+  FileText,\r\n+  Calendar,\r\n+  Globe,\r\n+  Mail,\r\n+  Phone,\r\n+  MapPin,\r\n+  Clock,\r\n+  Zap,\r\n+  Activity,\r\n+  BarChart3,\r\n+  Archive,\r\n+  Cloud,\r\n+  Wifi,\r\n+  WifiOff\r\n+} from 'lucide-react';\r\n \r\n+interface UserProfile {\r\n+  id: string;\r\n+  name: string;\r\n+  email: string;\r\n+  phone: string;\r\n+  role: 'admin' | 'user';\r\n+  department: string;\r\n+  avatar?: string;\r\n+  bio: string;\r\n+  location: string;\r\n+  joinDate: string;\r\n+  lastLogin: string;\r\n+  isActive: boolean;\r\n+}\r\n+\r\n+interface SecuritySettings {\r\n+  twoFactorEnabled: boolean;\r\n+  passwordLastChanged: string;\r\n+  loginAttempts: number;\r\n+  trustedDevices: number;\r\n+  sessionTimeout: number;\r\n+}\r\n+\r\n+interface SystemSettings {\r\n+  maintenanceMode: boolean;\r\n+  autoBackup: boolean;\r\n+  backupFrequency: 'daily' | 'weekly' | 'monthly';\r\n+  dataRetention: number;\r\n+  maxFileSize: number;\r\n+  systemLogs: boolean;\r\n+}\r\n+\r\n export const SettingsPage: React.FC = () => {\r\n-  const { user, isDarkMode, toggleDarkMode } = useApp();\r\n-  const [activeTab, setActiveTab] = useState<'profile' | 'notifications' | 'appearance' | 'data'>('profile');\r\n+  const { user, isDark, setIsDark, sourceRecords, transportLogs } = useApp();\r\n+  const { addNotification } = useNotificationService();\r\n+  const fileInputRef = useRef<HTMLInputElement>(null);\r\n+  const [activeTab, setActiveTab] = useState<'profile' | 'security' | 'notifications' | 'appearance' | 'data' | 'system'>('profile');\r\n+  const [isLoading, setIsLoading] = useState(false);\r\n+  const [showPassword, setShowPassword] = useState(false);\r\n+  const [currentPassword, setCurrentPassword] = useState('');\r\n+  const [newPassword, setNewPassword] = useState('');\r\n+  const [confirmPassword, setConfirmPassword] = useState('');\r\n   \r\n-  // Profile settings\r\n-  const [profileData, setProfileData] = useState({\r\n+  // Enhanced profile data\r\n+  const [profileData, setProfileData] = useState<UserProfile>({\r\n+    id: user?.id || '1',\r\n     name: user?.name || '',\r\n     email: user?.email || '',\r\n+    phone: '+254 700 000 000',\r\n     role: user?.role || 'user',\r\n-    phone: '',\r\n-    department: '',\r\n+    department: 'Transport Operations',\r\n+    avatar: '',\r\n+    bio: 'Transport operations specialist with focus on miraa logistics and delivery management.',\r\n+    location: 'Nairobi, Kenya',\r\n+    joinDate: '2024-01-15',\r\n+    lastLogin: new Date().toISOString(),\r\n+    isActive: true,\r\n   });\r\n \r\n-  // Notification settings\r\n+  // Security settings\r\n+  const [securitySettings, setSecuritySettings] = useState<SecuritySettings>({\r\n+    twoFactorEnabled: false,\r\n+    passwordLastChanged: '2024-01-15',\r\n+    loginAttempts: 0,\r\n+    trustedDevices: 2,\r\n+    sessionTimeout: 30,\r\n+  });\r\n+\r\n+  // System settings (admin only)\r\n+  const [systemSettings, setSystemSettings] = useState<SystemSettings>({\r\n+    maintenanceMode: false,\r\n+    autoBackup: true,\r\n+    backupFrequency: 'daily',\r\n+    dataRetention: 365,\r\n+    maxFileSize: 10,\r\n+    systemLogs: true,\r\n+  });\r\n+\r\n+  // Enhanced notification settings\r\n   const [notificationSettings, setNotificationSettings] = useState({\r\n     emailNotifications: true,\r\n     smsNotifications: false,\r\n     pushNotifications: true,\r\n     deliveryAlerts: true,\r\n     discrepancyAlerts: true,\r\n     weeklyReports: false,\r\n+    systemAlerts: user?.role === 'admin',\r\n+    maintenanceAlerts: user?.role === 'admin',\r\n+    securityAlerts: true,\r\n+    marketingEmails: false,\r\n+    quietHours: {\r\n+      enabled: false,\r\n+      start: '22:00',\r\n+      end: '07:00',\r\n+    },\r\n   });\r\n \r\n-  // Appearance settings\r\n+  // Enhanced appearance settings\r\n   const [appearanceSettings, setAppearanceSettings] = useState({\r\n-    theme: isDarkMode ? 'dark' : 'light',\r\n+    theme: isDark ? 'dark' : 'light',\r\n     language: 'en',\r\n     timezone: 'Africa/Nairobi',\r\n     dateFormat: 'DD/MM/YYYY',\r\n+    timeFormat: '24h',\r\n+    currency: 'KES',\r\n+    dashboardLayout: 'grid',\r\n+    sidebarCollapsed: false,\r\n+    animations: true,\r\n+    soundEffects: false,\r\n   });\r\n \r\n-  const handleSaveProfile = () => {\r\n-    // In a real app, this would save to backend\r\n-    console.log('Saving profile:', profileData);\r\n-    alert('Profile saved successfully!');\r\n+  // Data management state\r\n+  const [dataStats, setDataStats] = useState({\r\n+    totalRecords: sourceRecords.length,\r\n+    totalSize: '2.4 MB',\r\n+    lastBackup: '2024-01-20 14:30',\r\n+    nextBackup: '2024-01-21 14:30',\r\n+  });\r\n+\r\n+  const tabs = [\r\n+    { id: 'profile', label: 'Profile', icon: User, description: 'Manage your personal information' },\r\n+    { id: 'security', label: 'Security', icon: Shield, description: 'Password and security settings' },\r\n+    { id: 'notifications', label: 'Notifications', icon: Bell, description: 'Configure notification preferences' },\r\n+    { id: 'appearance', label: 'Appearance', icon: Palette, description: 'Customize your interface' },\r\n+    { id: 'data', label: 'Data Management', icon: Database, description: 'Export, import, and backup data' },\r\n+    ...(user?.role === 'admin' ? [{ id: 'system', label: 'System', icon: SettingsIcon, description: 'System administration' }] : []),\r\n+  ];\r\n+\r\n+  const handleAvatarUpload = () => {\r\n+    fileInputRef.current?.click();\r\n   };\r\n \r\n-  const handleSaveNotifications = () => {\r\n-    console.log('Saving notifications:', notificationSettings);\r\n-    alert('Notification settings saved!');\r\n+  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n+    const file = event.target.files?.[0];\r\n+    if (file) {\r\n+      if (file.size > 5 * 1024 * 1024) { // 5MB limit\r\n+        addNotification({\r\n+          type: 'error',\r\n+          title: 'File Too Large',\r\n+          message: 'Please select an image smaller than 5MB.',\r\n+        });\r\n+        return;\r\n+      }\r\n+      \r\n+      const reader = new FileReader();\r\n+      reader.onload = (e) => {\r\n+        setProfileData({ ...profileData, avatar: e.target?.result as string });\r\n+        addNotification({\r\n+          type: 'success',\r\n+          title: 'Avatar Updated',\r\n+          message: 'Your profile picture has been updated successfully.',\r\n+        });\r\n+      };\r\n+      reader.readAsDataURL(file);\r\n+    }\r\n   };\r\n \r\n-  const handleSaveAppearance = () => {\r\n-    console.log('Saving appearance:', appearanceSettings);\r\n-    if (appearanceSettings.theme === 'dark' && !isDarkMode) {\r\n-      toggleDarkMode();\r\n-    } else if (appearanceSettings.theme === 'light' && isDarkMode) {\r\n-      toggleDarkMode();\r\n+  const handleSaveProfile = async () => {\r\n+    setIsLoading(true);\r\n+    try {\r\n+      // Simulate API call\r\n+      await new Promise(resolve => setTimeout(resolve, 1000));\r\n+      \r\n+      // Update user in context\r\n+      // setUser({ ...user, ...profileData });\r\n+      \r\n+      addNotification({\r\n+        type: 'success',\r\n+        title: 'Profile Updated',\r\n+        message: 'Your profile information has been saved successfully.',\r\n+      });\r\n+    } catch (error) {\r\n+      addNotification({\r\n+        type: 'error',\r\n+        title: 'Update Failed',\r\n+        message: 'Failed to update profile. Please try again.',\r\n+      });\r\n+    } finally {\r\n+      setIsLoading(false);\r\n     }\r\n-    alert('Appearance settings saved!');\r\n   };\r\n \r\n-  const handleExportData = () => {\r\n-    console.log('Exporting data...');\r\n-    alert('Data export started! You will receive an email when ready.');\r\n+  const handleChangePassword = async () => {\r\n+    if (newPassword !== confirmPassword) {\r\n+      addNotification({\r\n+        type: 'error',\r\n+        title: 'Password Mismatch',\r\n+        message: 'New password and confirmation do not match.',\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    if (newPassword.length < 8) {\r\n+      addNotification({\r\n+        type: 'error',\r\n+        title: 'Weak Password',\r\n+        message: 'Password must be at least 8 characters long.',\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    setIsLoading(true);\r\n+    try {\r\n+      await new Promise(resolve => setTimeout(resolve, 1000));\r\n+      \r\n+      setSecuritySettings({\r\n+        ...securitySettings,\r\n+        passwordLastChanged: new Date().toISOString(),\r\n+      });\r\n+      \r\n+      setCurrentPassword('');\r\n+      setNewPassword('');\r\n+      setConfirmPassword('');\r\n+      \r\n+      addNotification({\r\n+        type: 'success',\r\n+        title: 'Password Changed',\r\n+        message: 'Your password has been updated successfully.',\r\n+      });\r\n+    } catch (error) {\r\n+      addNotification({\r\n+        type: 'error',\r\n+        title: 'Password Change Failed',\r\n+        message: 'Failed to change password. Please try again.',\r\n+      });\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n   };\r\n \r\n-  const handleImportData = () => {\r\n-    console.log('Importing data...');\r\n-    alert('Please select a file to import.');\r\n+  const handleExportData = async () => {\r\n+    setIsLoading(true);\r\n+    try {\r\n+      const exportData = {\r\n+        profile: profileData,\r\n+        settings: {\r\n+          notifications: notificationSettings,\r\n+          appearance: appearanceSettings,\r\n+        },\r\n+        data: {\r\n+          sourceRecords,\r\n+          transportLogs,\r\n+        },\r\n+        exportDate: new Date().toISOString(),\r\n+        version: '1.0',\r\n+      };\r\n+\r\n+      const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\r\n+      const url = URL.createObjectURL(blob);\r\n+      const a = document.createElement('a');\r\n+      a.href = url;\r\n+      a.download = `mwalimu-transporters-backup-${new Date().toISOString().split('T')[0]}.json`;\r\n+      document.body.appendChild(a);\r\n+      a.click();\r\n+      document.body.removeChild(a);\r\n+      URL.revokeObjectURL(url);\r\n+\r\n+      addNotification({\r\n+        type: 'success',\r\n+        title: 'Data Exported',\r\n+        message: 'Your data has been exported successfully.',\r\n+      });\r\n+    } catch (error) {\r\n+      addNotification({\r\n+        type: 'error',\r\n+        title: 'Export Failed',\r\n+        message: 'Failed to export data. Please try again.',\r\n+      });\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n   };\r\n \r\n-  const tabs = [\r\n-    { id: 'profile', label: 'Profile', icon: User },\r\n-    { id: 'notifications', label: 'Notifications', icon: Bell },\r\n-    { id: 'appearance', label: 'Appearance', icon: Palette },\r\n-    { id: 'data', label: 'Data Management', icon: Database },\r\n-  ];\r\n+  const handleSystemMaintenance = async () => {\r\n+    setIsLoading(true);\r\n+    try {\r\n+      await new Promise(resolve => setTimeout(resolve, 1000));\r\n+      \r\n+      setSystemSettings({\r\n+        ...systemSettings,\r\n+        maintenanceMode: !systemSettings.maintenanceMode,\r\n+      });\r\n+      \r\n+      addNotification({\r\n+        type: systemSettings.maintenanceMode ? 'success' : 'warning',\r\n+        title: systemSettings.maintenanceMode ? 'Maintenance Mode Disabled' : 'Maintenance Mode Enabled',\r\n+        message: systemSettings.maintenanceMode \r\n+          ? 'System is now accessible to users.' \r\n+          : 'System is now in maintenance mode. Users will see a maintenance page.',\r\n+      });\r\n+    } catch (error) {\r\n+      addNotification({\r\n+        type: 'error',\r\n+        title: 'Operation Failed',\r\n+        message: 'Failed to toggle maintenance mode.',\r\n+      });\r\n+    } finally {\r\n+      setIsLoading(false);\r\n+    }\r\n+  };\r\n \r\n   return (\r\n-    <div className=\"space-y-6\">\r\n-      {/* Header */}\r\n-      <div className=\"flex items-center justify-between\">\r\n-        <div>\r\n-          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Settings</h1>\r\n-          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n-            Manage your account preferences and application settings\r\n-          </p>\r\n+    <div className=\"space-y-6 animate-fade-in\">\r\n+      {/* Enhanced Header */}\r\n+      <div className=\"page-header -mx-6 px-6 py-8 mb-8\">\r\n+        <div className=\"flex items-center justify-between\">\r\n+          <div>\r\n+            <h1 className=\"page-title text-gradient-primary\">Settings</h1>\r\n+            <p className=\"page-subtitle\">\r\n+              Manage your account preferences, security settings, and system configurations\r\n+            </p>\r\n+          </div>\r\n+          <div className=\"flex items-center space-x-4\">\r\n+            <div className=\"text-right\">\r\n+              <div className=\"flex items-center space-x-2\">\r\n+                <div className={`w-3 h-3 rounded-full ${profileData.isActive ? 'bg-green-500' : 'bg-red-500'} animate-pulse`}></div>\r\n+                <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\r\n+                  {profileData.isActive ? 'Active' : 'Inactive'}\r\n+                </span>\r\n+              </div>\r\n+              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n+                Last login: {new Date(profileData.lastLogin).toLocaleDateString()}\r\n+              </p>\r\n+            </div>\r\n+          </div>\r\n         </div>\r\n       </div>\r\n \r\n       <div className=\"flex flex-col lg:flex-row gap-6\">\r\n-        {/* Sidebar */}\r\n-        <div className=\"lg:w-64\">\r\n-          <Card className=\"p-4\">\r\n+        {/* Enhanced Sidebar */}\r\n+        <div className=\"lg:w-80\">\r\n+          <Card className=\"card-enhanced p-6\">\r\n+            <div className=\"mb-6\">\r\n+              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2\">Settings Menu</h3>\r\n+              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n+                Configure your account and system preferences\r\n+              </p>\r\n+            </div>\r\n+            \r\n             <nav className=\"space-y-2\">\r\n               {tabs.map((tab) => (\r\n                 <button\r\n                   key={tab.id}\r\n                   onClick={() => setActiveTab(tab.id as any)}\r\n-                  className={`flex items-center space-x-3 w-full px-3 py-2 rounded-lg text-left transition-colors ${\r\n+                  className={`flex items-start space-x-3 w-full px-4 py-3 rounded-xl text-left transition-all duration-200 hover-lift ${\r\n                     activeTab === tab.id\r\n-                      ? 'bg-bright-green text-white'\r\n+                      ? 'bg-gradient-to-r from-bright-green to-green-600 text-white shadow-lg'\r\n                       : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n                   }`}\r\n                 >\r\n-                  <tab.icon className=\"h-4 w-4\" />\r\n-                  <span className=\"font-medium\">{tab.label}</span>\r\n+                  <tab.icon className=\"h-5 w-5 mt-0.5 flex-shrink-0\" />\r\n+                  <div className=\"min-w-0 flex-1\">\r\n+                    <span className=\"font-medium block\">{tab.label}</span>\r\n+                    <span className={`text-xs mt-1 ${\r\n+                      activeTab === tab.id ? 'text-green-100' : 'text-gray-500 dark:text-gray-400'\r\n+                    }`}>\r\n+                      {tab.description}\r\n+                    </span>\r\n+                  </div>\r\n                 </button>\r\n               ))}\r\n             </nav>\r\n+\r\n+            {/* Quick Stats */}\r\n+            <div className=\"mt-8 p-4 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+              <h4 className=\"font-medium text-gray-900 dark:text-gray-100 mb-3\">Quick Stats</h4>\r\n+              <div className=\"space-y-2\">\r\n+                <div className=\"flex justify-between text-sm\">\r\n+                  <span className=\"text-gray-600 dark:text-gray-400\">Records</span>\r\n+                  <span className=\"font-medium text-gray-900 dark:text-gray-100\">{dataStats.totalRecords}</span>\r\n+                </div>\r\n+                <div className=\"flex justify-between text-sm\">\r\n+                  <span className=\"text-gray-600 dark:text-gray-400\">Data Size</span>\r\n+                  <span className=\"font-medium text-gray-900 dark:text-gray-100\">{dataStats.totalSize}</span>\r\n+                </div>\r\n+                <div className=\"flex justify-between text-sm\">\r\n+                  <span className=\"text-gray-600 dark:text-gray-400\">Last Backup</span>\r\n+                  <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n+                    {new Date(dataStats.lastBackup).toLocaleDateString()}\r\n+                  </span>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n           </Card>\r\n         </div>\r\n \r\n-        {/* Content */}\r\n+        {/* Enhanced Content */}\r\n         <div className=\"flex-1\">\r\n-          <Card className=\"p-6\">\r\n+          <Card className=\"card-enhanced p-8\">\r\n             {/* Profile Tab */}\r\n             {activeTab === 'profile' && (\r\n-              <div className=\"space-y-6\">\r\n+              <div className=\"space-y-8\">\r\n                 <div className=\"flex items-center space-x-3 mb-6\">\r\n                   <User className=\"h-6 w-6 text-bright-green\" />\r\n-                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">Profile Settings</h2>\r\n+                  <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Profile Settings</h2>\r\n                 </div>\r\n \r\n-                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+                {/* Avatar Section */}\r\n+                <div className=\"flex items-center space-x-6 p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                  <div className=\"relative\">\r\n+                    <div className=\"w-20 h-20 bg-gradient-to-br from-bright-green to-green-600 rounded-full flex items-center justify-center text-white text-2xl font-bold\">\r\n+                      {profileData.avatar ? (\r\n+                        <img src={profileData.avatar} alt=\"Avatar\" className=\"w-full h-full rounded-full object-cover\" />\r\n+                      ) : (\r\n+                        profileData.name.charAt(0).toUpperCase()\r\n+                      )}\r\n+                    </div>\r\n+                    <button\r\n+                      onClick={handleAvatarUpload}\r\n+                      className=\"absolute -bottom-1 -right-1 w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-white hover:bg-blue-600 transition-colors\"\r\n+                    >\r\n+                      <Camera className=\"h-3 w-3\" />\r\n+                    </button>\r\n+                  </div>\r\n+                  <div className=\"flex-1\">\r\n+                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{profileData.name}</h3>\r\n+                    <p className=\"text-gray-600 dark:text-gray-400\">{profileData.email}</p>\r\n+                    <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n+                      {profileData.role === 'admin' ? 'Administrator' : 'User'} • {profileData.department}\r\n+                    </p>\r\n+                  </div>\r\n+                  <input\r\n+                    ref={fileInputRef}\r\n+                    type=\"file\"\r\n+                    accept=\"image/*\"\r\n+                    onChange={handleFileUpload}\r\n+                    className=\"hidden\"\r\n+                  />\r\n+                </div>\r\n+\r\n+                {/* Profile Form */}\r\n+                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                   <FormInput\r\n                     label=\"Full Name\"\r\n                     type=\"text\"\r\n                     value={profileData.name}\r\n@@ -129,9 +483,9 @@\n                     required\r\n                   />\r\n                   \r\n                   <FormInput\r\n-                    label=\"Email\"\r\n+                    label=\"Email Address\"\r\n                     type=\"email\"\r\n                     value={profileData.email}\r\n                     onChange={(value) => setProfileData({ ...profileData, email: value as string })}\r\n                     required\r\n@@ -149,131 +503,311 @@\n                     type=\"text\"\r\n                     value={profileData.department}\r\n                     onChange={(value) => setProfileData({ ...profileData, department: value as string })}\r\n                   />\r\n+                  \r\n+                  <FormInput\r\n+                    label=\"Location\"\r\n+                    type=\"text\"\r\n+                    value={profileData.location}\r\n+                    onChange={(value) => setProfileData({ ...profileData, location: value as string })}\r\n+                  />\r\n+                  \r\n+                  <div className=\"md:col-span-2\">\r\n+                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n+                      Bio\r\n+                    </label>\r\n+                    <textarea\r\n+                      value={profileData.bio}\r\n+                      onChange={(e) => setProfileData({ ...profileData, bio: e.target.value })}\r\n+                      rows={3}\r\n+                      className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-bright-green focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n+                      placeholder=\"Tell us about yourself...\"\r\n+                    />\r\n+                  </div>\r\n                 </div>\r\n \r\n-                <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n-                  <div>\r\n-                    <p className=\"font-medium text-gray-900 dark:text-gray-100\">Account Role</p>\r\n-                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n+                {/* Account Status */}\r\n+                <div className=\"flex items-center justify-between p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                  <div className=\"flex items-center space-x-4\">\r\n+                    <div className=\"p-3 bg-green-100 dark:bg-green-900/20 rounded-lg\">\r\n+                      <CheckCircle className=\"h-6 w-6 text-green-600\" />\r\n+                    </div>\r\n+                    <div>\r\n+                      <p className=\"font-semibold text-gray-900 dark:text-gray-100\">Account Status</p>\r\n+                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n+                        Active • Joined {new Date(profileData.joinDate).toLocaleDateString()}\r\n+                      </p>\r\n+                    </div>\r\n+                  </div>\r\n+                  <div className=\"text-right\">\r\n+                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">Role</p>\r\n+                    <p className=\"font-semibold text-bright-green\">\r\n                       {profileData.role === 'admin' ? 'Administrator' : 'User'}\r\n                     </p>\r\n                   </div>\r\n-                  <Shield className=\"h-8 w-8 text-bright-green\" />\r\n                 </div>\r\n \r\n                 <div className=\"flex justify-end\">\r\n                   <button\r\n                     onClick={handleSaveProfile}\r\n-                    className=\"flex items-center space-x-2 px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n+                    disabled={isLoading}\r\n+                    className=\"btn-primary flex items-center space-x-2\"\r\n                   >\r\n-                    <Save className=\"h-4 w-4\" />\r\n-                    <span>Save Profile</span>\r\n+                    {isLoading ? <RefreshCw className=\"h-4 w-4 animate-spin\" /> : <Save className=\"h-4 w-4\" />}\r\n+                    <span>{isLoading ? 'Saving...' : 'Save Profile'}</span>\r\n                   </button>\r\n                 </div>\r\n               </div>\r\n             )}\r\n \r\n+            {/* Security Tab */}\r\n+            {activeTab === 'security' && (\r\n+              <div className=\"space-y-8\">\r\n+                <div className=\"flex items-center space-x-3 mb-6\">\r\n+                  <Shield className=\"h-6 w-6 text-bright-green\" />\r\n+                  <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Security Settings</h2>\r\n+                </div>\r\n+\r\n+                {/* Password Change */}\r\n+                <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4\">Change Password</h3>\r\n+                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+                    <FormInput\r\n+                      label=\"Current Password\"\r\n+                      type={showPassword ? 'text' : 'password'}\r\n+                      value={currentPassword}\r\n+                      onChange={(value) => setCurrentPassword(value as string)}\r\n+                      required\r\n+                    />\r\n+                    <div className=\"flex items-end\">\r\n+                      <button\r\n+                        onClick={() => setShowPassword(!showPassword)}\r\n+                        className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\r\n+                      >\r\n+                        {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\r\n+                      </button>\r\n+                    </div>\r\n+                    <FormInput\r\n+                      label=\"New Password\"\r\n+                      type={showPassword ? 'text' : 'password'}\r\n+                      value={newPassword}\r\n+                      onChange={(value) => setNewPassword(value as string)}\r\n+                      required\r\n+                    />\r\n+                    <FormInput\r\n+                      label=\"Confirm New Password\"\r\n+                      type={showPassword ? 'text' : 'password'}\r\n+                      value={confirmPassword}\r\n+                      onChange={(value) => setConfirmPassword(value as string)}\r\n+                      required\r\n+                    />\r\n+                  </div>\r\n+                  <div className=\"mt-4\">\r\n+                    <button\r\n+                      onClick={handleChangePassword}\r\n+                      disabled={isLoading || !currentPassword || !newPassword || !confirmPassword}\r\n+                      className=\"btn-primary flex items-center space-x-2\"\r\n+                    >\r\n+                      {isLoading ? <RefreshCw className=\"h-4 w-4 animate-spin\" /> : <Key className=\"h-4 w-4\" />}\r\n+                      <span>{isLoading ? 'Changing...' : 'Change Password'}</span>\r\n+                    </button>\r\n+                  </div>\r\n+                </div>\r\n+\r\n+                {/* Security Status */}\r\n+                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n+                  <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                    <div className=\"flex items-center space-x-3 mb-4\">\r\n+                      <Lock className=\"h-5 w-5 text-blue-600\" />\r\n+                      <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Two-Factor Authentication</h3>\r\n+                    </div>\r\n+                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\r\n+                      Add an extra layer of security to your account\r\n+                    </p>\r\n+                    <button className=\"btn-outline w-full\">\r\n+                      {securitySettings.twoFactorEnabled ? 'Disable 2FA' : 'Enable 2FA'}\r\n+                    </button>\r\n+                  </div>\r\n+\r\n+                  <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                    <div className=\"flex items-center space-x-3 mb-4\">\r\n+                      <Activity className=\"h-5 w-5 text-green-600\" />\r\n+                      <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Login Activity</h3>\r\n+                    </div>\r\n+                    <div className=\"space-y-2\">\r\n+                      <div className=\"flex justify-between text-sm\">\r\n+                        <span className=\"text-gray-600 dark:text-gray-400\">Last Password Change</span>\r\n+                        <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n+                          {new Date(securitySettings.passwordLastChanged).toLocaleDateString()}\r\n+                        </span>\r\n+                      </div>\r\n+                      <div className=\"flex justify-between text-sm\">\r\n+                        <span className=\"text-gray-600 dark:text-gray-400\">Trusted Devices</span>\r\n+                        <span className=\"font-medium text-gray-900 dark:text-gray-100\">{securitySettings.trustedDevices}</span>\r\n+                      </div>\r\n+                      <div className=\"flex justify-between text-sm\">\r\n+                        <span className=\"text-gray-600 dark:text-gray-400\">Session Timeout</span>\r\n+                        <span className=\"font-medium text-gray-900 dark:text-gray-100\">{securitySettings.sessionTimeout} min</span>\r\n+                      </div>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+\r\n             {/* Notifications Tab */}\r\n             {activeTab === 'notifications' && (\r\n-              <div className=\"space-y-6\">\r\n+              <div className=\"space-y-8\">\r\n                 <div className=\"flex items-center space-x-3 mb-6\">\r\n                   <Bell className=\"h-6 w-6 text-bright-green\" />\r\n-                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">Notification Settings</h2>\r\n+                  <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Notification Preferences</h2>\r\n                 </div>\r\n \r\n-                <div className=\"space-y-4\">\r\n-                  <div className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-600 rounded-lg\">\r\n-                    <div>\r\n-                      <p className=\"font-medium text-gray-900 dark:text-gray-100\">Email Notifications</p>\r\n-                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Receive notifications via email</p>\r\n+                <div className=\"space-y-6\">\r\n+                  {/* Email Notifications */}\r\n+                  <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                    <div className=\"flex items-center justify-between mb-4\">\r\n+                      <div className=\"flex items-center space-x-3\">\r\n+                        <Mail className=\"h-5 w-5 text-blue-600\" />\r\n+                        <div>\r\n+                          <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Email Notifications</h3>\r\n+                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Receive notifications via email</p>\r\n+                        </div>\r\n+                      </div>\r\n+                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                        <input\r\n+                          type=\"checkbox\"\r\n+                          checked={notificationSettings.emailNotifications}\r\n+                          onChange={(e) => setNotificationSettings({ ...notificationSettings, emailNotifications: e.target.checked })}\r\n+                          className=\"sr-only peer\"\r\n+                        />\r\n+                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                      </label>\r\n                     </div>\r\n-                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n-                      <input\r\n-                        type=\"checkbox\"\r\n-                        checked={notificationSettings.emailNotifications}\r\n-                        onChange={(e) => setNotificationSettings({ ...notificationSettings, emailNotifications: e.target.checked })}\r\n-                        className=\"sr-only peer\"\r\n-                      />\r\n-                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n-                    </label>\r\n                   </div>\r\n \r\n-                  <div className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-600 rounded-lg\">\r\n-                    <div>\r\n-                      <p className=\"font-medium text-gray-900 dark:text-gray-100\">SMS Notifications</p>\r\n-                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Receive notifications via SMS</p>\r\n+                  {/* SMS Notifications */}\r\n+                  <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                    <div className=\"flex items-center justify-between mb-4\">\r\n+                      <div className=\"flex items-center space-x-3\">\r\n+                        <Phone className=\"h-5 w-5 text-green-600\" />\r\n+                        <div>\r\n+                          <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">SMS Notifications</h3>\r\n+                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Receive notifications via SMS</p>\r\n+                        </div>\r\n+                      </div>\r\n+                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                        <input\r\n+                          type=\"checkbox\"\r\n+                          checked={notificationSettings.smsNotifications}\r\n+                          onChange={(e) => setNotificationSettings({ ...notificationSettings, smsNotifications: e.target.checked })}\r\n+                          className=\"sr-only peer\"\r\n+                        />\r\n+                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                      </label>\r\n                     </div>\r\n-                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n-                      <input\r\n-                        type=\"checkbox\"\r\n-                        checked={notificationSettings.smsNotifications}\r\n-                        onChange={(e) => setNotificationSettings({ ...notificationSettings, smsNotifications: e.target.checked })}\r\n-                        className=\"sr-only peer\"\r\n-                      />\r\n-                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n-                    </label>\r\n                   </div>\r\n \r\n-                  <div className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-600 rounded-lg\">\r\n-                    <div>\r\n-                      <p className=\"font-medium text-gray-900 dark:text-gray-100\">Delivery Alerts</p>\r\n-                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Get notified when deliveries are completed</p>\r\n+                  {/* Delivery Alerts */}\r\n+                  <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                    <div className=\"flex items-center justify-between mb-4\">\r\n+                      <div className=\"flex items-center space-x-3\">\r\n+                        <Truck className=\"h-5 w-5 text-purple-600\" />\r\n+                        <div>\r\n+                          <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Delivery Alerts</h3>\r\n+                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Get notified when deliveries are completed</p>\r\n+                        </div>\r\n+                      </div>\r\n+                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                        <input\r\n+                          type=\"checkbox\"\r\n+                          checked={notificationSettings.deliveryAlerts}\r\n+                          onChange={(e) => setNotificationSettings({ ...notificationSettings, deliveryAlerts: e.target.checked })}\r\n+                          className=\"sr-only peer\"\r\n+                        />\r\n+                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                      </label>\r\n                     </div>\r\n-                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n-                      <input\r\n-                        type=\"checkbox\"\r\n-                        checked={notificationSettings.deliveryAlerts}\r\n-                        onChange={(e) => setNotificationSettings({ ...notificationSettings, deliveryAlerts: e.target.checked })}\r\n-                        className=\"sr-only peer\"\r\n-                      />\r\n-                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n-                    </label>\r\n                   </div>\r\n \r\n-                  <div className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-600 rounded-lg\">\r\n-                    <div>\r\n-                      <p className=\"font-medium text-gray-900 dark:text-gray-100\">Discrepancy Alerts</p>\r\n-                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Get notified about quantity discrepancies</p>\r\n+                  {/* Quiet Hours */}\r\n+                  <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                    <div className=\"flex items-center justify-between mb-4\">\r\n+                      <div className=\"flex items-center space-x-3\">\r\n+                        <Clock className=\"h-5 w-5 text-orange-600\" />\r\n+                        <div>\r\n+                          <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Quiet Hours</h3>\r\n+                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Disable notifications during specific hours</p>\r\n+                        </div>\r\n+                      </div>\r\n+                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                        <input\r\n+                          type=\"checkbox\"\r\n+                          checked={notificationSettings.quietHours.enabled}\r\n+                          onChange={(e) => setNotificationSettings({ \r\n+                            ...notificationSettings, \r\n+                            quietHours: { ...notificationSettings.quietHours, enabled: e.target.checked }\r\n+                          })}\r\n+                          className=\"sr-only peer\"\r\n+                        />\r\n+                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                      </label>\r\n                     </div>\r\n-                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n-                      <input\r\n-                        type=\"checkbox\"\r\n-                        checked={notificationSettings.discrepancyAlerts}\r\n-                        onChange={(e) => setNotificationSettings({ ...notificationSettings, discrepancyAlerts: e.target.checked })}\r\n-                        className=\"sr-only peer\"\r\n-                      />\r\n-                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n-                    </label>\r\n+                    {notificationSettings.quietHours.enabled && (\r\n+                      <div className=\"grid grid-cols-2 gap-4 mt-4\">\r\n+                        <FormInput\r\n+                          label=\"Start Time\"\r\n+                          type=\"time\"\r\n+                          value={notificationSettings.quietHours.start}\r\n+                          onChange={(value) => setNotificationSettings({ \r\n+                            ...notificationSettings, \r\n+                            quietHours: { ...notificationSettings.quietHours, start: value as string }\r\n+                          })}\r\n+                        />\r\n+                        <FormInput\r\n+                          label=\"End Time\"\r\n+                          type=\"time\"\r\n+                          value={notificationSettings.quietHours.end}\r\n+                          onChange={(value) => setNotificationSettings({ \r\n+                            ...notificationSettings, \r\n+                            quietHours: { ...notificationSettings.quietHours, end: value as string }\r\n+                          })}\r\n+                        />\r\n+                      </div>\r\n+                    )}\r\n                   </div>\r\n                 </div>\r\n \r\n                 <div className=\"flex justify-end\">\r\n-                  <button\r\n-                    onClick={handleSaveNotifications}\r\n-                    className=\"flex items-center space-x-2 px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n-                  >\r\n+                  <button className=\"btn-primary flex items-center space-x-2\">\r\n                     <Save className=\"h-4 w-4\" />\r\n-                    <span>Save Notifications</span>\r\n+                    <span>Save Notification Settings</span>\r\n                   </button>\r\n                 </div>\r\n               </div>\r\n             )}\r\n \r\n             {/* Appearance Tab */}\r\n             {activeTab === 'appearance' && (\r\n-              <div className=\"space-y-6\">\r\n+              <div className=\"space-y-8\">\r\n                 <div className=\"flex items-center space-x-3 mb-6\">\r\n                   <Palette className=\"h-6 w-6 text-bright-green\" />\r\n-                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">Appearance Settings</h2>\r\n+                  <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Appearance Settings</h2>\r\n                 </div>\r\n \r\n-                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                   <FormSelect\r\n                     label=\"Theme\"\r\n                     value={appearanceSettings.theme}\r\n-                    onChange={(value) => setAppearanceSettings({ ...appearanceSettings, theme: value as string })}\r\n+                    onChange={(value) => {\r\n+                      setAppearanceSettings({ ...appearanceSettings, theme: value as string });\r\n+                      if (value === 'dark' && !isDark) {\r\n+                        setIsDark(true);\r\n+                      } else if (value === 'light' && isDark) {\r\n+                        setIsDark(false);\r\n+                      }\r\n+                    }}\r\n                     options={[\r\n                       { value: 'light', label: 'Light' },\r\n                       { value: 'dark', label: 'Dark' },\r\n                     ]}\r\n@@ -309,77 +843,319 @@\n                       { value: 'MM/DD/YYYY', label: 'MM/DD/YYYY' },\r\n                       { value: 'YYYY-MM-DD', label: 'YYYY-MM-DD' },\r\n                     ]}\r\n                   />\r\n+                  \r\n+                  <FormSelect\r\n+                    label=\"Time Format\"\r\n+                    value={appearanceSettings.timeFormat}\r\n+                    onChange={(value) => setAppearanceSettings({ ...appearanceSettings, timeFormat: value as string })}\r\n+                    options={[\r\n+                      { value: '12h', label: '12 Hour (AM/PM)' },\r\n+                      { value: '24h', label: '24 Hour' },\r\n+                    ]}\r\n+                  />\r\n+                  \r\n+                  <FormSelect\r\n+                    label=\"Currency\"\r\n+                    value={appearanceSettings.currency}\r\n+                    onChange={(value) => setAppearanceSettings({ ...appearanceSettings, currency: value as string })}\r\n+                    options={[\r\n+                      { value: 'KES', label: 'Kenyan Shilling (KES)' },\r\n+                      { value: 'USD', label: 'US Dollar (USD)' },\r\n+                      { value: 'EUR', label: 'Euro (EUR)' },\r\n+                    ]}\r\n+                  />\r\n                 </div>\r\n \r\n+                {/* Additional Appearance Options */}\r\n+                <div className=\"space-y-4\">\r\n+                  <div className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-600 rounded-lg\">\r\n+                    <div>\r\n+                      <p className=\"font-medium text-gray-900 dark:text-gray-100\">Animations</p>\r\n+                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Enable smooth transitions and animations</p>\r\n+                    </div>\r\n+                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                      <input\r\n+                        type=\"checkbox\"\r\n+                        checked={appearanceSettings.animations}\r\n+                        onChange={(e) => setAppearanceSettings({ ...appearanceSettings, animations: e.target.checked })}\r\n+                        className=\"sr-only peer\"\r\n+                      />\r\n+                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                    </label>\r\n+                  </div>\r\n+\r\n+                  <div className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-600 rounded-lg\">\r\n+                    <div>\r\n+                      <p className=\"font-medium text-gray-900 dark:text-gray-100\">Sound Effects</p>\r\n+                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Play sounds for notifications and actions</p>\r\n+                    </div>\r\n+                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                      <input\r\n+                        type=\"checkbox\"\r\n+                        checked={appearanceSettings.soundEffects}\r\n+                        onChange={(e) => setAppearanceSettings({ ...appearanceSettings, soundEffects: e.target.checked })}\r\n+                        className=\"sr-only peer\"\r\n+                      />\r\n+                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                    </label>\r\n+                  </div>\r\n+                </div>\r\n+\r\n                 <div className=\"flex justify-end\">\r\n-                  <button\r\n-                    onClick={handleSaveAppearance}\r\n-                    className=\"flex items-center space-x-2 px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n-                  >\r\n+                  <button className=\"btn-primary flex items-center space-x-2\">\r\n                     <Save className=\"h-4 w-4\" />\r\n-                    <span>Save Appearance</span>\r\n+                    <span>Save Appearance Settings</span>\r\n                   </button>\r\n                 </div>\r\n               </div>\r\n             )}\r\n \r\n             {/* Data Management Tab */}\r\n             {activeTab === 'data' && (\r\n-              <div className=\"space-y-6\">\r\n+              <div className=\"space-y-8\">\r\n                 <div className=\"flex items-center space-x-3 mb-6\">\r\n                   <Database className=\"h-6 w-6 text-bright-green\" />\r\n-                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">Data Management</h2>\r\n+                  <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Data Management</h2>\r\n                 </div>\r\n \r\n-                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n-                  <Card className=\"p-4\">\r\n+                {/* Data Overview */}\r\n+                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n+                  <div className=\"p-6 bg-blue-50 dark:bg-blue-900/20 rounded-xl\">\r\n                     <div className=\"flex items-center space-x-3 mb-3\">\r\n-                      <Download className=\"h-5 w-5 text-blue-500\" />\r\n-                      <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Export Data</h3>\r\n+                      <FileText className=\"h-5 w-5 text-blue-600\" />\r\n+                      <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Total Records</h3>\r\n                     </div>\r\n+                    <p className=\"text-2xl font-bold text-blue-600\">{dataStats.totalRecords}</p>\r\n+                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Source & Transport records</p>\r\n+                  </div>\r\n+\r\n+                  <div className=\"p-6 bg-green-50 dark:bg-green-900/20 rounded-xl\">\r\n+                    <div className=\"flex items-center space-x-3 mb-3\">\r\n+                      <HardDrive className=\"h-5 w-5 text-green-600\" />\r\n+                      <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Data Size</h3>\r\n+                    </div>\r\n+                    <p className=\"text-2xl font-bold text-green-600\">{dataStats.totalSize}</p>\r\n+                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total storage used</p>\r\n+                  </div>\r\n+\r\n+                  <div className=\"p-6 bg-purple-50 dark:bg-purple-900/20 rounded-xl\">\r\n+                    <div className=\"flex items-center space-x-3 mb-3\">\r\n+                      <Calendar className=\"h-5 w-5 text-purple-600\" />\r\n+                      <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Last Backup</h3>\r\n+                    </div>\r\n+                    <p className=\"text-lg font-bold text-purple-600\">\r\n+                      {new Date(dataStats.lastBackup).toLocaleDateString()}\r\n+                    </p>\r\n+                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Automatic backup</p>\r\n+                  </div>\r\n+                </div>\r\n+\r\n+                {/* Export/Import Actions */}\r\n+                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n+                  <Card className=\"p-6\">\r\n+                    <div className=\"flex items-center space-x-3 mb-4\">\r\n+                      <Download className=\"h-6 w-6 text-blue-600\" />\r\n+                      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Export Data</h3>\r\n+                    </div>\r\n                     <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\r\n-                      Download all your data including records, reports, and settings.\r\n+                      Download all your data including records, reports, and settings as a JSON file.\r\n                     </p>\r\n                     <button\r\n                       onClick={handleExportData}\r\n-                      className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n+                      disabled={isLoading}\r\n+                      className=\"btn-secondary w-full flex items-center justify-center space-x-2\"\r\n                     >\r\n-                      Export Data\r\n+                      {isLoading ? <RefreshCw className=\"h-4 w-4 animate-spin\" /> : <Download className=\"h-4 w-4\" />}\r\n+                      <span>{isLoading ? 'Exporting...' : 'Export Data'}</span>\r\n                     </button>\r\n                   </Card>\r\n \r\n-                  <Card className=\"p-4\">\r\n-                    <div className=\"flex items-center space-x-3 mb-3\">\r\n-                      <Upload className=\"h-5 w-5 text-green-500\" />\r\n-                      <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Import Data</h3>\r\n+                  <Card className=\"p-6\">\r\n+                    <div className=\"flex items-center space-x-3 mb-4\">\r\n+                      <Upload className=\"h-6 w-6 text-green-600\" />\r\n+                      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Import Data</h3>\r\n                     </div>\r\n                     <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\r\n-                      Import data from CSV or Excel files.\r\n+                      Import data from CSV or Excel files. Supported formats: CSV, XLSX, JSON.\r\n                     </p>\r\n-                    <button\r\n-                      onClick={handleImportData}\r\n-                      className=\"w-full px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n-                    >\r\n-                      Import Data\r\n+                    <button className=\"btn-primary w-full flex items-center justify-center space-x-2\">\r\n+                      <Upload className=\"h-4 w-4\" />\r\n+                      <span>Import Data</span>\r\n                     </button>\r\n                   </Card>\r\n                 </div>\r\n \r\n-                <div className=\"p-4 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg\">\r\n+                {/* Backup Settings */}\r\n+                <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4\">Backup Settings</h3>\r\n+                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+                    <FormSelect\r\n+                      label=\"Backup Frequency\"\r\n+                      value={systemSettings.backupFrequency}\r\n+                      onChange={(value) => setSystemSettings({ ...systemSettings, backupFrequency: value as any })}\r\n+                      options={[\r\n+                        { value: 'daily', label: 'Daily' },\r\n+                        { value: 'weekly', label: 'Weekly' },\r\n+                        { value: 'monthly', label: 'Monthly' },\r\n+                      ]}\r\n+                    />\r\n+                    <FormInput\r\n+                      label=\"Data Retention (days)\"\r\n+                      type=\"number\"\r\n+                      value={systemSettings.dataRetention.toString()}\r\n+                      onChange={(value) => setSystemSettings({ ...systemSettings, dataRetention: parseInt(value as string) })}\r\n+                    />\r\n+                  </div>\r\n+                </div>\r\n+\r\n+                {/* Security Notice */}\r\n+                <div className=\"p-6 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-xl\">\r\n                   <div className=\"flex items-center space-x-2 mb-2\">\r\n-                    <Shield className=\"h-4 w-4 text-yellow-600\" />\r\n-                    <span className=\"font-medium text-yellow-800 dark:text-yellow-200\">Data Security</span>\r\n+                    <Shield className=\"h-5 w-5 text-yellow-600\" />\r\n+                    <span className=\"font-semibold text-yellow-800 dark:text-yellow-200\">Data Security</span>\r\n                   </div>\r\n                   <p className=\"text-sm text-yellow-700 dark:text-yellow-300\">\r\n-                    Your data is encrypted and stored securely. Only you and authorized administrators can access your information.\r\n+                    Your data is encrypted and stored securely. Only you and authorized administrators can access your information. \r\n+                    All exports are encrypted and require authentication to open.\r\n                   </p>\r\n                 </div>\r\n               </div>\r\n             )}\r\n+\r\n+            {/* System Tab (Admin Only) */}\r\n+            {activeTab === 'system' && user?.role === 'admin' && (\r\n+              <div className=\"space-y-8\">\r\n+                <div className=\"flex items-center space-x-3 mb-6\">\r\n+                  <SettingsIcon className=\"h-6 w-6 text-bright-green\" />\r\n+                  <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">System Administration</h2>\r\n+                </div>\r\n+\r\n+                {/* System Status */}\r\n+                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n+                  <div className=\"p-6 bg-green-50 dark:bg-green-900/20 rounded-xl\">\r\n+                    <div className=\"flex items-center space-x-3 mb-3\">\r\n+                      <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\r\n+                      <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">System Status</h3>\r\n+                    </div>\r\n+                    <p className=\"text-lg font-bold text-green-600\">Operational</p>\r\n+                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">All systems running normally</p>\r\n+                  </div>\r\n+\r\n+                  <div className=\"p-6 bg-blue-50 dark:bg-blue-900/20 rounded-xl\">\r\n+                    <div className=\"flex items-center space-x-3 mb-3\">\r\n+                      <Users className=\"h-5 w-5 text-blue-600\" />\r\n+                      <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Active Users</h3>\r\n+                    </div>\r\n+                    <p className=\"text-lg font-bold text-blue-600\">12</p>\r\n+                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Currently online</p>\r\n+                  </div>\r\n+                </div>\r\n+\r\n+                {/* System Controls */}\r\n+                <div className=\"space-y-6\">\r\n+                  <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                    <div className=\"flex items-center justify-between mb-4\">\r\n+                      <div className=\"flex items-center space-x-3\">\r\n+                        <AlertTriangle className=\"h-5 w-5 text-orange-600\" />\r\n+                        <div>\r\n+                          <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Maintenance Mode</h3>\r\n+                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n+                            {systemSettings.maintenanceMode \r\n+                              ? 'System is in maintenance mode' \r\n+                              : 'Enable maintenance mode for system updates'\r\n+                            }\r\n+                          </p>\r\n+                        </div>\r\n+                      </div>\r\n+                      <button\r\n+                        onClick={handleSystemMaintenance}\r\n+                        disabled={isLoading}\r\n+                        className={`px-4 py-2 rounded-lg font-medium transition-colors ${\r\n+                          systemSettings.maintenanceMode\r\n+                            ? 'bg-green-600 hover:bg-green-700 text-white'\r\n+                            : 'bg-orange-600 hover:bg-orange-700 text-white'\r\n+                        }`}\r\n+                      >\r\n+                        {isLoading ? 'Processing...' : systemSettings.maintenanceMode ? 'Disable' : 'Enable'}\r\n+                      </button>\r\n+                    </div>\r\n+                  </div>\r\n+\r\n+                  <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                    <div className=\"flex items-center justify-between mb-4\">\r\n+                      <div className=\"flex items-center space-x-3\">\r\n+                        <Cloud className=\"h-5 w-5 text-blue-600\" />\r\n+                        <div>\r\n+                          <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Auto Backup</h3>\r\n+                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n+                            Automatic daily backups to cloud storage\r\n+                          </p>\r\n+                        </div>\r\n+                      </div>\r\n+                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                        <input\r\n+                          type=\"checkbox\"\r\n+                          checked={systemSettings.autoBackup}\r\n+                          onChange={(e) => setSystemSettings({ ...systemSettings, autoBackup: e.target.checked })}\r\n+                          className=\"sr-only peer\"\r\n+                        />\r\n+                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                      </label>\r\n+                    </div>\r\n+                  </div>\r\n+\r\n+                  <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                    <div className=\"flex items-center justify-between mb-4\">\r\n+                      <div className=\"flex items-center space-x-3\">\r\n+                        <BarChart3 className=\"h-5 w-5 text-purple-600\" />\r\n+                        <div>\r\n+                          <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">System Logs</h3>\r\n+                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n+                            Enable detailed system activity logging\r\n+                          </p>\r\n+                        </div>\r\n+                      </div>\r\n+                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                        <input\r\n+                          type=\"checkbox\"\r\n+                          checked={systemSettings.systemLogs}\r\n+                          onChange={(e) => setSystemSettings({ ...systemSettings, systemLogs: e.target.checked })}\r\n+                          className=\"sr-only peer\"\r\n+                        />\r\n+                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                      </label>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+\r\n+                {/* System Information */}\r\n+                <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4\">System Information</h3>\r\n+                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+                    <div className=\"flex justify-between\">\r\n+                      <span className=\"text-gray-600 dark:text-gray-400\">Version</span>\r\n+                      <span className=\"font-medium text-gray-900 dark:text-gray-100\">1.0.0</span>\r\n+                    </div>\r\n+                    <div className=\"flex justify-between\">\r\n+                      <span className=\"text-gray-600 dark:text-gray-400\">Last Update</span>\r\n+                      <span className=\"font-medium text-gray-900 dark:text-gray-100\">2024-01-20</span>\r\n+                    </div>\r\n+                    <div className=\"flex justify-between\">\r\n+                      <span className=\"text-gray-600 dark:text-gray-400\">Database Size</span>\r\n+                      <span className=\"font-medium text-gray-900 dark:text-gray-100\">2.4 MB</span>\r\n+                    </div>\r\n+                    <div className=\"flex justify-between\">\r\n+                      <span className=\"text-gray-600 dark:text-gray-400\">Uptime</span>\r\n+                      <span className=\"font-medium text-gray-900 dark:text-gray-100\">99.9%</span>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n           </Card>\r\n         </div>\r\n       </div>\r\n     </div>\r\n   );\r\n-};\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1759906409927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,18 @@\n   BarChart3,\r\n   Archive,\r\n   Cloud,\r\n   Wifi,\r\n-  WifiOff\r\n+  WifiOff,\r\n+  Truck,\r\n+  MessageSquare,\r\n+  Volume2,\r\n+  VolumeX,\r\n+  Sun,\r\n+  Moon,\r\n+  Monitor,\r\n+  Smartphone,\r\n+  Tablet\r\n } from 'lucide-react';\r\n \r\n interface UserProfile {\r\n   id: string;\r\n"
                },
                {
                    "date": 1759906428258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -663,25 +663,49 @@\n                 </div>\r\n               </div>\r\n             )}\r\n \r\n-            {/* Notifications Tab */}\r\n+            {/* Enhanced Notifications Tab */}\r\n             {activeTab === 'notifications' && (\r\n               <div className=\"space-y-8\">\r\n-                <div className=\"flex items-center space-x-3 mb-6\">\r\n-                  <Bell className=\"h-6 w-6 text-bright-green\" />\r\n-                  <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Notification Preferences</h2>\r\n+                <div className=\"flex items-center justify-between mb-6\">\r\n+                  <div className=\"flex items-center space-x-3\">\r\n+                    <div className=\"p-3 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl shadow-lg\">\r\n+                      <Bell className=\"h-6 w-6 text-white\" />\r\n+                    </div>\r\n+                    <div>\r\n+                      <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Notification Preferences</h2>\r\n+                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Customize how and when you receive notifications</p>\r\n+                    </div>\r\n+                  </div>\r\n+                  <div className=\"flex items-center space-x-2\">\r\n+                    <div className={`w-3 h-3 rounded-full ${notificationSettings.emailNotifications ? 'bg-green-500' : 'bg-gray-400'} animate-pulse`}></div>\r\n+                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n+                      {notificationSettings.emailNotifications ? 'Active' : 'Inactive'}\r\n+                    </span>\r\n+                  </div>\r\n                 </div>\r\n \r\n+                {/* Notification Channels */}\r\n                 <div className=\"space-y-6\">\r\n+                  <div className=\"mb-6\">\r\n+                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n+                      <MessageSquare className=\"h-5 w-5 text-blue-600\" />\r\n+                      <span>Notification Channels</span>\r\n+                    </h3>\r\n+                  </div>\r\n+\r\n                   {/* Email Notifications */}\r\n-                  <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                  <div className=\"group p-6 bg-gradient-to-r from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20 rounded-xl border border-blue-200 dark:border-blue-800 hover:shadow-lg transition-all duration-200\">\r\n                     <div className=\"flex items-center justify-between mb-4\">\r\n-                      <div className=\"flex items-center space-x-3\">\r\n-                        <Mail className=\"h-5 w-5 text-blue-600\" />\r\n+                      <div className=\"flex items-center space-x-4\">\r\n+                        <div className=\"p-3 bg-blue-500 rounded-xl shadow-lg group-hover:scale-110 transition-transform duration-200\">\r\n+                          <Mail className=\"h-6 w-6 text-white\" />\r\n+                        </div>\r\n                         <div>\r\n                           <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Email Notifications</h3>\r\n                           <p className=\"text-sm text-gray-600 dark:text-gray-400\">Receive notifications via email</p>\r\n+                          <p className=\"text-xs text-blue-600 dark:text-blue-400 mt-1\">Primary notification method</p>\r\n                         </div>\r\n                       </div>\r\n                       <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                         <input\r\n@@ -689,21 +713,24 @@\n                           checked={notificationSettings.emailNotifications}\r\n                           onChange={(e) => setNotificationSettings({ ...notificationSettings, emailNotifications: e.target.checked })}\r\n                           className=\"sr-only peer\"\r\n                         />\r\n-                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                        <div className=\"w-12 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-500/20 dark:peer-focus:ring-blue-500/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-500\"></div>\r\n                       </label>\r\n                     </div>\r\n                   </div>\r\n \r\n                   {/* SMS Notifications */}\r\n-                  <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                  <div className=\"group p-6 bg-gradient-to-r from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 rounded-xl border border-green-200 dark:border-green-800 hover:shadow-lg transition-all duration-200\">\r\n                     <div className=\"flex items-center justify-between mb-4\">\r\n-                      <div className=\"flex items-center space-x-3\">\r\n-                        <Phone className=\"h-5 w-5 text-green-600\" />\r\n+                      <div className=\"flex items-center space-x-4\">\r\n+                        <div className=\"p-3 bg-green-500 rounded-xl shadow-lg group-hover:scale-110 transition-transform duration-200\">\r\n+                          <Phone className=\"h-6 w-6 text-white\" />\r\n+                        </div>\r\n                         <div>\r\n                           <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">SMS Notifications</h3>\r\n                           <p className=\"text-sm text-gray-600 dark:text-gray-400\">Receive notifications via SMS</p>\r\n+                          <p className=\"text-xs text-green-600 dark:text-green-400 mt-1\">Requires phone number verification</p>\r\n                         </div>\r\n                       </div>\r\n                       <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                         <input\r\n@@ -711,21 +738,59 @@\n                           checked={notificationSettings.smsNotifications}\r\n                           onChange={(e) => setNotificationSettings({ ...notificationSettings, smsNotifications: e.target.checked })}\r\n                           className=\"sr-only peer\"\r\n                         />\r\n-                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                        <div className=\"w-12 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-500/20 dark:peer-focus:ring-green-500/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-green-500\"></div>\r\n                       </label>\r\n                     </div>\r\n                   </div>\r\n \r\n+                  {/* Push Notifications */}\r\n+                  <div className=\"group p-6 bg-gradient-to-r from-purple-50 to-purple-100 dark:from-purple-900/20 dark:to-purple-800/20 rounded-xl border border-purple-200 dark:border-purple-800 hover:shadow-lg transition-all duration-200\">\r\n+                    <div className=\"flex items-center justify-between mb-4\">\r\n+                      <div className=\"flex items-center space-x-4\">\r\n+                        <div className=\"p-3 bg-purple-500 rounded-xl shadow-lg group-hover:scale-110 transition-transform duration-200\">\r\n+                          <Bell className=\"h-6 w-6 text-white\" />\r\n+                        </div>\r\n+                        <div>\r\n+                          <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Push Notifications</h3>\r\n+                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Browser and mobile push notifications</p>\r\n+                          <p className=\"text-xs text-purple-600 dark:text-purple-400 mt-1\">Real-time alerts</p>\r\n+                        </div>\r\n+                      </div>\r\n+                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                        <input\r\n+                          type=\"checkbox\"\r\n+                          checked={notificationSettings.pushNotifications}\r\n+                          onChange={(e) => setNotificationSettings({ ...notificationSettings, pushNotifications: e.target.checked })}\r\n+                          className=\"sr-only peer\"\r\n+                        />\r\n+                        <div className=\"w-12 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-purple-500/20 dark:peer-focus:ring-purple-500/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-purple-500\"></div>\r\n+                      </label>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+\r\n+                {/* Notification Types */}\r\n+                <div className=\"space-y-6\">\r\n+                  <div className=\"mb-6\">\r\n+                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n+                      <Zap className=\"h-5 w-5 text-yellow-600\" />\r\n+                      <span>Notification Types</span>\r\n+                    </h3>\r\n+                  </div>\r\n+\r\n                   {/* Delivery Alerts */}\r\n-                  <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                  <div className=\"group p-6 bg-gradient-to-r from-orange-50 to-orange-100 dark:from-orange-900/20 dark:to-orange-800/20 rounded-xl border border-orange-200 dark:border-orange-800 hover:shadow-lg transition-all duration-200\">\r\n                     <div className=\"flex items-center justify-between mb-4\">\r\n-                      <div className=\"flex items-center space-x-3\">\r\n-                        <Truck className=\"h-5 w-5 text-purple-600\" />\r\n+                      <div className=\"flex items-center space-x-4\">\r\n+                        <div className=\"p-3 bg-orange-500 rounded-xl shadow-lg group-hover:scale-110 transition-transform duration-200\">\r\n+                          <Truck className=\"h-6 w-6 text-white\" />\r\n+                        </div>\r\n                         <div>\r\n                           <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Delivery Alerts</h3>\r\n                           <p className=\"text-sm text-gray-600 dark:text-gray-400\">Get notified when deliveries are completed</p>\r\n+                          <p className=\"text-xs text-orange-600 dark:text-orange-400 mt-1\">Critical business updates</p>\r\n                         </div>\r\n                       </div>\r\n                       <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                         <input\r\n@@ -733,21 +798,84 @@\n                           checked={notificationSettings.deliveryAlerts}\r\n                           onChange={(e) => setNotificationSettings({ ...notificationSettings, deliveryAlerts: e.target.checked })}\r\n                           className=\"sr-only peer\"\r\n                         />\r\n-                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                        <div className=\"w-12 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-orange-500/20 dark:peer-focus:ring-orange-500/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-orange-500\"></div>\r\n                       </label>\r\n                     </div>\r\n                   </div>\r\n \r\n+                  {/* Discrepancy Alerts */}\r\n+                  <div className=\"group p-6 bg-gradient-to-r from-red-50 to-red-100 dark:from-red-900/20 dark:to-red-800/20 rounded-xl border border-red-200 dark:border-red-800 hover:shadow-lg transition-all duration-200\">\r\n+                    <div className=\"flex items-center justify-between mb-4\">\r\n+                      <div className=\"flex items-center space-x-4\">\r\n+                        <div className=\"p-3 bg-red-500 rounded-xl shadow-lg group-hover:scale-110 transition-transform duration-200\">\r\n+                          <AlertTriangle className=\"h-6 w-6 text-white\" />\r\n+                        </div>\r\n+                        <div>\r\n+                          <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Discrepancy Alerts</h3>\r\n+                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Get notified about quantity discrepancies</p>\r\n+                          <p className=\"text-xs text-red-600 dark:text-red-400 mt-1\">High priority alerts</p>\r\n+                        </div>\r\n+                      </div>\r\n+                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                        <input\r\n+                          type=\"checkbox\"\r\n+                          checked={notificationSettings.discrepancyAlerts}\r\n+                          onChange={(e) => setNotificationSettings({ ...notificationSettings, discrepancyAlerts: e.target.checked })}\r\n+                          className=\"sr-only peer\"\r\n+                        />\r\n+                        <div className=\"w-12 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-red-500/20 dark:peer-focus:ring-red-500/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-red-500\"></div>\r\n+                      </label>\r\n+                    </div>\r\n+                  </div>\r\n+\r\n+                  {/* Weekly Reports */}\r\n+                  <div className=\"group p-6 bg-gradient-to-r from-indigo-50 to-indigo-100 dark:from-indigo-900/20 dark:to-indigo-800/20 rounded-xl border border-indigo-200 dark:border-indigo-800 hover:shadow-lg transition-all duration-200\">\r\n+                    <div className=\"flex items-center justify-between mb-4\">\r\n+                      <div className=\"flex items-center space-x-4\">\r\n+                        <div className=\"p-3 bg-indigo-500 rounded-xl shadow-lg group-hover:scale-110 transition-transform duration-200\">\r\n+                          <BarChart3 className=\"h-6 w-6 text-white\" />\r\n+                        </div>\r\n+                        <div>\r\n+                          <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Weekly Reports</h3>\r\n+                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Receive weekly performance summaries</p>\r\n+                          <p className=\"text-xs text-indigo-600 dark:text-indigo-400 mt-1\">Business insights</p>\r\n+                        </div>\r\n+                      </div>\r\n+                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                        <input\r\n+                          type=\"checkbox\"\r\n+                          checked={notificationSettings.weeklyReports}\r\n+                          onChange={(e) => setNotificationSettings({ ...notificationSettings, weeklyReports: e.target.checked })}\r\n+                          className=\"sr-only peer\"\r\n+                        />\r\n+                        <div className=\"w-12 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-500/20 dark:peer-focus:ring-indigo-500/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-indigo-500\"></div>\r\n+                      </label>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+\r\n+                {/* Advanced Settings */}\r\n+                <div className=\"space-y-6\">\r\n+                  <div className=\"mb-6\">\r\n+                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n+                      <SettingsIcon className=\"h-5 w-5 text-gray-600\" />\r\n+                      <span>Advanced Settings</span>\r\n+                    </h3>\r\n+                  </div>\r\n+\r\n                   {/* Quiet Hours */}\r\n-                  <div className=\"p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n+                  <div className=\"group p-6 bg-gradient-to-r from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-700 rounded-xl border border-gray-200 dark:border-gray-600 hover:shadow-lg transition-all duration-200\">\r\n                     <div className=\"flex items-center justify-between mb-4\">\r\n-                      <div className=\"flex items-center space-x-3\">\r\n-                        <Clock className=\"h-5 w-5 text-orange-600\" />\r\n+                      <div className=\"flex items-center space-x-4\">\r\n+                        <div className=\"p-3 bg-gray-500 rounded-xl shadow-lg group-hover:scale-110 transition-transform duration-200\">\r\n+                          <Clock className=\"h-6 w-6 text-white\" />\r\n+                        </div>\r\n                         <div>\r\n                           <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Quiet Hours</h3>\r\n                           <p className=\"text-sm text-gray-600 dark:text-gray-400\">Disable notifications during specific hours</p>\r\n+                          <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">Respect your sleep schedule</p>\r\n                         </div>\r\n                       </div>\r\n                       <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                         <input\r\n@@ -758,38 +886,72 @@\n                             quietHours: { ...notificationSettings.quietHours, enabled: e.target.checked }\r\n                           })}\r\n                           className=\"sr-only peer\"\r\n                         />\r\n-                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n+                        <div className=\"w-12 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-gray-500/20 dark:peer-focus:ring-gray-500/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-gray-500\"></div>\r\n                       </label>\r\n                     </div>\r\n                     {notificationSettings.quietHours.enabled && (\r\n-                      <div className=\"grid grid-cols-2 gap-4 mt-4\">\r\n-                        <FormInput\r\n-                          label=\"Start Time\"\r\n-                          type=\"time\"\r\n-                          value={notificationSettings.quietHours.start}\r\n-                          onChange={(value) => setNotificationSettings({ \r\n-                            ...notificationSettings, \r\n-                            quietHours: { ...notificationSettings.quietHours, start: value as string }\r\n-                          })}\r\n-                        />\r\n-                        <FormInput\r\n-                          label=\"End Time\"\r\n-                          type=\"time\"\r\n-                          value={notificationSettings.quietHours.end}\r\n-                          onChange={(value) => setNotificationSettings({ \r\n-                            ...notificationSettings, \r\n-                            quietHours: { ...notificationSettings.quietHours, end: value as string }\r\n-                          })}\r\n-                        />\r\n+                      <div className=\"mt-6 p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-600\">\r\n+                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+                          <FormInput\r\n+                            label=\"Start Time\"\r\n+                            type=\"time\"\r\n+                            value={notificationSettings.quietHours.start}\r\n+                            onChange={(value) => setNotificationSettings({ \r\n+                              ...notificationSettings, \r\n+                              quietHours: { ...notificationSettings.quietHours, start: value as string }\r\n+                            })}\r\n+                            leftIcon={<Sun className=\"h-4 w-4\" />}\r\n+                          />\r\n+                          <FormInput\r\n+                            label=\"End Time\"\r\n+                            type=\"time\"\r\n+                            value={notificationSettings.quietHours.end}\r\n+                            onChange={(value) => setNotificationSettings({ \r\n+                              ...notificationSettings, \r\n+                              quietHours: { ...notificationSettings.quietHours, end: value as string }\r\n+                            })}\r\n+                            leftIcon={<Moon className=\"h-4 w-4\" />}\r\n+                          />\r\n+                        </div>\r\n                       </div>\r\n                     )}\r\n                   </div>\r\n+\r\n+                  {/* Sound Settings */}\r\n+                  <div className=\"group p-6 bg-gradient-to-r from-pink-50 to-pink-100 dark:from-pink-900/20 dark:to-pink-800/20 rounded-xl border border-pink-200 dark:border-pink-800 hover:shadow-lg transition-all duration-200\">\r\n+                    <div className=\"flex items-center justify-between mb-4\">\r\n+                      <div className=\"flex items-center space-x-4\">\r\n+                        <div className=\"p-3 bg-pink-500 rounded-xl shadow-lg group-hover:scale-110 transition-transform duration-200\">\r\n+                          {notificationSettings.soundEffects ? <Volume2 className=\"h-6 w-6 text-white\" /> : <VolumeX className=\"h-6 w-6 text-white\" />}\r\n+                        </div>\r\n+                        <div>\r\n+                          <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Sound Effects</h3>\r\n+                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Play sounds for notifications</p>\r\n+                          <p className=\"text-xs text-pink-600 dark:text-pink-400 mt-1\">Audio feedback</p>\r\n+                        </div>\r\n+                      </div>\r\n+                      <label className=\"relative inline-flex items-center cursor-pointer\">\r\n+                        <input\r\n+                          type=\"checkbox\"\r\n+                          checked={notificationSettings.soundEffects}\r\n+                          onChange={(e) => setNotificationSettings({ ...notificationSettings, soundEffects: e.target.checked })}\r\n+                          className=\"sr-only peer\"\r\n+                        />\r\n+                        <div className=\"w-12 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-pink-500/20 dark:peer-focus:ring-pink-500/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-pink-500\"></div>\r\n+                      </label>\r\n+                    </div>\r\n+                  </div>\r\n                 </div>\r\n \r\n-                <div className=\"flex justify-end\">\r\n-                  <button className=\"btn-primary flex items-center space-x-2\">\r\n+                {/* Action Buttons */}\r\n+                <div className=\"flex flex-col sm:flex-row gap-4 justify-end\">\r\n+                  <button className=\"btn-outline flex items-center justify-center space-x-2\">\r\n+                    <RefreshCw className=\"h-4 w-4\" />\r\n+                    <span>Reset to Defaults</span>\r\n+                  </button>\r\n+                  <button className=\"btn-primary flex items-center justify-center space-x-2\">\r\n                     <Save className=\"h-4 w-4\" />\r\n                     <span>Save Notification Settings</span>\r\n                   </button>\r\n                 </div>\r\n"
                },
                {
                    "date": 1759906617311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,9 @@\n-import React, { useState, useRef, useEffect } from 'react';\r\n+import React, { useState, useRef } from 'react';\r\n import { Card } from '../../components/Card';\r\n import { FormInput } from '../../components/FormInput';\r\n import { FormSelect } from '../../components/FormSelect';\r\n import { useApp } from '../../context/AppContext';\r\n-import { useNotifications } from '../../context/NotificationsContext';\r\n import { useNotificationService } from '../../services/notificationService';\r\n import { \r\n   User, \r\n   Bell, \r\n@@ -16,41 +15,31 @@\n   Save, \r\n   Camera,\r\n   Lock,\r\n   Key,\r\n-  Trash2,\r\n   AlertTriangle,\r\n   CheckCircle,\r\n   Eye,\r\n   EyeOff,\r\n   Settings as SettingsIcon,\r\n   Users,\r\n-  Server,\r\n   HardDrive,\r\n   RefreshCw,\r\n   FileText,\r\n   Calendar,\r\n-  Globe,\r\n   Mail,\r\n   Phone,\r\n-  MapPin,\r\n   Clock,\r\n   Zap,\r\n   Activity,\r\n   BarChart3,\r\n-  Archive,\r\n   Cloud,\r\n-  Wifi,\r\n-  WifiOff,\r\n   Truck,\r\n   MessageSquare,\r\n   Volume2,\r\n   VolumeX,\r\n   Sun,\r\n-  Moon,\r\n-  Monitor,\r\n-  Smartphone,\r\n-  Tablet\r\n+  Moon\r\n } from 'lucide-react';\r\n \r\n interface UserProfile {\r\n   id: string;\r\n"
                },
                {
                    "date": 1759906639203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n }\r\n \r\n export const SettingsPage: React.FC = () => {\r\n   const { user, isDark, setIsDark, sourceRecords, transportLogs } = useApp();\r\n-  const { addNotification } = useNotificationService();\r\n+  const { addSuccessNotification, addErrorNotification } = useNotificationService();\r\n   const fileInputRef = useRef<HTMLInputElement>(null);\r\n   const [activeTab, setActiveTab] = useState<'profile' | 'security' | 'notifications' | 'appearance' | 'data' | 'system'>('profile');\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [showPassword, setShowPassword] = useState(false);\r\n"
                },
                {
                    "date": 1759906671000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,8 +130,9 @@\n     systemAlerts: user?.role === 'admin',\r\n     maintenanceAlerts: user?.role === 'admin',\r\n     securityAlerts: true,\r\n     marketingEmails: false,\r\n+    soundEffects: false,\r\n     quietHours: {\r\n       enabled: false,\r\n       start: '22:00',\r\n       end: '07:00',\r\n"
                },
                {
                    "date": 1759906686917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,24 +177,16 @@\n   const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n     const file = event.target.files?.[0];\r\n     if (file) {\r\n       if (file.size > 5 * 1024 * 1024) { // 5MB limit\r\n-        addNotification({\r\n-          type: 'error',\r\n-          title: 'File Too Large',\r\n-          message: 'Please select an image smaller than 5MB.',\r\n-        });\r\n+        addErrorNotification('File Too Large', 'Please select an image smaller than 5MB.');\r\n         return;\r\n       }\r\n       \r\n       const reader = new FileReader();\r\n       reader.onload = (e) => {\r\n         setProfileData({ ...profileData, avatar: e.target?.result as string });\r\n-        addNotification({\r\n-          type: 'success',\r\n-          title: 'Avatar Updated',\r\n-          message: 'Your profile picture has been updated successfully.',\r\n-        });\r\n+        addSuccessNotification('Avatar Updated', 'Your profile picture has been updated successfully.');\r\n       };\r\n       reader.readAsDataURL(file);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1759906713244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,19 +199,11 @@\n       \r\n       // Update user in context\r\n       // setUser({ ...user, ...profileData });\r\n       \r\n-      addNotification({\r\n-        type: 'success',\r\n-        title: 'Profile Updated',\r\n-        message: 'Your profile information has been saved successfully.',\r\n-      });\r\n+      addSuccessNotification('Profile Updated', 'Your profile information has been saved successfully.');\r\n     } catch (error) {\r\n-      addNotification({\r\n-        type: 'error',\r\n-        title: 'Update Failed',\r\n-        message: 'Failed to update profile. Please try again.',\r\n-      });\r\n+      addErrorNotification('Update Failed', 'Failed to update profile. Please try again.');\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1759906755268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,22 +209,14 @@\n   };\r\n \r\n   const handleChangePassword = async () => {\r\n     if (newPassword !== confirmPassword) {\r\n-      addNotification({\r\n-        type: 'error',\r\n-        title: 'Password Mismatch',\r\n-        message: 'New password and confirmation do not match.',\r\n-      });\r\n+      addErrorNotification('Password Mismatch', 'New password and confirmation do not match.');\r\n       return;\r\n     }\r\n \r\n     if (newPassword.length < 8) {\r\n-      addNotification({\r\n-        type: 'error',\r\n-        title: 'Weak Password',\r\n-        message: 'Password must be at least 8 characters long.',\r\n-      });\r\n+      addErrorNotification('Weak Password', 'Password must be at least 8 characters long.');\r\n       return;\r\n     }\r\n \r\n     setIsLoading(true);\r\n@@ -239,19 +231,11 @@\n       setCurrentPassword('');\r\n       setNewPassword('');\r\n       setConfirmPassword('');\r\n       \r\n-      addNotification({\r\n-        type: 'success',\r\n-        title: 'Password Changed',\r\n-        message: 'Your password has been updated successfully.',\r\n-      });\r\n+      addSuccessNotification('Password Changed', 'Your password has been updated successfully.');\r\n     } catch (error) {\r\n-      addNotification({\r\n-        type: 'error',\r\n-        title: 'Password Change Failed',\r\n-        message: 'Failed to change password. Please try again.',\r\n-      });\r\n+      addErrorNotification('Password Change Failed', 'Failed to change password. Please try again.');\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1759906790309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,19 +266,11 @@\n       a.click();\r\n       document.body.removeChild(a);\r\n       URL.revokeObjectURL(url);\r\n \r\n-      addNotification({\r\n-        type: 'success',\r\n-        title: 'Data Exported',\r\n-        message: 'Your data has been exported successfully.',\r\n-      });\r\n+      addSuccessNotification('Data Exported', 'Your data has been exported successfully.');\r\n     } catch (error) {\r\n-      addNotification({\r\n-        type: 'error',\r\n-        title: 'Export Failed',\r\n-        message: 'Failed to export data. Please try again.',\r\n-      });\r\n+      addErrorNotification('Export Failed', 'Failed to export data. Please try again.');\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n@@ -292,21 +284,11 @@\n         ...systemSettings,\r\n         maintenanceMode: !systemSettings.maintenanceMode,\r\n       });\r\n       \r\n-      addNotification({\r\n-        type: systemSettings.maintenanceMode ? 'success' : 'warning',\r\n-        title: systemSettings.maintenanceMode ? 'Maintenance Mode Disabled' : 'Maintenance Mode Enabled',\r\n-        message: systemSettings.maintenanceMode \r\n-          ? 'System is now accessible to users.' \r\n-          : 'System is now in maintenance mode. Users will see a maintenance page.',\r\n-      });\r\n+      addSuccessNotification(systemSettings.maintenanceMode ? 'Maintenance Mode Disabled' : 'Maintenance Mode Enabled', systemSettings.maintenanceMode ? 'System is now accessible to users.' : 'System is now in maintenance mode. Users will see a maintenance page.');\r\n     } catch (error) {\r\n-      addNotification({\r\n-        type: 'error',\r\n-        title: 'Operation Failed',\r\n-        message: 'Failed to toggle maintenance mode.',\r\n-      });\r\n+      addErrorNotification('Operation Failed', 'Failed to toggle maintenance mode.');\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1759906813059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,14 +153,14 @@\n     soundEffects: false,\r\n   });\r\n \r\n   // Data management state\r\n-  const [dataStats, setDataStats] = useState({\r\n+  const dataStats = {\r\n     totalRecords: sourceRecords.length,\r\n     totalSize: '2.4 MB',\r\n     lastBackup: '2024-01-20 14:30',\r\n     nextBackup: '2024-01-21 14:30',\r\n-  });\r\n+  };\r\n \r\n   const tabs = [\r\n     { id: 'profile', label: 'Profile', icon: User, description: 'Manage your personal information' },\r\n     { id: 'security', label: 'Security', icon: Shield, description: 'Password and security settings' },\r\n"
                },
                {
                    "date": 1759906836451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n }\r\n \r\n export const SettingsPage: React.FC = () => {\r\n   const { user, isDark, setIsDark, sourceRecords, transportLogs } = useApp();\r\n-  const { addSuccessNotification, addErrorNotification } = useNotificationService();\r\n+  const { showSuccessNotification, showErrorNotification } = useNotificationService();\r\n   const fileInputRef = useRef<HTMLInputElement>(null);\r\n   const [activeTab, setActiveTab] = useState<'profile' | 'security' | 'notifications' | 'appearance' | 'data' | 'system'>('profile');\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [showPassword, setShowPassword] = useState(false);\r\n"
                },
                {
                    "date": 1759906862811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n   const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n     const file = event.target.files?.[0];\r\n     if (file) {\r\n       if (file.size > 5 * 1024 * 1024) { // 5MB limit\r\n-        addErrorNotification('File Too Large', 'Please select an image smaller than 5MB.');\r\n+        showErrorNotification('File Too Large', 'Please select an image smaller than 5MB.');\r\n         return;\r\n       }\r\n       \r\n       const reader = new FileReader();\r\n"
                },
                {
                    "date": 1759906895736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,9 @@\n       \r\n       const reader = new FileReader();\r\n       reader.onload = (e) => {\r\n         setProfileData({ ...profileData, avatar: e.target?.result as string });\r\n-        addSuccessNotification('Avatar Updated', 'Your profile picture has been updated successfully.');\r\n+        showSuccessNotification('Avatar Updated', 'Your profile picture has been updated successfully.');\r\n       };\r\n       reader.readAsDataURL(file);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1759906908941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,11 +199,11 @@\n       \r\n       // Update user in context\r\n       // setUser({ ...user, ...profileData });\r\n       \r\n-      addSuccessNotification('Profile Updated', 'Your profile information has been saved successfully.');\r\n+      showSuccessNotification('Profile Updated', 'Your profile information has been saved successfully.');\r\n     } catch (error) {\r\n-      addErrorNotification('Update Failed', 'Failed to update profile. Please try again.');\r\n+      showErrorNotification('Update Failed', 'Failed to update profile. Please try again.');\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1759906937167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,9 +209,9 @@\n   };\r\n \r\n   const handleChangePassword = async () => {\r\n     if (newPassword !== confirmPassword) {\r\n-      addErrorNotification('Password Mismatch', 'New password and confirmation do not match.');\r\n+      showErrorNotification('Password Mismatch', 'New password and confirmation do not match.');\r\n       return;\r\n     }\r\n \r\n     if (newPassword.length < 8) {\r\n"
                },
                {
                    "date": 1759906959447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,9 +214,9 @@\n       return;\r\n     }\r\n \r\n     if (newPassword.length < 8) {\r\n-      addErrorNotification('Weak Password', 'Password must be at least 8 characters long.');\r\n+      showErrorNotification('Weak Password', 'Password must be at least 8 characters long.');\r\n       return;\r\n     }\r\n \r\n     setIsLoading(true);\r\n"
                },
                {
                    "date": 1759907000065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -231,11 +231,11 @@\n       setCurrentPassword('');\r\n       setNewPassword('');\r\n       setConfirmPassword('');\r\n       \r\n-      addSuccessNotification('Password Changed', 'Your password has been updated successfully.');\r\n+      showSuccessNotification('Password Changed', 'Your password has been updated successfully.');\r\n     } catch (error) {\r\n-      addErrorNotification('Password Change Failed', 'Failed to change password. Please try again.');\r\n+      showErrorNotification('Password Change Failed', 'Failed to change password. Please try again.');\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n@@ -266,11 +266,11 @@\n       a.click();\r\n       document.body.removeChild(a);\r\n       URL.revokeObjectURL(url);\r\n \r\n-      addSuccessNotification('Data Exported', 'Your data has been exported successfully.');\r\n+      showSuccessNotification('Data Exported', 'Your data has been exported successfully.');\r\n     } catch (error) {\r\n-      addErrorNotification('Export Failed', 'Failed to export data. Please try again.');\r\n+      showErrorNotification('Export Failed', 'Failed to export data. Please try again.');\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1759907022734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,11 +284,11 @@\n         ...systemSettings,\r\n         maintenanceMode: !systemSettings.maintenanceMode,\r\n       });\r\n       \r\n-      addSuccessNotification(systemSettings.maintenanceMode ? 'Maintenance Mode Disabled' : 'Maintenance Mode Enabled', systemSettings.maintenanceMode ? 'System is now accessible to users.' : 'System is now in maintenance mode. Users will see a maintenance page.');\r\n+      showSuccessNotification(systemSettings.maintenanceMode ? 'Maintenance Mode Disabled' : 'Maintenance Mode Enabled', systemSettings.maintenanceMode ? 'System is now accessible to users.' : 'System is now in maintenance mode. Users will see a maintenance page.');\r\n     } catch (error) {\r\n-      addErrorNotification('Operation Failed', 'Failed to toggle maintenance mode.');\r\n+      showErrorNotification('Operation Failed', 'Failed to toggle maintenance mode.');\r\n     } finally {\r\n       setIsLoading(false);\r\n     }\r\n   };\r\n"
                }
            ],
            "date": 1759902867385,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Card } from '../../components/Card';\r\nimport { FormInput } from '../../components/FormInput';\r\nimport { FormSelect } from '../../components/FormSelect';\r\nimport { useApp } from '../../context/AppContext';\r\nimport { User, Bell, Shield, Palette, Database, Download, Upload, Save } from 'lucide-react';\r\n\r\nexport const SettingsPage: React.FC = () => {\r\n  const { user, isDarkMode, toggleDarkMode } = useApp();\r\n  const [activeTab, setActiveTab] = useState<'profile' | 'notifications' | 'appearance' | 'data'>('profile');\r\n  \r\n  // Profile settings\r\n  const [profileData, setProfileData] = useState({\r\n    name: user?.name || '',\r\n    email: user?.email || '',\r\n    role: user?.role || 'user',\r\n    phone: '',\r\n    department: '',\r\n  });\r\n\r\n  // Notification settings\r\n  const [notificationSettings, setNotificationSettings] = useState({\r\n    emailNotifications: true,\r\n    smsNotifications: false,\r\n    pushNotifications: true,\r\n    deliveryAlerts: true,\r\n    discrepancyAlerts: true,\r\n    weeklyReports: false,\r\n  });\r\n\r\n  // Appearance settings\r\n  const [appearanceSettings, setAppearanceSettings] = useState({\r\n    theme: isDarkMode ? 'dark' : 'light',\r\n    language: 'en',\r\n    timezone: 'Africa/Nairobi',\r\n    dateFormat: 'DD/MM/YYYY',\r\n  });\r\n\r\n  const handleSaveProfile = () => {\r\n    // In a real app, this would save to backend\r\n    console.log('Saving profile:', profileData);\r\n    alert('Profile saved successfully!');\r\n  };\r\n\r\n  const handleSaveNotifications = () => {\r\n    console.log('Saving notifications:', notificationSettings);\r\n    alert('Notification settings saved!');\r\n  };\r\n\r\n  const handleSaveAppearance = () => {\r\n    console.log('Saving appearance:', appearanceSettings);\r\n    if (appearanceSettings.theme === 'dark' && !isDarkMode) {\r\n      toggleDarkMode();\r\n    } else if (appearanceSettings.theme === 'light' && isDarkMode) {\r\n      toggleDarkMode();\r\n    }\r\n    alert('Appearance settings saved!');\r\n  };\r\n\r\n  const handleExportData = () => {\r\n    console.log('Exporting data...');\r\n    alert('Data export started! You will receive an email when ready.');\r\n  };\r\n\r\n  const handleImportData = () => {\r\n    console.log('Importing data...');\r\n    alert('Please select a file to import.');\r\n  };\r\n\r\n  const tabs = [\r\n    { id: 'profile', label: 'Profile', icon: User },\r\n    { id: 'notifications', label: 'Notifications', icon: Bell },\r\n    { id: 'appearance', label: 'Appearance', icon: Palette },\r\n    { id: 'data', label: 'Data Management', icon: Database },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Settings</h1>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n            Manage your account preferences and application settings\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col lg:flex-row gap-6\">\r\n        {/* Sidebar */}\r\n        <div className=\"lg:w-64\">\r\n          <Card className=\"p-4\">\r\n            <nav className=\"space-y-2\">\r\n              {tabs.map((tab) => (\r\n                <button\r\n                  key={tab.id}\r\n                  onClick={() => setActiveTab(tab.id as any)}\r\n                  className={`flex items-center space-x-3 w-full px-3 py-2 rounded-lg text-left transition-colors ${\r\n                    activeTab === tab.id\r\n                      ? 'bg-bright-green text-white'\r\n                      : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\r\n                  }`}\r\n                >\r\n                  <tab.icon className=\"h-4 w-4\" />\r\n                  <span className=\"font-medium\">{tab.label}</span>\r\n                </button>\r\n              ))}\r\n            </nav>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"flex-1\">\r\n          <Card className=\"p-6\">\r\n            {/* Profile Tab */}\r\n            {activeTab === 'profile' && (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex items-center space-x-3 mb-6\">\r\n                  <User className=\"h-6 w-6 text-bright-green\" />\r\n                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">Profile Settings</h2>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <FormInput\r\n                    label=\"Full Name\"\r\n                    type=\"text\"\r\n                    value={profileData.name}\r\n                    onChange={(value) => setProfileData({ ...profileData, name: value as string })}\r\n                    required\r\n                  />\r\n                  \r\n                  <FormInput\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    value={profileData.email}\r\n                    onChange={(value) => setProfileData({ ...profileData, email: value as string })}\r\n                    required\r\n                  />\r\n                  \r\n                  <FormInput\r\n                    label=\"Phone Number\"\r\n                    type=\"tel\"\r\n                    value={profileData.phone}\r\n                    onChange={(value) => setProfileData({ ...profileData, phone: value as string })}\r\n                  />\r\n                  \r\n                  <FormInput\r\n                    label=\"Department\"\r\n                    type=\"text\"\r\n                    value={profileData.department}\r\n                    onChange={(value) => setProfileData({ ...profileData, department: value as string })}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                  <div>\r\n                    <p className=\"font-medium text-gray-900 dark:text-gray-100\">Account Role</p>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                      {profileData.role === 'admin' ? 'Administrator' : 'User'}\r\n                    </p>\r\n                  </div>\r\n                  <Shield className=\"h-8 w-8 text-bright-green\" />\r\n                </div>\r\n\r\n                <div className=\"flex justify-end\">\r\n                  <button\r\n                    onClick={handleSaveProfile}\r\n                    className=\"flex items-center space-x-2 px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n                  >\r\n                    <Save className=\"h-4 w-4\" />\r\n                    <span>Save Profile</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Notifications Tab */}\r\n            {activeTab === 'notifications' && (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex items-center space-x-3 mb-6\">\r\n                  <Bell className=\"h-6 w-6 text-bright-green\" />\r\n                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">Notification Settings</h2>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-600 rounded-lg\">\r\n                    <div>\r\n                      <p className=\"font-medium text-gray-900 dark:text-gray-100\">Email Notifications</p>\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Receive notifications via email</p>\r\n                    </div>\r\n                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={notificationSettings.emailNotifications}\r\n                        onChange={(e) => setNotificationSettings({ ...notificationSettings, emailNotifications: e.target.checked })}\r\n                        className=\"sr-only peer\"\r\n                      />\r\n                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-600 rounded-lg\">\r\n                    <div>\r\n                      <p className=\"font-medium text-gray-900 dark:text-gray-100\">SMS Notifications</p>\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Receive notifications via SMS</p>\r\n                    </div>\r\n                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={notificationSettings.smsNotifications}\r\n                        onChange={(e) => setNotificationSettings({ ...notificationSettings, smsNotifications: e.target.checked })}\r\n                        className=\"sr-only peer\"\r\n                      />\r\n                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-600 rounded-lg\">\r\n                    <div>\r\n                      <p className=\"font-medium text-gray-900 dark:text-gray-100\">Delivery Alerts</p>\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Get notified when deliveries are completed</p>\r\n                    </div>\r\n                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={notificationSettings.deliveryAlerts}\r\n                        onChange={(e) => setNotificationSettings({ ...notificationSettings, deliveryAlerts: e.target.checked })}\r\n                        className=\"sr-only peer\"\r\n                      />\r\n                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-600 rounded-lg\">\r\n                    <div>\r\n                      <p className=\"font-medium text-gray-900 dark:text-gray-100\">Discrepancy Alerts</p>\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Get notified about quantity discrepancies</p>\r\n                    </div>\r\n                    <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={notificationSettings.discrepancyAlerts}\r\n                        onChange={(e) => setNotificationSettings({ ...notificationSettings, discrepancyAlerts: e.target.checked })}\r\n                        className=\"sr-only peer\"\r\n                      />\r\n                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-bright-green/20 dark:peer-focus:ring-bright-green/20 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-bright-green\"></div>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex justify-end\">\r\n                  <button\r\n                    onClick={handleSaveNotifications}\r\n                    className=\"flex items-center space-x-2 px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n                  >\r\n                    <Save className=\"h-4 w-4\" />\r\n                    <span>Save Notifications</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Appearance Tab */}\r\n            {activeTab === 'appearance' && (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex items-center space-x-3 mb-6\">\r\n                  <Palette className=\"h-6 w-6 text-bright-green\" />\r\n                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">Appearance Settings</h2>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <FormSelect\r\n                    label=\"Theme\"\r\n                    value={appearanceSettings.theme}\r\n                    onChange={(value) => setAppearanceSettings({ ...appearanceSettings, theme: value as string })}\r\n                    options={[\r\n                      { value: 'light', label: 'Light' },\r\n                      { value: 'dark', label: 'Dark' },\r\n                    ]}\r\n                  />\r\n                  \r\n                  <FormSelect\r\n                    label=\"Language\"\r\n                    value={appearanceSettings.language}\r\n                    onChange={(value) => setAppearanceSettings({ ...appearanceSettings, language: value as string })}\r\n                    options={[\r\n                      { value: 'en', label: 'English' },\r\n                      { value: 'sw', label: 'Kiswahili' },\r\n                    ]}\r\n                  />\r\n                  \r\n                  <FormSelect\r\n                    label=\"Timezone\"\r\n                    value={appearanceSettings.timezone}\r\n                    onChange={(value) => setAppearanceSettings({ ...appearanceSettings, timezone: value as string })}\r\n                    options={[\r\n                      { value: 'Africa/Nairobi', label: 'Nairobi (EAT)' },\r\n                      { value: 'Africa/Dar_es_Salaam', label: 'Dar es Salaam (EAT)' },\r\n                      { value: 'UTC', label: 'UTC' },\r\n                    ]}\r\n                  />\r\n                  \r\n                  <FormSelect\r\n                    label=\"Date Format\"\r\n                    value={appearanceSettings.dateFormat}\r\n                    onChange={(value) => setAppearanceSettings({ ...appearanceSettings, dateFormat: value as string })}\r\n                    options={[\r\n                      { value: 'DD/MM/YYYY', label: 'DD/MM/YYYY' },\r\n                      { value: 'MM/DD/YYYY', label: 'MM/DD/YYYY' },\r\n                      { value: 'YYYY-MM-DD', label: 'YYYY-MM-DD' },\r\n                    ]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex justify-end\">\r\n                  <button\r\n                    onClick={handleSaveAppearance}\r\n                    className=\"flex items-center space-x-2 px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n                  >\r\n                    <Save className=\"h-4 w-4\" />\r\n                    <span>Save Appearance</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Data Management Tab */}\r\n            {activeTab === 'data' && (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex items-center space-x-3 mb-6\">\r\n                  <Database className=\"h-6 w-6 text-bright-green\" />\r\n                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">Data Management</h2>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <Card className=\"p-4\">\r\n                    <div className=\"flex items-center space-x-3 mb-3\">\r\n                      <Download className=\"h-5 w-5 text-blue-500\" />\r\n                      <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Export Data</h3>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\r\n                      Download all your data including records, reports, and settings.\r\n                    </p>\r\n                    <button\r\n                      onClick={handleExportData}\r\n                      className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n                    >\r\n                      Export Data\r\n                    </button>\r\n                  </Card>\r\n\r\n                  <Card className=\"p-4\">\r\n                    <div className=\"flex items-center space-x-3 mb-3\">\r\n                      <Upload className=\"h-5 w-5 text-green-500\" />\r\n                      <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">Import Data</h3>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\r\n                      Import data from CSV or Excel files.\r\n                    </p>\r\n                    <button\r\n                      onClick={handleImportData}\r\n                      className=\"w-full px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n                    >\r\n                      Import Data\r\n                    </button>\r\n                  </Card>\r\n                </div>\r\n\r\n                <div className=\"p-4 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg\">\r\n                  <div className=\"flex items-center space-x-2 mb-2\">\r\n                    <Shield className=\"h-4 w-4 text-yellow-600\" />\r\n                    <span className=\"font-medium text-yellow-800 dark:text-yellow-200\">Data Security</span>\r\n                  </div>\r\n                  <p className=\"text-sm text-yellow-700 dark:text-yellow-300\">\r\n                    Your data is encrypted and stored securely. Only you and authorized administrators can access your information.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"
        }
    ]
}