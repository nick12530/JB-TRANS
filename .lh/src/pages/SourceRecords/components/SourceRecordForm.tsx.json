{
    "sourceFile": "src/pages/SourceRecords/components/SourceRecordForm.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1759569048557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1759569048557,
            "name": "Commit-0",
            "content": "import React from 'react';\r\nimport { FormInput } from '../../../components/FormInput';\r\nimport { FormSelect } from '../../../components/FormSelect';\r\nimport { SourceRecord } from '../../../types';\r\nimport { formatCurrency } from '../../../utils/helpers';\r\n\r\nconst pickupPoints = [\r\n  { value: 'A', label: 'Point A (100-300)' },\r\n  { value: 'B', label: 'Point B (400-600)' },\r\n  { value: 'C', label: 'Point C (700-900)' },\r\n  { value: 'D', label: 'Point D (1000-1200)' },\r\n] as const;\r\n\r\ninterface SourceRecordFormProps {\r\n  formData: Omit<SourceRecord, 'id' | 'totalCost' | 'totalPackagingCost'>;\r\n  setFormData: (data: any) => void;\r\n  errors: Record<string, string>;\r\n  user: any;\r\n}\r\n\r\nexport const SourceRecordForm: React.FC<SourceRecordFormProps> = ({\r\n  formData,\r\n  setFormData,\r\n  errors,\r\n  user,\r\n}) => {\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Basic Info */}\r\n      <div>\r\n        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Basic Information</h4>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <FormInput\r\n            label=\"Date\"\r\n            type=\"date\"\r\n            value={formData.date}\r\n            onChange={(value) => setFormData({ ...formData, date: value as string })}\r\n            error={errors.date}\r\n            required\r\n          />\r\n\r\n          <FormSelect\r\n            label=\"Pickup Point\"\r\n            value={formData.pickupPoint}\r\n            onChange={(value) => setFormData({ ...formData, pickupPoint: value as any })}\r\n            options={pickupPoints}\r\n            error={errors.pickupPoint}\r\n            required\r\n          />\r\n\r\n          <FormInput\r\n            label=\"Farmer ID\"\r\n            type=\"text\"\r\n            value={formData.farmerId}\r\n            onChange={(value) => setFormData({ ...formData, farmerId: value as string })}\r\n            error={errors.farmerId}\r\n            required\r\n            placeholder=\"Farmer identification\"\r\n          />\r\n\r\n          <FormInput\r\n            label=\"Quantity (kg)\"\r\n            type=\"number\"\r\n            value={formData.quantitySold}\r\n            onChange={(value) => setFormData({ ...formData, quantitySold: value as number })}\r\n            error={errors.quantitySold}\r\n            required\r\n            placeholder=\"Weight in kilograms\"\r\n          />\r\n\r\n          <FormInput\r\n            label=\"Price per kg\"\r\n            type=\"number\"\r\n            value={formData.itemPrice}\r\n            onChange={(value) => setFormData({ ...formData, itemPrice: value as number })}\r\n            error={errors.itemPrice}\r\n            required\r\n            placeholder=\"Price per kilogram\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Driver & Vehicle Info */}\r\n      <div>\r\n        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Driver & Vehicle Details</h4>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <FormInput\r\n            label=\"Driver Name\"\r\n            type=\"text\"\r\n            value={formData.driverName}\r\n            onChange={(value) => setFormData({ ...formData, driverName: value as string })}\r\n            error={errors.driverName}\r\n            required\r\n            placeholder=\"Driver full name\"\r\n          />\r\n\r\n          <FormInput\r\n            label=\"Driver ID\"\r\n            type=\"text\"\r\n            value={formData.driverId}\r\n            onChange={(value) => setFormData({ ...formData, driverId: value as string })}\r\n            error={errors.driverId}\r\n            required\r\n            placeholder=\"Driver identification\"\r\n          />\r\n\r\n          <FormInput\r\n            label=\"Driver Phone\"\r\n            type=\"tel\"\r\n            value={formData.driverPhone}\r\n            onChange={(value) => setFormData({ ...formData, driverPhone: value as string })}\r\n            placeholder=\"Driver phone number\"\r\n          />\r\n\r\n          <FormInput\r\n            label=\"Vehicle Registration\"\r\n            type=\"text\"\r\n            value={formData.vehicleReg}\r\n            onChange={(value) => setFormData({ ...formData, vehicleReg: value as string })}\r\n            error={errors.vehicleReg}\r\n            required\r\n            placeholder=\"e.g., KAA 123A\"\r\n          />\r\n\r\n          <FormInput\r\n            label=\"Vehicle Make\"\r\n            type=\"text\"\r\n            value={formData.vehicleMake || ''}\r\n            onChange={(value) => setFormData({ ...formData, vehicleMake: value as string })}\r\n            placeholder=\"e.g., Toyota Hiace\"\r\n            className=\"md:col-span-1\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Packaging Info */}\r\n      <div>\r\n        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Packaging Details</h4>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n          <FormInput\r\n            label=\"Basins\"\r\n            type=\"number\"\r\n            value={formData.packaging.basins}\r\n            onChange={(value) => setFormData({\r\n              ...formData,\r\n              packaging: { ...formData.packaging, basins: value as number }\r\n            })}\r\n            placeholder=\"Number of basins\"\r\n          />\r\n\r\n          <FormInput\r\n            label=\"Sacks\"\r\n            type=\"number\"\r\n            value={formData.packaging.sacks}\r\n            onChange={(value) => setFormData({\r\n              ...formData,\r\n              packaging: { ...formData.packaging, sacks: value as number }\r\n            })}\r\n            placeholder=\"Number of sacks\"\r\n          />\r\n\r\n          <FormInput\r\n            label=\"Boxes\"\r\n            type=\"number\"\r\n            value={formData.packaging.boxes}\r\n            onChange={(value) => setFormData({\r\n              ...formData,\r\n              packaging: { ...formData.packaging, boxes: value as number }\r\n            })}\r\n            placeholder=\"Number of boxes\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <FormInput\r\n            label=\"Basin Cost (each)\"\r\n            type=\"number\"\r\n            value={formData.packagingCosts.basinCost}\r\n            onChange={(value) => setFormData({\r\n              ...formData,\r\n              packagingCosts: { ...formData.packagingCosts, basinCost: value as number }\r\n            })}\r\n            placeholder=\"Cost per basin\"\r\n          />\r\n\r\n          <FormInput\r\n            label=\"Sack Cost (each)\"\r\n            type=\"number\"\r\n            value={formData.packagingCosts.sackCost}\r\n            onChange={(value) => setFormData({\r\n              ...formData,\r\n              packagingCosts: { ...formData.packagingCosts, sackCost: value as number }\r\n            })}\r\n            placeholder=\"Cost per sack\"\r\n          />\r\n\r\n          <FormInput\r\n            label=\"Box Cost (each)\"\r\n            type=\"number\"\r\n            value={formData.packagingCosts.boxCost}\r\n            onChange={(value) => setFormData({\r\n              ...formData,\r\n              packagingCosts: { ...formData.packagingCosts, boxCost: value as number }\r\n            })}\r\n            placeholder=\"Cost per box\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Data Entry Info */}\r\n      <div>\r\n        <FormInput\r\n          label=\"Entered By\"\r\n          type=\"text\"\r\n          value={formData.assignedBy || user?.name || ''}\r\n          onChange={(value) => setFormData({ ...formData, assignedBy: value as string })}\r\n          error={errors.assignedBy}\r\n          required\r\n          placeholder=\"Person entering this data\"\r\n        />\r\n      </div>\r\n\r\n      {/* Auto-calculated totals */}\r\n      {(formData.quantitySold > 0 && formData.itemPrice > 0) || formData.packaging.basins > 0 || formData.packaging.sacks > 0 || formData.packaging.boxes > 0 ? (\r\n        <div className=\"bg-green-50 dark:bg-green-900/20 p-4 rounded-lg space-y-2\">\r\n          {formData.quantitySold > 0 && formData.itemPrice > 0 && (\r\n            <p className=\"text-sm text-green-800 dark:text-green-200\">\r\n              <strong>Goods Cost:</strong> {formatCurrency(formData.quantitySold * formData.itemPrice)}\r\n            </p>\r\n          )}\r\n          \r\n          <div className=\"text-sm text-green-800 dark:text-green-200\">\r\n            <strong>Packaging Cost:</strong>\r\n            <div className=\"ml-4 space-y-1\">\r\n              {formData.packaging.basins > 0 && (\r\n                <div>Basins: {formData.packaging.basins} × {formatCurrency(formData.packagingCosts.basinCost)} = {formatCurrency(formData.packaging.basins * formData.packagingCosts.basinCost)}</div>\r\n              )}\r\n              {formData.packaging.sacks > 0 && (\r\n                <div>Sacks: {formData.packaging.sacks} × {formatCurrency(formData.packagingCosts.sackCost)} = {formatCurrency(formData.packaging.sacks * formData.packagingCosts.sackCost)}</div>\r\n              )}\r\n              {formData.packaging.boxes > 0 && (\r\n                <div>Boxes: {formData.packaging.boxes} × {formatCurrency(formData.packagingCosts.boxCost)} = {formatCurrency(formData.packaging.boxes * formData.packagingCosts.boxCost)}</div>\r\n              )}\r\n              <div className=\"font-bold border-t pt-1 mt-1\">\r\n                Total Packaging: {formatCurrency(\r\n                  (formData.packaging.basins * formData.packagingCosts.basinCost) +\r\n                  (formData.packaging.sacks * formData.packagingCosts.sackCost) +\r\n                  (formData.packaging.boxes * formData.packagingCosts.boxCost)\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"text-sm font-bold text-green-800 dark:text-green-200 border-t pt-2\">\r\n            <strong>Grand Total:</strong> {formatCurrency(\r\n              (formData.quantitySold * formData.itemPrice) +\r\n              (formData.packaging.basins * formData.packagingCosts.basinCost) +\r\n              (formData.packaging.sacks * formData.packagingCosts.sackCost) +\r\n              (formData.packaging.boxes * formData.packagingCosts.boxCost)\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n"
        }
    ]
}