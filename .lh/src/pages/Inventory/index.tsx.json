{
    "sourceFile": "src/pages/Inventory/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1760600441301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760600608446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -211,9 +211,9 @@\n         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n           <FormInput\r\n             label=\"Search Items\"\r\n             value={searchTerm}\r\n-            onChange={setSearchTerm}\r\n+            onChange={(value) => setSearchTerm(value as string)}\r\n             placeholder=\"Search by name or code...\"\r\n             leftIcon={<Search className=\"h-4 w-4\" />}\r\n           />\r\n           \r\n"
                },
                {
                    "date": 1760600615551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n import { InventoryItem, ITEM_CATEGORIES } from '../../types';\r\n import { formatDate } from '../../utils/helpers';\r\n \r\n export const InventoryPage: React.FC = () => {\r\n-  const { inventoryItems, setInventoryItems, user } = useApp();\r\n+  const { inventoryItems, setInventoryItems } = useApp();\r\n   const [isModalOpen, setIsModalOpen] = useState(false);\r\n   const [editingItem, setEditingItem] = useState<InventoryItem | null>(null);\r\n   const [searchTerm, setSearchTerm] = useState('');\r\n   const [selectedCategory, setSelectedCategory] = useState('all');\r\n"
                },
                {
                    "date": 1760601280071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,311 +1,1 @@\n-import React, { useState, useMemo } from 'react';\r\n-import { Plus, Package, Download, Search, Filter, Eye, Edit, Trash2, BarChart3 } from 'lucide-react';\r\n-import { Card } from '../../components/Card';\r\n-import { DataTable } from '../../components/DataTable';\r\n-import { Modal } from '../../components/Modal';\r\n-import { FormInput } from '../../components/FormInput';\r\n-import { FormSelect } from '../../components/FormSelect';\r\n-import { useApp } from '../../context/AppContext';\r\n-import { InventoryItem, ITEM_CATEGORIES } from '../../types';\r\n-import { formatDate } from '../../utils/helpers';\r\n-\r\n-export const InventoryPage: React.FC = () => {\r\n-  const { inventoryItems, setInventoryItems } = useApp();\r\n-  const [isModalOpen, setIsModalOpen] = useState(false);\r\n-  const [editingItem, setEditingItem] = useState<InventoryItem | null>(null);\r\n-  const [searchTerm, setSearchTerm] = useState('');\r\n-  const [selectedCategory, setSelectedCategory] = useState('all');\r\n-  const [selectedLocation, setSelectedLocation] = useState('all');\r\n-\r\n-  // Filter items based on search and filters\r\n-  const filteredItems = useMemo(() => {\r\n-    return inventoryItems.filter(item => {\r\n-      const matchesSearch = item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-                           item.code.toLowerCase().includes(searchTerm.toLowerCase());\r\n-      const matchesCategory = selectedCategory === 'all' || item.category.id === selectedCategory;\r\n-      const matchesLocation = selectedLocation === 'all' || item.location === selectedLocation;\r\n-      \r\n-      return matchesSearch && matchesCategory && matchesLocation;\r\n-    });\r\n-  }, [inventoryItems, searchTerm, selectedCategory, selectedLocation]);\r\n-\r\n-  // Calculate statistics\r\n-  const stats = useMemo(() => {\r\n-    const totalItems = inventoryItems.length;\r\n-    const categoriesCount = ITEM_CATEGORIES.length;\r\n-    const locationsCount = [...new Set(inventoryItems.map(item => item.location))].length;\r\n-    \r\n-    const categoryStats = ITEM_CATEGORIES.map(category => ({\r\n-      name: category.name,\r\n-      count: inventoryItems.filter(item => item.category.id === category.id).length,\r\n-      color: category.color\r\n-    }));\r\n-\r\n-    return {\r\n-      totalItems,\r\n-      categoriesCount,\r\n-      locationsCount,\r\n-      categoryStats\r\n-    };\r\n-  }, [inventoryItems]);\r\n-\r\n-  const handleOpenModal = (item?: InventoryItem) => {\r\n-    setEditingItem(item || null);\r\n-    setIsModalOpen(true);\r\n-  };\r\n-\r\n-  const handleCloseModal = () => {\r\n-    setEditingItem(null);\r\n-    setIsModalOpen(false);\r\n-  };\r\n-\r\n-  const handleDeleteItem = (itemId: string) => {\r\n-    setInventoryItems(inventoryItems.filter(item => item.id !== itemId));\r\n-  };\r\n-\r\n-  const columns = [\r\n-    {\r\n-      key: 'name' as keyof InventoryItem,\r\n-      label: 'Item Name',\r\n-      sortable: true,\r\n-    },\r\n-    {\r\n-      key: 'code' as keyof InventoryItem,\r\n-      label: 'Code',\r\n-      sortable: true,\r\n-    },\r\n-    {\r\n-      key: 'category' as keyof InventoryItem,\r\n-      label: 'Category',\r\n-      render: (value: any) => (\r\n-        <span className={`px-2 py-1 rounded-full text-xs font-medium bg-${value.color}-100 text-${value.color}-800 dark:bg-${value.color}-900/20 dark:text-${value.color}-200`}>\r\n-          {value.name}\r\n-        </span>\r\n-      ),\r\n-      sortable: true,\r\n-    },\r\n-    {\r\n-      key: 'location' as keyof InventoryItem,\r\n-      label: 'Location',\r\n-      sortable: true,\r\n-    },\r\n-    {\r\n-      key: 'quantity' as keyof InventoryItem,\r\n-      label: 'Quantity',\r\n-      render: (value: number) => value ? `${value}` : 'N/A',\r\n-    },\r\n-    {\r\n-      key: 'createdAt' as keyof InventoryItem,\r\n-      label: 'Created',\r\n-      render: (value: string) => formatDate(value),\r\n-      sortable: true,\r\n-    },\r\n-  ];\r\n-\r\n-  const actions = [\r\n-    {\r\n-      label: 'View',\r\n-      icon: <Eye className=\"h-4 w-4\" />,\r\n-      onClick: (item: InventoryItem) => handleOpenModal(item),\r\n-    },\r\n-    {\r\n-      label: 'Edit',\r\n-      icon: <Edit className=\"h-4 w-4\" />,\r\n-      onClick: (item: InventoryItem) => handleOpenModal(item),\r\n-    },\r\n-    {\r\n-      label: 'Delete',\r\n-      icon: <Trash2 className=\"h-4 w-4\" />,\r\n-      onClick: (item: InventoryItem) => handleDeleteItem(item.id),\r\n-      variant: 'danger' as const,\r\n-    },\r\n-  ];\r\n-\r\n-  return (\r\n-    <div className=\"space-y-6\">\r\n-      {/* Header */}\r\n-      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n-        <div>\r\n-          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Inventory Management</h1>\r\n-          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n-            Manage inventory items from your handwritten records\r\n-          </p>\r\n-        </div>\r\n-        \r\n-        <div className=\"flex flex-col sm:flex-row items-stretch sm:items-center gap-3\">\r\n-          <button className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n-            <Download className=\"h-4 w-4\" />\r\n-            <span>Export</span>\r\n-          </button>\r\n-          <button\r\n-            onClick={() => handleOpenModal()}\r\n-            className=\"flex items-center space-x-2 px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n-          >\r\n-            <Plus className=\"h-4 w-4\" />\r\n-            <span>Add Item</span>\r\n-          </button>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Statistics Cards */}\r\n-      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n-        <Card className=\"p-4\">\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <div>\r\n-              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Items</p>\r\n-              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{stats.totalItems}</p>\r\n-            </div>\r\n-            <Package className=\"h-8 w-8 text-blue-600\" />\r\n-          </div>\r\n-        </Card>\r\n-\r\n-        <Card className=\"p-4\">\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <div>\r\n-              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Categories</p>\r\n-              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{stats.categoriesCount}</p>\r\n-            </div>\r\n-            <BarChart3 className=\"h-8 w-8 text-green-600\" />\r\n-          </div>\r\n-        </Card>\r\n-\r\n-        <Card className=\"p-4\">\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <div>\r\n-              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Locations</p>\r\n-              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{stats.locationsCount}</p>\r\n-            </div>\r\n-            <Package className=\"h-8 w-8 text-purple-600\" />\r\n-          </div>\r\n-        </Card>\r\n-\r\n-        <Card className=\"p-4\">\r\n-          <div className=\"flex items-center justify-between\">\r\n-            <div>\r\n-              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Filtered Items</p>\r\n-              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{filteredItems.length}</p>\r\n-            </div>\r\n-            <Filter className=\"h-8 w-8 text-orange-600\" />\r\n-          </div>\r\n-        </Card>\r\n-      </div>\r\n-\r\n-      {/* Category Breakdown */}\r\n-      <Card className=\"p-6\">\r\n-        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4\">Items by Category</h3>\r\n-        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n-          {stats.categoryStats.map((stat) => (\r\n-            <div key={stat.name} className=\"text-center\">\r\n-              <div className={`w-12 h-12 mx-auto rounded-full bg-${stat.color}-100 dark:bg-${stat.color}-900/20 flex items-center justify-center mb-2`}>\r\n-                <Package className={`h-6 w-6 text-${stat.color}-600`} />\r\n-              </div>\r\n-              <p className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{stat.name}</p>\r\n-              <p className=\"text-lg font-bold text-gray-600 dark:text-gray-400\">{stat.count}</p>\r\n-            </div>\r\n-          ))}\r\n-        </div>\r\n-      </Card>\r\n-\r\n-      {/* Filters */}\r\n-      <Card className=\"p-6\">\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n-          <FormInput\r\n-            label=\"Search Items\"\r\n-            value={searchTerm}\r\n-            onChange={(value) => setSearchTerm(value as string)}\r\n-            placeholder=\"Search by name or code...\"\r\n-            leftIcon={<Search className=\"h-4 w-4\" />}\r\n-          />\r\n-          \r\n-          <FormSelect\r\n-            label=\"Category\"\r\n-            value={selectedCategory}\r\n-            onChange={setSelectedCategory}\r\n-            options={[\r\n-              { value: 'all', label: 'All Categories' },\r\n-              ...ITEM_CATEGORIES.map(category => ({\r\n-                value: category.id,\r\n-                label: category.name\r\n-              }))\r\n-            ]}\r\n-          />\r\n-          \r\n-          <FormSelect\r\n-            label=\"Location\"\r\n-            value={selectedLocation}\r\n-            onChange={setSelectedLocation}\r\n-            options={[\r\n-              { value: 'all', label: 'All Locations' },\r\n-              { value: 'Embu', label: 'Embu' },\r\n-              { value: 'Malindi', label: 'Malindi' },\r\n-              { value: 'Samburu', label: 'Samburu' },\r\n-            ]}\r\n-          />\r\n-        </div>\r\n-      </Card>\r\n-\r\n-      {/* Data Table */}\r\n-      <DataTable\r\n-        data={filteredItems}\r\n-        columns={columns}\r\n-        actions={actions}\r\n-        searchable={false}\r\n-        emptyMessage=\"No inventory items found\"\r\n-        className=\"bg-white dark:bg-gray-800\"\r\n-      />\r\n-\r\n-      {/* Modal */}\r\n-      <Modal\r\n-        isOpen={isModalOpen}\r\n-        onClose={handleCloseModal}\r\n-        title={editingItem ? 'View Item Details' : 'Add New Item'}\r\n-        size=\"lg\"\r\n-        type=\"info\"\r\n-        icon={<Package className=\"h-6 w-6\" />}\r\n-      >\r\n-        {editingItem ? (\r\n-          <div className=\"space-y-4\">\r\n-            <div className=\"grid grid-cols-2 gap-4\">\r\n-              <div>\r\n-                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Item Name</label>\r\n-                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{editingItem.name}</p>\r\n-              </div>\r\n-              <div>\r\n-                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Code</label>\r\n-                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{editingItem.code}</p>\r\n-              </div>\r\n-              <div>\r\n-                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Category</label>\r\n-                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{editingItem.category.name}</p>\r\n-              </div>\r\n-              <div>\r\n-                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Location</label>\r\n-                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{editingItem.location}</p>\r\n-              </div>\r\n-              <div>\r\n-                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Quantity</label>\r\n-                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{editingItem.quantity || 'N/A'}</p>\r\n-              </div>\r\n-              <div>\r\n-                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Created</label>\r\n-                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{formatDate(editingItem.createdAt)}</p>\r\n-              </div>\r\n-            </div>\r\n-            {editingItem.description && (\r\n-              <div>\r\n-                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Description</label>\r\n-                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{editingItem.description}</p>\r\n-              </div>\r\n-            )}\r\n-          </div>\r\n-        ) : (\r\n-          <div className=\"space-y-4\">\r\n-            <p className=\"text-gray-600 dark:text-gray-400\">\r\n-              Add new inventory items to your system. This feature will be implemented in the next update.\r\n-            </p>\r\n-          </div>\r\n-        )}\r\n-      </Modal>\r\n-    </div>\r\n-  );\r\n-};\r\n+ \n\\ No newline at end of file\n"
                }
            ],
            "date": 1760600441301,
            "name": "Commit-0",
            "content": "import React, { useState, useMemo } from 'react';\r\nimport { Plus, Package, Download, Search, Filter, Eye, Edit, Trash2, BarChart3 } from 'lucide-react';\r\nimport { Card } from '../../components/Card';\r\nimport { DataTable } from '../../components/DataTable';\r\nimport { Modal } from '../../components/Modal';\r\nimport { FormInput } from '../../components/FormInput';\r\nimport { FormSelect } from '../../components/FormSelect';\r\nimport { useApp } from '../../context/AppContext';\r\nimport { InventoryItem, ITEM_CATEGORIES } from '../../types';\r\nimport { formatDate } from '../../utils/helpers';\r\n\r\nexport const InventoryPage: React.FC = () => {\r\n  const { inventoryItems, setInventoryItems, user } = useApp();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingItem, setEditingItem] = useState<InventoryItem | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [selectedLocation, setSelectedLocation] = useState('all');\r\n\r\n  // Filter items based on search and filters\r\n  const filteredItems = useMemo(() => {\r\n    return inventoryItems.filter(item => {\r\n      const matchesSearch = item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                           item.code.toLowerCase().includes(searchTerm.toLowerCase());\r\n      const matchesCategory = selectedCategory === 'all' || item.category.id === selectedCategory;\r\n      const matchesLocation = selectedLocation === 'all' || item.location === selectedLocation;\r\n      \r\n      return matchesSearch && matchesCategory && matchesLocation;\r\n    });\r\n  }, [inventoryItems, searchTerm, selectedCategory, selectedLocation]);\r\n\r\n  // Calculate statistics\r\n  const stats = useMemo(() => {\r\n    const totalItems = inventoryItems.length;\r\n    const categoriesCount = ITEM_CATEGORIES.length;\r\n    const locationsCount = [...new Set(inventoryItems.map(item => item.location))].length;\r\n    \r\n    const categoryStats = ITEM_CATEGORIES.map(category => ({\r\n      name: category.name,\r\n      count: inventoryItems.filter(item => item.category.id === category.id).length,\r\n      color: category.color\r\n    }));\r\n\r\n    return {\r\n      totalItems,\r\n      categoriesCount,\r\n      locationsCount,\r\n      categoryStats\r\n    };\r\n  }, [inventoryItems]);\r\n\r\n  const handleOpenModal = (item?: InventoryItem) => {\r\n    setEditingItem(item || null);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setEditingItem(null);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteItem = (itemId: string) => {\r\n    setInventoryItems(inventoryItems.filter(item => item.id !== itemId));\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      key: 'name' as keyof InventoryItem,\r\n      label: 'Item Name',\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'code' as keyof InventoryItem,\r\n      label: 'Code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'category' as keyof InventoryItem,\r\n      label: 'Category',\r\n      render: (value: any) => (\r\n        <span className={`px-2 py-1 rounded-full text-xs font-medium bg-${value.color}-100 text-${value.color}-800 dark:bg-${value.color}-900/20 dark:text-${value.color}-200`}>\r\n          {value.name}\r\n        </span>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'location' as keyof InventoryItem,\r\n      label: 'Location',\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'quantity' as keyof InventoryItem,\r\n      label: 'Quantity',\r\n      render: (value: number) => value ? `${value}` : 'N/A',\r\n    },\r\n    {\r\n      key: 'createdAt' as keyof InventoryItem,\r\n      label: 'Created',\r\n      render: (value: string) => formatDate(value),\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      label: 'View',\r\n      icon: <Eye className=\"h-4 w-4\" />,\r\n      onClick: (item: InventoryItem) => handleOpenModal(item),\r\n    },\r\n    {\r\n      label: 'Edit',\r\n      icon: <Edit className=\"h-4 w-4\" />,\r\n      onClick: (item: InventoryItem) => handleOpenModal(item),\r\n    },\r\n    {\r\n      label: 'Delete',\r\n      icon: <Trash2 className=\"h-4 w-4\" />,\r\n      onClick: (item: InventoryItem) => handleDeleteItem(item.id),\r\n      variant: 'danger' as const,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Inventory Management</h1>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n            Manage inventory items from your handwritten records\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex flex-col sm:flex-row items-stretch sm:items-center gap-3\">\r\n          <button className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n            <Download className=\"h-4 w-4\" />\r\n            <span>Export</span>\r\n          </button>\r\n          <button\r\n            onClick={() => handleOpenModal()}\r\n            className=\"flex items-center space-x-2 px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n          >\r\n            <Plus className=\"h-4 w-4\" />\r\n            <span>Add Item</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Statistics Cards */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Items</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{stats.totalItems}</p>\r\n            </div>\r\n            <Package className=\"h-8 w-8 text-blue-600\" />\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Categories</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{stats.categoriesCount}</p>\r\n            </div>\r\n            <BarChart3 className=\"h-8 w-8 text-green-600\" />\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Locations</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{stats.locationsCount}</p>\r\n            </div>\r\n            <Package className=\"h-8 w-8 text-purple-600\" />\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Filtered Items</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{filteredItems.length}</p>\r\n            </div>\r\n            <Filter className=\"h-8 w-8 text-orange-600\" />\r\n          </div>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Category Breakdown */}\r\n      <Card className=\"p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4\">Items by Category</h3>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n          {stats.categoryStats.map((stat) => (\r\n            <div key={stat.name} className=\"text-center\">\r\n              <div className={`w-12 h-12 mx-auto rounded-full bg-${stat.color}-100 dark:bg-${stat.color}-900/20 flex items-center justify-center mb-2`}>\r\n                <Package className={`h-6 w-6 text-${stat.color}-600`} />\r\n              </div>\r\n              <p className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{stat.name}</p>\r\n              <p className=\"text-lg font-bold text-gray-600 dark:text-gray-400\">{stat.count}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Filters */}\r\n      <Card className=\"p-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <FormInput\r\n            label=\"Search Items\"\r\n            value={searchTerm}\r\n            onChange={setSearchTerm}\r\n            placeholder=\"Search by name or code...\"\r\n            leftIcon={<Search className=\"h-4 w-4\" />}\r\n          />\r\n          \r\n          <FormSelect\r\n            label=\"Category\"\r\n            value={selectedCategory}\r\n            onChange={setSelectedCategory}\r\n            options={[\r\n              { value: 'all', label: 'All Categories' },\r\n              ...ITEM_CATEGORIES.map(category => ({\r\n                value: category.id,\r\n                label: category.name\r\n              }))\r\n            ]}\r\n          />\r\n          \r\n          <FormSelect\r\n            label=\"Location\"\r\n            value={selectedLocation}\r\n            onChange={setSelectedLocation}\r\n            options={[\r\n              { value: 'all', label: 'All Locations' },\r\n              { value: 'Embu', label: 'Embu' },\r\n              { value: 'Malindi', label: 'Malindi' },\r\n              { value: 'Samburu', label: 'Samburu' },\r\n            ]}\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Data Table */}\r\n      <DataTable\r\n        data={filteredItems}\r\n        columns={columns}\r\n        actions={actions}\r\n        searchable={false}\r\n        emptyMessage=\"No inventory items found\"\r\n        className=\"bg-white dark:bg-gray-800\"\r\n      />\r\n\r\n      {/* Modal */}\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={handleCloseModal}\r\n        title={editingItem ? 'View Item Details' : 'Add New Item'}\r\n        size=\"lg\"\r\n        type=\"info\"\r\n        icon={<Package className=\"h-6 w-6\" />}\r\n      >\r\n        {editingItem ? (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Item Name</label>\r\n                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{editingItem.name}</p>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Code</label>\r\n                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{editingItem.code}</p>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Category</label>\r\n                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{editingItem.category.name}</p>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Location</label>\r\n                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{editingItem.location}</p>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Quantity</label>\r\n                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{editingItem.quantity || 'N/A'}</p>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Created</label>\r\n                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{formatDate(editingItem.createdAt)}</p>\r\n              </div>\r\n            </div>\r\n            {editingItem.description && (\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Description</label>\r\n                <p className=\"mt-1 text-sm text-gray-900 dark:text-gray-100\">{editingItem.description}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            <p className=\"text-gray-600 dark:text-gray-400\">\r\n              Add new inventory items to your system. This feature will be implemented in the next update.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n"
        }
    ]
}