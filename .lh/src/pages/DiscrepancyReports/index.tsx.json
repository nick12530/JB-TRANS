{
    "sourceFile": "src/pages/DiscrepancyReports/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1759903870994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759911377492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,25 +4,16 @@\n import { FormInput } from '../../components/FormInput';\r\n import { FormSelect } from '../../components/FormSelect';\r\n import { DataTable } from '../../components/DataTable';\r\n import { useApp } from '../../context/AppContext';\r\n-import { formatDate, formatCurrency } from '../../utils/helpers';\r\n+import { formatDate } from '../../utils/helpers';\r\n import { \r\n   AlertTriangle, \r\n   CheckCircle, \r\n   Clock, \r\n-  Package, \r\n-  Truck, \r\n-  MapPin, \r\n-  User, \r\n-  Calendar,\r\n   Filter,\r\n   Search,\r\n   Eye,\r\n-  Edit,\r\n-  Trash2,\r\n-  TrendingUp,\r\n-  TrendingDown,\r\n   Activity,\r\n   FileText,\r\n   Download\r\n } from 'lucide-react';\r\n@@ -51,9 +42,9 @@\n   resolvedBy?: string;\r\n }\r\n \r\n export const DiscrepancyReportsPage: React.FC = () => {\r\n-  const { sourceRecords, user } = useApp();\r\n+  const { user } = useApp();\r\n   const [isModalOpen, setIsModalOpen] = useState(false);\r\n   const [editingReport, setEditingReport] = useState<DiscrepancyReport | null>(null);\r\n   const [selectedReport, setSelectedReport] = useState<DiscrepancyReport | null>(null);\r\n   const [isViewModalOpen, setIsViewModalOpen] = useState(false);\r\n@@ -536,14 +527,14 @@\n           emptyMessage=\"No discrepancy reports found.\"\r\n           actions={[\r\n             {\r\n               label: 'View',\r\n-              icon: Eye,\r\n+              icon: <Eye className=\"h-4 w-4\" />,\r\n               onClick: handleViewReport,\r\n             },\r\n             {\r\n               label: 'Resolve',\r\n-              icon: CheckCircle,\r\n+              icon: <CheckCircle className=\"h-4 w-4\" />,\r\n               onClick: (report: DiscrepancyReport) => handleResolve(report.id),\r\n               condition: (report: DiscrepancyReport) => report.status !== 'resolved',\r\n             },\r\n           ]}\r\n"
                }
            ],
            "date": 1759903870993,
            "name": "Commit-0",
            "content": "import React, { useState, useMemo } from 'react';\r\nimport { Card } from '../../components/Card';\r\nimport { Modal } from '../../components/Modal';\r\nimport { FormInput } from '../../components/FormInput';\r\nimport { FormSelect } from '../../components/FormSelect';\r\nimport { DataTable } from '../../components/DataTable';\r\nimport { useApp } from '../../context/AppContext';\r\nimport { formatDate, formatCurrency } from '../../utils/helpers';\r\nimport { \r\n  AlertTriangle, \r\n  CheckCircle, \r\n  Clock, \r\n  Package, \r\n  Truck, \r\n  MapPin, \r\n  User, \r\n  Calendar,\r\n  Filter,\r\n  Search,\r\n  Eye,\r\n  Edit,\r\n  Trash2,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Activity,\r\n  FileText,\r\n  Download\r\n} from 'lucide-react';\r\n\r\ninterface DiscrepancyReport {\r\n  id: string;\r\n  transportCode: string;\r\n  sourceAreaCode: string;\r\n  destinationAreaCode: string;\r\n  driverName: string;\r\n  driverPhone: string;\r\n  vehicleReg: string;\r\n  discrepancyType: 'quantity' | 'condition' | 'time' | 'location' | 'other';\r\n  description: string;\r\n  expectedValue: string | number;\r\n  actualValue: string | number;\r\n  discrepancyAmount: number;\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  status: 'pending' | 'investigating' | 'resolved' | 'dismissed';\r\n  reportedBy: string;\r\n  reportedAt: string;\r\n  assignedTo?: string;\r\n  investigationNotes?: string;\r\n  resolutionNotes?: string;\r\n  resolvedAt?: string;\r\n  resolvedBy?: string;\r\n}\r\n\r\nexport const DiscrepancyReportsPage: React.FC = () => {\r\n  const { sourceRecords, user } = useApp();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingReport, setEditingReport] = useState<DiscrepancyReport | null>(null);\r\n  const [selectedReport, setSelectedReport] = useState<DiscrepancyReport | null>(null);\r\n  const [isViewModalOpen, setIsViewModalOpen] = useState(false);\r\n  \r\n  // Filter states\r\n  const [filters, setFilters] = useState({\r\n    search: '',\r\n    type: 'all',\r\n    severity: 'all',\r\n    status: 'all',\r\n    dateRange: { start: '', end: '' },\r\n  });\r\n\r\n  // Mock discrepancy reports\r\n  const [discrepancyReports, setDiscrepancyReports] = useState<DiscrepancyReport[]>([\r\n    {\r\n      id: '1',\r\n      transportCode: 'TRIP-001',\r\n      sourceAreaCode: 'AC001',\r\n      destinationAreaCode: 'AC005',\r\n      driverName: 'John Kimani',\r\n      driverPhone: '+254 712 345678',\r\n      vehicleReg: 'KAA 123A',\r\n      discrepancyType: 'quantity',\r\n      description: 'Quantity mismatch between pickup and delivery',\r\n      expectedValue: 50,\r\n      actualValue: 47,\r\n      discrepancyAmount: -3,\r\n      severity: 'medium',\r\n      status: 'investigating',\r\n      reportedBy: 'Sarah Mwangi',\r\n      reportedAt: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\r\n      assignedTo: 'Admin User',\r\n      investigationNotes: 'Driver claims no knowledge of missing goods. Checking CCTV footage.',\r\n    },\r\n    {\r\n      id: '2',\r\n      transportCode: 'TRIP-002',\r\n      sourceAreaCode: 'AC002',\r\n      destinationAreaCode: 'AC003',\r\n      driverName: 'Peter Wanjiku',\r\n      driverPhone: '+254 723 456789',\r\n      vehicleReg: 'KBC 567B',\r\n      discrepancyType: 'condition',\r\n      description: 'Goods arrived in poor condition',\r\n      expectedValue: 'Good',\r\n      actualValue: 'Damaged',\r\n      discrepancyAmount: 0,\r\n      severity: 'high',\r\n      status: 'resolved',\r\n      reportedBy: 'Buyer Representative',\r\n      reportedAt: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(),\r\n      assignedTo: 'Admin User',\r\n      investigationNotes: 'Driver reported rough road conditions.',\r\n      resolutionNotes: 'Compensation provided to buyer. Driver warned about handling.',\r\n      resolvedAt: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(),\r\n      resolvedBy: 'Admin User',\r\n    },\r\n    {\r\n      id: '3',\r\n      transportCode: 'TRIP-003',\r\n      sourceAreaCode: 'AC003',\r\n      destinationAreaCode: 'AC001',\r\n      driverName: 'Mary Njoki',\r\n      driverPhone: '+254 734 567890',\r\n      vehicleReg: 'KAB 789C',\r\n      discrepancyType: 'time',\r\n      description: 'Delivery delayed by 3 hours',\r\n      expectedValue: '14:00',\r\n      actualValue: '17:00',\r\n      discrepancyAmount: 180,\r\n      severity: 'low',\r\n      status: 'pending',\r\n      reportedBy: 'Destination Manager',\r\n      reportedAt: new Date(Date.now() - 30 * 60 * 1000).toISOString(),\r\n    },\r\n  ]);\r\n\r\n  const [formData, setFormData] = useState<Omit<DiscrepancyReport, 'id' | 'reportedAt'>>({\r\n    transportCode: '',\r\n    sourceAreaCode: '',\r\n    destinationAreaCode: '',\r\n    driverName: '',\r\n    driverPhone: '',\r\n    vehicleReg: '',\r\n    discrepancyType: 'quantity',\r\n    description: '',\r\n    expectedValue: '',\r\n    actualValue: '',\r\n    discrepancyAmount: 0,\r\n    severity: 'medium',\r\n    status: 'pending',\r\n    reportedBy: user?.name || '',\r\n    assignedTo: '',\r\n    investigationNotes: '',\r\n    resolutionNotes: '',\r\n    resolvedAt: '',\r\n    resolvedBy: '',\r\n  });\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      transportCode: '',\r\n      sourceAreaCode: '',\r\n      destinationAreaCode: '',\r\n      driverName: '',\r\n      driverPhone: '',\r\n      vehicleReg: '',\r\n      discrepancyType: 'quantity',\r\n      description: '',\r\n      expectedValue: '',\r\n      actualValue: '',\r\n      discrepancyAmount: 0,\r\n      severity: 'medium',\r\n      status: 'pending',\r\n      reportedBy: user?.name || '',\r\n      assignedTo: '',\r\n      investigationNotes: '',\r\n      resolutionNotes: '',\r\n      resolvedAt: '',\r\n      resolvedBy: '',\r\n    });\r\n    setEditingReport(null);\r\n  };\r\n\r\n  const handleOpenModal = (report?: DiscrepancyReport) => {\r\n    if (report) {\r\n      setEditingReport(report);\r\n      const { id, reportedAt, ...reportData } = report;\r\n      setFormData(reportData);\r\n    } else {\r\n      resetForm();\r\n    }\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n    resetForm();\r\n  };\r\n\r\n  const handleViewReport = (report: DiscrepancyReport) => {\r\n    setSelectedReport(report);\r\n    setIsViewModalOpen(true);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    const now = new Date().toISOString();\r\n    const newReport = {\r\n      ...formData,\r\n      reportedAt: now,\r\n    };\r\n\r\n    if (editingReport) {\r\n      setDiscrepancyReports(\r\n        discrepancyReports.map((report) =>\r\n          report.id === editingReport.id ? { ...newReport, id: editingReport.id } : report\r\n        )\r\n      );\r\n    } else {\r\n      const id = Date.now().toString();\r\n      setDiscrepancyReports([...discrepancyReports, { ...newReport, id }]);\r\n    }\r\n\r\n    handleCloseModal();\r\n  };\r\n\r\n  const handleDelete = (report: DiscrepancyReport) => {\r\n    if (window.confirm('Are you sure you want to delete this discrepancy report?')) {\r\n      setDiscrepancyReports(discrepancyReports.filter((r) => r.id !== report.id));\r\n    }\r\n  };\r\n\r\n  const handleResolve = (reportId: string) => {\r\n    const now = new Date().toISOString();\r\n    setDiscrepancyReports(\r\n      discrepancyReports.map((report) =>\r\n        report.id === reportId \r\n          ? { \r\n              ...report, \r\n              status: 'resolved' as const,\r\n              resolvedAt: now,\r\n              resolvedBy: user?.name || 'Unknown'\r\n            } \r\n          : report\r\n      )\r\n    );\r\n  };\r\n\r\n  // Filter reports\r\n  const filteredReports = useMemo(() => {\r\n    return discrepancyReports.filter((report) => {\r\n      const matchesSearch = filters.search === '' || \r\n        report.transportCode.toLowerCase().includes(filters.search.toLowerCase()) ||\r\n        report.driverName.toLowerCase().includes(filters.search.toLowerCase()) ||\r\n        report.description.toLowerCase().includes(filters.search.toLowerCase());\r\n      \r\n      const matchesType = filters.type === 'all' || report.discrepancyType === filters.type;\r\n      const matchesSeverity = filters.severity === 'all' || report.severity === filters.severity;\r\n      const matchesStatus = filters.status === 'all' || report.status === filters.status;\r\n      \r\n      const matchesDateRange = \r\n        (filters.dateRange.start === '' || report.reportedAt >= filters.dateRange.start) &&\r\n        (filters.dateRange.end === '' || report.reportedAt <= filters.dateRange.end);\r\n\r\n      return matchesSearch && matchesType && matchesSeverity && matchesStatus && matchesDateRange;\r\n    });\r\n  }, [discrepancyReports, filters]);\r\n\r\n  const columns = [\r\n    {\r\n      key: 'transportCode' as keyof DiscrepancyReport,\r\n      label: 'Transport Code',\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'driverName' as keyof DiscrepancyReport,\r\n      label: 'Driver',\r\n      render: (value: string, row: DiscrepancyReport) => (\r\n        <div>\r\n          <p className=\"font-medium text-gray-900 dark:text-gray-100\">{value}</p>\r\n          <p className=\"text-xs text-gray-500\">{row.vehicleReg}</p>\r\n        </div>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'discrepancyType' as keyof DiscrepancyReport,\r\n      label: 'Type',\r\n      render: (value: string) => (\r\n        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n          value === 'quantity' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-200' :\r\n          value === 'condition' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-200' :\r\n          value === 'time' ? 'bg-purple-100 text-purple-800 dark:bg-purple-900/20 dark:text-purple-200' :\r\n          value === 'location' ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-200' :\r\n          'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-200'\r\n        }`}>\r\n          {value.charAt(0).toUpperCase() + value.slice(1)}\r\n        </span>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'severity' as keyof DiscrepancyReport,\r\n      label: 'Severity',\r\n      render: (value: string) => (\r\n        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n          value === 'critical' ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-200' :\r\n          value === 'high' ? 'bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-200' :\r\n          value === 'medium' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-200' :\r\n          'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-200'\r\n        }`}>\r\n          {value.charAt(0).toUpperCase() + value.slice(1)}\r\n        </span>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'status' as keyof DiscrepancyReport,\r\n      label: 'Status',\r\n      render: (value: string) => (\r\n        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n          value === 'resolved' ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-200' :\r\n          value === 'investigating' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-200' :\r\n          value === 'pending' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-200' :\r\n          'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-200'\r\n        }`}>\r\n          {value.charAt(0).toUpperCase() + value.slice(1)}\r\n        </span>\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'reportedAt' as keyof DiscrepancyReport,\r\n      label: 'Reported',\r\n      render: (value: string) => formatDate(value),\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  // Calculate summary statistics\r\n  const summaryStats = useMemo(() => {\r\n    const totalReports = discrepancyReports.length;\r\n    const pendingReports = discrepancyReports.filter(r => r.status === 'pending').length;\r\n    const investigatingReports = discrepancyReports.filter(r => r.status === 'investigating').length;\r\n    const resolvedReports = discrepancyReports.filter(r => r.status === 'resolved').length;\r\n    const criticalReports = discrepancyReports.filter(r => r.severity === 'critical').length;\r\n\r\n    return {\r\n      totalReports,\r\n      pendingReports,\r\n      investigatingReports,\r\n      resolvedReports,\r\n      criticalReports,\r\n    };\r\n  }, [discrepancyReports]);\r\n\r\n  if (user?.role !== 'admin') {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-full\">\r\n        <p className=\"text-xl text-red-500\">Access Denied: Admins only.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Discrepancy Reports</h1>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n            Track and manage discrepancies between pickup and delivery\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-3\">\r\n          <button className=\"flex items-center space-x-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n            <Download className=\"h-4 w-4\" />\r\n            <span>Export</span>\r\n          </button>\r\n          <button\r\n            onClick={() => handleOpenModal()}\r\n            className=\"flex items-center space-x-2 px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n          >\r\n            <AlertTriangle className=\"h-4 w-4\" />\r\n            <span>Report Discrepancy</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Summary Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"p-2 rounded-lg bg-blue-500\">\r\n              <FileText className=\"h-4 w-4 text-white\" />\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Total Reports</p>\r\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{summaryStats.totalReports}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"p-2 rounded-lg bg-yellow-500\">\r\n              <Clock className=\"h-4 w-4 text-white\" />\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Pending</p>\r\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{summaryStats.pendingReports}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"p-2 rounded-lg bg-orange-500\">\r\n              <Activity className=\"h-4 w-4 text-white\" />\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Investigating</p>\r\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{summaryStats.investigatingReports}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"p-2 rounded-lg bg-green-500\">\r\n              <CheckCircle className=\"h-4 w-4 text-white\" />\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Resolved</p>\r\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{summaryStats.resolvedReports}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card className=\"p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"p-2 rounded-lg bg-red-500\">\r\n              <AlertTriangle className=\"h-4 w-4 text-white\" />\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Critical</p>\r\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{summaryStats.criticalReports}</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <Card className=\"p-4\">\r\n        <div className=\"flex items-center space-x-4 mb-4\">\r\n          <Filter className=\"h-5 w-5 text-gray-500\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">Filters</h3>\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search reports...\"\r\n              value={filters.search}\r\n              onChange={(e) => setFilters({ ...filters, search: e.target.value })}\r\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-bright-green focus:border-bright-green\"\r\n            />\r\n          </div>\r\n          \r\n          <FormSelect\r\n            label=\"Type\"\r\n            value={filters.type}\r\n            onChange={(value) => setFilters({ ...filters, type: value as string })}\r\n            options={[\r\n              { value: 'all', label: 'All Types' },\r\n              { value: 'quantity', label: 'Quantity' },\r\n              { value: 'condition', label: 'Condition' },\r\n              { value: 'time', label: 'Time' },\r\n              { value: 'location', label: 'Location' },\r\n              { value: 'other', label: 'Other' },\r\n            ]}\r\n          />\r\n          \r\n          <FormSelect\r\n            label=\"Severity\"\r\n            value={filters.severity}\r\n            onChange={(value) => setFilters({ ...filters, severity: value as string })}\r\n            options={[\r\n              { value: 'all', label: 'All Severity' },\r\n              { value: 'critical', label: 'Critical' },\r\n              { value: 'high', label: 'High' },\r\n              { value: 'medium', label: 'Medium' },\r\n              { value: 'low', label: 'Low' },\r\n            ]}\r\n          />\r\n          \r\n          <FormSelect\r\n            label=\"Status\"\r\n            value={filters.status}\r\n            onChange={(value) => setFilters({ ...filters, status: value as string })}\r\n            options={[\r\n              { value: 'all', label: 'All Status' },\r\n              { value: 'pending', label: 'Pending' },\r\n              { value: 'investigating', label: 'Investigating' },\r\n              { value: 'resolved', label: 'Resolved' },\r\n              { value: 'dismissed', label: 'Dismissed' },\r\n            ]}\r\n          />\r\n          \r\n          <div className=\"flex space-x-2\">\r\n            <FormInput\r\n              label=\"Start Date\"\r\n              type=\"date\"\r\n              value={filters.dateRange.start}\r\n              onChange={(value) => setFilters({ ...filters, dateRange: { ...filters.dateRange, start: value as string } })}\r\n            />\r\n            <FormInput\r\n              label=\"End Date\"\r\n              type=\"date\"\r\n              value={filters.dateRange.end}\r\n              onChange={(value) => setFilters({ ...filters, dateRange: { ...filters.dateRange, end: value as string } })}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Data Table */}\r\n      <Card className=\"p-6\">\r\n        <DataTable\r\n          data={filteredReports}\r\n          columns={columns}\r\n          onEdit={handleOpenModal}\r\n          onDelete={handleDelete}\r\n          emptyMessage=\"No discrepancy reports found.\"\r\n          actions={[\r\n            {\r\n              label: 'View',\r\n              icon: Eye,\r\n              onClick: handleViewReport,\r\n            },\r\n            {\r\n              label: 'Resolve',\r\n              icon: CheckCircle,\r\n              onClick: (report: DiscrepancyReport) => handleResolve(report.id),\r\n              condition: (report: DiscrepancyReport) => report.status !== 'resolved',\r\n            },\r\n          ]}\r\n        />\r\n      </Card>\r\n\r\n      {/* Add/Edit Modal */}\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={handleCloseModal}\r\n        title={editingReport ? 'Edit Discrepancy Report' : 'Report Discrepancy'}\r\n        size=\"lg\"\r\n      >\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          {/* Basic Information */}\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Basic Information</h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <FormInput\r\n                label=\"Transport Code\"\r\n                type=\"text\"\r\n                value={formData.transportCode}\r\n                onChange={(value) => setFormData({ ...formData, transportCode: value as string })}\r\n                required\r\n              />\r\n              \r\n              <FormSelect\r\n                label=\"Discrepancy Type\"\r\n                value={formData.discrepancyType}\r\n                onChange={(value) => setFormData({ ...formData, discrepancyType: value as any })}\r\n                options={[\r\n                  { value: 'quantity', label: 'Quantity Mismatch' },\r\n                  { value: 'condition', label: 'Condition Issue' },\r\n                  { value: 'time', label: 'Time Delay' },\r\n                  { value: 'location', label: 'Location Error' },\r\n                  { value: 'other', label: 'Other' },\r\n                ]}\r\n                required\r\n              />\r\n              \r\n              <FormInput\r\n                label=\"Driver Name\"\r\n                type=\"text\"\r\n                value={formData.driverName}\r\n                onChange={(value) => setFormData({ ...formData, driverName: value as string })}\r\n                required\r\n              />\r\n              \r\n              <FormInput\r\n                label=\"Vehicle Registration\"\r\n                type=\"text\"\r\n                value={formData.vehicleReg}\r\n                onChange={(value) => setFormData({ ...formData, vehicleReg: value as string })}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Discrepancy Details */}\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Discrepancy Details</h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <FormInput\r\n                label=\"Expected Value\"\r\n                type=\"text\"\r\n                value={formData.expectedValue}\r\n                onChange={(value) => setFormData({ ...formData, expectedValue: value as string })}\r\n                required\r\n              />\r\n              \r\n              <FormInput\r\n                label=\"Actual Value\"\r\n                type=\"text\"\r\n                value={formData.actualValue}\r\n                onChange={(value) => setFormData({ ...formData, actualValue: value as string })}\r\n                required\r\n              />\r\n              \r\n              <FormSelect\r\n                label=\"Severity\"\r\n                value={formData.severity}\r\n                onChange={(value) => setFormData({ ...formData, severity: value as any })}\r\n                options={[\r\n                  { value: 'low', label: 'Low' },\r\n                  { value: 'medium', label: 'Medium' },\r\n                  { value: 'high', label: 'High' },\r\n                  { value: 'critical', label: 'Critical' },\r\n                ]}\r\n                required\r\n              />\r\n              \r\n              <FormSelect\r\n                label=\"Status\"\r\n                value={formData.status}\r\n                onChange={(value) => setFormData({ ...formData, status: value as any })}\r\n                options={[\r\n                  { value: 'pending', label: 'Pending' },\r\n                  { value: 'investigating', label: 'Investigating' },\r\n                  { value: 'resolved', label: 'Resolved' },\r\n                  { value: 'dismissed', label: 'Dismissed' },\r\n                ]}\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"mt-4\">\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                value={formData.description}\r\n                onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n                className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n                rows={3}\r\n                placeholder=\"Describe the discrepancy in detail...\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Investigation Notes (Admin Only) */}\r\n          {user?.role === 'admin' && (\r\n            <div>\r\n              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-3\">Investigation</h4>\r\n              <div className=\"space-y-4\">\r\n                <FormInput\r\n                  label=\"Assigned To\"\r\n                  type=\"text\"\r\n                  value={formData.assignedTo || ''}\r\n                  onChange={(value) => setFormData({ ...formData, assignedTo: value as string })}\r\n                />\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Investigation Notes\r\n                  </label>\r\n                  <textarea\r\n                    value={formData.investigationNotes || ''}\r\n                    onChange={(e) => setFormData({ ...formData, investigationNotes: e.target.value })}\r\n                    className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n                    rows={3}\r\n                    placeholder=\"Investigation findings and notes...\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Resolution Notes\r\n                  </label>\r\n                  <textarea\r\n                    value={formData.resolutionNotes || ''}\r\n                    onChange={(e) => setFormData({ ...formData, resolutionNotes: e.target.value })}\r\n                    className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n                    rows={3}\r\n                    placeholder=\"Resolution details and actions taken...\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"flex justify-end space-x-3\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCloseModal}\r\n              className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n            >\r\n              {editingReport ? 'Update Report' : 'Create Report'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n\r\n      {/* View Modal */}\r\n      <Modal\r\n        isOpen={isViewModalOpen}\r\n        onClose={() => setIsViewModalOpen(false)}\r\n        title=\"Discrepancy Report Details\"\r\n        size=\"lg\"\r\n      >\r\n        {selectedReport && (\r\n          <div className=\"space-y-6\">\r\n            {/* Basic Information */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Transport Code</p>\r\n                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedReport.transportCode}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Driver</p>\r\n                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedReport.driverName}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Vehicle</p>\r\n                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedReport.vehicleReg}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Type</p>\r\n                <p className=\"font-medium text-gray-900 dark:text-gray-100 capitalize\">{selectedReport.discrepancyType}</p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Discrepancy Details */}\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">Description</p>\r\n              <p className=\"text-gray-900 dark:text-gray-100\">{selectedReport.description}</p>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Expected</p>\r\n                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedReport.expectedValue}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Actual</p>\r\n                <p className=\"font-medium text-gray-900 dark:text-gray-100\">{selectedReport.actualValue}</p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Investigation Details */}\r\n            {selectedReport.investigationNotes && (\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">Investigation Notes</p>\r\n                <p className=\"text-gray-900 dark:text-gray-100\">{selectedReport.investigationNotes}</p>\r\n              </div>\r\n            )}\r\n\r\n            {/* Resolution Details */}\r\n            {selectedReport.resolutionNotes && (\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">Resolution Notes</p>\r\n                <p className=\"text-gray-900 dark:text-gray-100\">{selectedReport.resolutionNotes}</p>\r\n              </div>\r\n            )}\r\n\r\n            {/* Timeline */}\r\n            <div className=\"border-t border-gray-200 dark:border-gray-700 pt-4\">\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">Timeline</p>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">Reported</span>\r\n                  <span className=\"text-sm text-gray-900 dark:text-gray-100\">{formatDate(selectedReport.reportedAt)}</span>\r\n                </div>\r\n                {selectedReport.resolvedAt && (\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">Resolved</span>\r\n                    <span className=\"text-sm text-gray-900 dark:text-gray-100\">{formatDate(selectedReport.resolvedAt)}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <button\r\n                onClick={() => setIsViewModalOpen(false)}\r\n                className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\r\n              >\r\n                Close\r\n              </button>\r\n              {selectedReport.status !== 'resolved' && (\r\n                <button\r\n                  onClick={() => {\r\n                    handleResolve(selectedReport.id);\r\n                    setIsViewModalOpen(false);\r\n                  }}\r\n                  className=\"px-4 py-2 bg-bright-green text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n                >\r\n                  Mark Resolved\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n"
        }
    ]
}