{
    "sourceFile": "src/components/ServiceCard.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1757633430978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757644220428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,285 @@\n-import React from \"react\";\r\n+import React from 'react';\r\n+import { useTheme } from '../contexts/ThemeContext';\r\n+import { useBooking } from '../contexts/BookingContext';\r\n \r\n+interface Service {\r\n+  id: string;\r\n+  name: string;\r\n+  price: number;\r\n+  duration: string;\r\n+  category: string;\r\n+  image: string;\r\n+  description: string;\r\n+  basePrice?: number;\r\n+}\r\n+\r\n interface ServiceCardProps {\r\n-    service: {\r\n-      id: number;\r\n-      name: string;\r\n-      price: number;\r\n-      description: string;\r\n-    };\r\n-    onSelect: (id: number) => void;\r\n-  }\r\n-  \r\n-  export default function ServiceCard({ service, onSelect }: ServiceCardProps) {\r\n-    return (\r\n\\ No newline at end of file\n-      <div className=\"border rounded-lg p-4 shadow hover:shadow-lg transition\">\r\n-        <h3 className=\"text-lg font-bold\">{service.name}</h3>\r\n-        <p className=\"text-gray-600 text-sm\">{service.description}</p>\r\n-        <p className=\"font-semibold mt-2\">${service.price}</p>\r\n+  service: Service;\r\n+  onSelect?: (service: Service) => void;\r\n+  isSelected?: boolean;\r\n+  quantity?: number;\r\n+}\r\n+\r\n+export default function ServiceCard({ service, onSelect, isSelected = false, quantity = 0 }: ServiceCardProps) {\r\n+  const { colors } = useTheme();\r\n+  const { addService, removeService, updateServiceQuantity } = useBooking();\r\n+\r\n+  const handleSelect = () => {\r\n+    if (onSelect) {\r\n+      onSelect(service);\r\n+    } else {\r\n+      if (isSelected) {\r\n+        removeService(service.id);\r\n+      } else {\r\n+        addService(service);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleQuantityChange = (newQuantity: number) => {\r\n+    if (newQuantity <= 0) {\r\n+      removeService(service.id);\r\n+    } else {\r\n+      updateServiceQuantity(service.id, newQuantity);\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div\r\n+      style={{\r\n+        backgroundColor: isSelected ? colors.primary + '10' : colors.surface,\r\n+        border: `2px solid ${isSelected ? colors.primary : colors.border}`,\r\n+        borderRadius: '12px',\r\n+        padding: '20px',\r\n+        cursor: 'pointer',\r\n+        transition: 'all 0.3s ease',\r\n+        position: 'relative',\r\n+        overflow: 'hidden'\r\n+      }}\r\n+      onClick={handleSelect}\r\n+      onMouseEnter={(e) => {\r\n+        e.currentTarget.style.transform = 'translateY(-2px)';\r\n+        e.currentTarget.style.boxShadow = '0 8px 20px rgba(0,0,0,0.15)';\r\n+        e.currentTarget.style.borderColor = colors.primary;\r\n+      }}\r\n+      onMouseLeave={(e) => {\r\n+        e.currentTarget.style.transform = 'translateY(0)';\r\n+        e.currentTarget.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';\r\n+        e.currentTarget.style.borderColor = isSelected ? colors.primary : colors.border;\r\n+      }}\r\n+    >\r\n+      {/* Selection Indicator */}\r\n+      {isSelected && (\r\n+        <div style={{\r\n+          position: 'absolute',\r\n+          top: '12px',\r\n+          right: '12px',\r\n+          backgroundColor: colors.primary,\r\n+          color: '#FFFFFF',\r\n+          borderRadius: '50%',\r\n+          width: '24px',\r\n+          height: '24px',\r\n+          display: 'flex',\r\n+          alignItems: 'center',\r\n+          justifyContent: 'center',\r\n+          fontSize: '14px',\r\n+          fontWeight: 'bold',\r\n+          fontFamily: '\"Montserrat\", sans-serif'\r\n+        }}>\r\n+          âœ“\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Service Image */}\r\n+      <div style={{\r\n+        width: '100%',\r\n+        height: '120px',\r\n+        borderRadius: '8px',\r\n+        overflow: 'hidden',\r\n+        marginBottom: '16px',\r\n+        position: 'relative'\r\n+      }}>\r\n+        <img\r\n+          src={service.image}\r\n+          alt={service.name}\r\n+          style={{\r\n+            width: '100%',\r\n+            height: '100%',\r\n+            objectFit: 'cover',\r\n+            transition: 'transform 0.3s ease'\r\n+          }}\r\n+        />\r\n+        <div style={{\r\n+          position: 'absolute',\r\n+          top: '8px',\r\n+          left: '8px',\r\n+          backgroundColor: colors.primary + '90',\r\n+          color: '#FFFFFF',\r\n+          padding: '4px 8px',\r\n+          borderRadius: '12px',\r\n+          fontSize: '10px',\r\n+          fontWeight: '600',\r\n+          fontFamily: '\"Montserrat\", sans-serif'\r\n+        }}>\r\n+          {service.category}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Service Details */}\r\n+      <div>\r\n+        <h3 style={{\r\n+          margin: '0 0 8px 0',\r\n+          fontSize: '1.1rem',\r\n+          fontWeight: '600',\r\n+          color: colors.textHeading,\r\n+          fontFamily: '\"Montserrat\", sans-serif'\r\n+        }}>\r\n+          {service.name}\r\n+        </h3>\r\n+        \r\n+        <p style={{\r\n+          margin: '0 0 12px 0',\r\n+          fontSize: '0.9rem',\r\n+          color: colors.textBody,\r\n+          lineHeight: '1.4',\r\n+          fontFamily: '\"Lora\", serif'\r\n+        }}>\r\n+          {service.description}\r\n+        </p>\r\n+\r\n+        <div style={{\r\n+          display: 'flex',\r\n+          justifyContent: 'space-between',\r\n+          alignItems: 'center',\r\n+          marginBottom: '12px'\r\n+        }}>\r\n+          <div style={{\r\n+            display: 'flex',\r\n+            flexDirection: 'column',\r\n+            gap: '2px'\r\n+          }}>\r\n+            <span style={{\r\n+              fontSize: '1.2rem',\r\n+              fontWeight: '700',\r\n+              color: colors.primary,\r\n+              fontFamily: '\"Montserrat\", sans-serif'\r\n+            }}>\r\n+              KSh {service.price.toLocaleString()}\r\n+            </span>\r\n+            <span style={{\r\n+              fontSize: '0.8rem',\r\n+              color: colors.textBody,\r\n+              fontFamily: '\"Lora\", serif'\r\n+            }}>\r\n+              {service.duration}\r\n+            </span>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Quantity Selector */}\r\n+        {isSelected && quantity > 0 && (\r\n+          <div style={{\r\n+            display: 'flex',\r\n+            alignItems: 'center',\r\n+            gap: '8px',\r\n+            marginTop: '12px',\r\n+            padding: '8px',\r\n+            backgroundColor: colors.primary + '10',\r\n+            borderRadius: '8px'\r\n+          }}>\r\n+            <button\r\n+              onClick={(e) => {\r\n+                e.stopPropagation();\r\n+                handleQuantityChange(quantity - 1);\r\n+              }}\r\n+              style={{\r\n+                width: '32px',\r\n+                height: '32px',\r\n+                border: `1px solid ${colors.primary}`,\r\n+                borderRadius: '6px',\r\n+                backgroundColor: 'transparent',\r\n+                color: colors.primary,\r\n+                cursor: 'pointer',\r\n+                display: 'flex',\r\n+                alignItems: 'center',\r\n+                justifyContent: 'center',\r\n+                fontSize: '16px',\r\n+                fontWeight: 'bold',\r\n+                fontFamily: '\"Montserrat\", sans-serif'\r\n+              }}\r\n+            >\r\n+              -\r\n+            </button>\r\n+            \r\n+            <span style={{\r\n+              minWidth: '24px',\r\n+              textAlign: 'center',\r\n+              fontSize: '14px',\r\n+              fontWeight: '600',\r\n+              color: colors.textHeading,\r\n+              fontFamily: '\"Montserrat\", sans-serif'\r\n+            }}>\r\n+              {quantity}\r\n+            </span>\r\n+            \r\n+            <button\r\n+              onClick={(e) => {\r\n+                e.stopPropagation();\r\n+                handleQuantityChange(quantity + 1);\r\n+              }}\r\n+              style={{\r\n+                width: '32px',\r\n+                height: '32px',\r\n+                border: `1px solid ${colors.primary}`,\r\n+                borderRadius: '6px',\r\n+                backgroundColor: colors.primary,\r\n+                color: '#FFFFFF',\r\n+                cursor: 'pointer',\r\n+                display: 'flex',\r\n+                alignItems: 'center',\r\n+                justifyContent: 'center',\r\n+                fontSize: '16px',\r\n+                fontWeight: 'bold',\r\n+                fontFamily: '\"Montserrat\", sans-serif'\r\n+              }}\r\n+            >\r\n+              +\r\n+            </button>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Action Button */}\r\n         <button\r\n-          onClick={() => onSelect(service.id)}\r\n-          className=\"bg-green-500 text-white px-3 py-1 mt-3 rounded\"\r\n+          onClick={(e) => {\r\n+            e.stopPropagation();\r\n+            handleSelect();\r\n+          }}\r\n+          style={{\r\n+            width: '100%',\r\n+            padding: '10px 16px',\r\n+            border: 'none',\r\n+            borderRadius: '8px',\r\n+            backgroundColor: isSelected ? colors.error : colors.primary,\r\n+            color: '#FFFFFF',\r\n+            cursor: 'pointer',\r\n+            fontSize: '14px',\r\n+            fontWeight: '600',\r\n+            fontFamily: '\"Montserrat\", sans-serif',\r\n+            transition: 'all 0.2s ease',\r\n+            marginTop: '8px'\r\n+          }}\r\n+          onMouseEnter={(e) => {\r\n+            e.currentTarget.style.backgroundColor = isSelected ? '#C0392B' : colors.secondary;\r\n+            e.currentTarget.style.transform = 'translateY(-1px)';\r\n+          }}\r\n+          onMouseLeave={(e) => {\r\n+            e.currentTarget.style.backgroundColor = isSelected ? colors.error : colors.primary;\r\n+            e.currentTarget.style.transform = 'translateY(0)';\r\n+          }}\r\n         >\r\n-          Select\r\n+          {isSelected ? 'Remove from Booking' : 'Add to Booking'}\r\n         </button>\r\n       </div>\r\n-    );\r\n-  }\r\n-  \n+    </div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1757633430977,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\n\r\ninterface ServiceCardProps {\r\n    service: {\r\n      id: number;\r\n      name: string;\r\n      price: number;\r\n      description: string;\r\n    };\r\n    onSelect: (id: number) => void;\r\n  }\r\n  \r\n  export default function ServiceCard({ service, onSelect }: ServiceCardProps) {\r\n    return (\r\n      <div className=\"border rounded-lg p-4 shadow hover:shadow-lg transition\">\r\n        <h3 className=\"text-lg font-bold\">{service.name}</h3>\r\n        <p className=\"text-gray-600 text-sm\">{service.description}</p>\r\n        <p className=\"font-semibold mt-2\">${service.price}</p>\r\n        <button\r\n          onClick={() => onSelect(service.id)}\r\n          className=\"bg-green-500 text-white px-3 py-1 mt-3 rounded\"\r\n        >\r\n          Select\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  "
        }
    ]
}