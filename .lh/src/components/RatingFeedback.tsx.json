{
    "sourceFile": "src/components/RatingFeedback.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1757760755562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757761286846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,4 +173,6 @@\n       </div>\r\n     </div>\r\n   );\r\n }\r\n+\r\n+export default RatingFeedback;\r\n"
                },
                {
                    "date": 1757761500986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n   onClose: () => void;\r\n   onSubmit: (rating: number, feedback: string) => void;\r\n }\r\n \r\n-export default function RatingFeedback({ barberId, barberName, onClose, onSubmit }: RatingFeedbackProps) {\r\n+function RatingFeedback({ barberId, barberName, onClose, onSubmit }: RatingFeedbackProps) {\r\n   const { colors } = useTheme();\r\n   const [rating, setRating] = useState(0);\r\n   const [feedback, setFeedback] = useState('');\r\n   const [hoveredStar, setHoveredStar] = useState(0);\r\n"
                }
            ],
            "date": 1757760755562,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\n\r\ninterface RatingFeedbackProps {\r\n  barberId: string;\r\n  barberName: string;\r\n  onClose: () => void;\r\n  onSubmit: (rating: number, feedback: string) => void;\r\n}\r\n\r\nexport default function RatingFeedback({ barberId, barberName, onClose, onSubmit }: RatingFeedbackProps) {\r\n  const { colors } = useTheme();\r\n  const [rating, setRating] = useState(0);\r\n  const [feedback, setFeedback] = useState('');\r\n  const [hoveredStar, setHoveredStar] = useState(0);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (rating > 0) {\r\n      onSubmit(rating, feedback);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0,0,0,0.5)',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      zIndex: 1000\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: colors.surface,\r\n        padding: '30px',\r\n        borderRadius: '16px',\r\n        maxWidth: '500px',\r\n        width: '90%',\r\n        maxHeight: '80vh',\r\n        overflow: 'auto',\r\n        boxShadow: '0 20px 40px rgba(0,0,0,0.3)'\r\n      }}>\r\n        <h2 style={{\r\n          color: colors.textHeading,\r\n          marginBottom: '20px',\r\n          fontSize: '1.5rem',\r\n          fontWeight: '600',\r\n          textAlign: 'center'\r\n        }}>\r\n          Rate {barberName}\r\n        </h2>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          {/* Star Rating */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <label style={{\r\n              display: 'block',\r\n              marginBottom: '10px',\r\n              color: colors.textHeading,\r\n              fontWeight: '500'\r\n            }}>\r\n              Rating *\r\n            </label>\r\n            <div style={{ display: 'flex', gap: '8px', justifyContent: 'center' }}>\r\n              {[1, 2, 3, 4, 5].map((star) => (\r\n                <button\r\n                  key={star}\r\n                  type=\"button\"\r\n                  onClick={() => setRating(star)}\r\n                  onMouseEnter={() => setHoveredStar(star)}\r\n                  onMouseLeave={() => setHoveredStar(0)}\r\n                  style={{\r\n                    background: 'none',\r\n                    border: 'none',\r\n                    cursor: 'pointer',\r\n                    fontSize: '2rem',\r\n                    color: star <= (hoveredStar || rating) ? '#FFD700' : '#E5E7EB',\r\n                    transition: 'color 0.2s ease'\r\n                  }}\r\n                >\r\n                  â˜…\r\n                </button>\r\n              ))}\r\n            </div>\r\n            <p style={{\r\n              textAlign: 'center',\r\n              color: colors.textBody,\r\n              fontSize: '0.9rem',\r\n              marginTop: '8px'\r\n            }}>\r\n              {rating === 0 && 'Click to rate'}\r\n              {rating === 1 && 'Poor'}\r\n              {rating === 2 && 'Fair'}\r\n              {rating === 3 && 'Good'}\r\n              {rating === 4 && 'Very Good'}\r\n              {rating === 5 && 'Excellent'}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Feedback Text */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <label style={{\r\n              display: 'block',\r\n              marginBottom: '10px',\r\n              color: colors.textHeading,\r\n              fontWeight: '500'\r\n            }}>\r\n              Feedback (Optional)\r\n            </label>\r\n            <textarea\r\n              value={feedback}\r\n              onChange={(e) => setFeedback(e.target.value)}\r\n              placeholder=\"Share your experience with this barber...\"\r\n              style={{\r\n                width: '100%',\r\n                padding: '12px',\r\n                border: `1px solid ${colors.border}`,\r\n                borderRadius: '8px',\r\n                fontSize: '14px',\r\n                fontFamily: '\"Lora\", serif',\r\n                backgroundColor: colors.inputBackground,\r\n                color: colors.textHeading,\r\n                resize: 'vertical',\r\n                minHeight: '100px'\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div style={{ display: 'flex', gap: '12px', justifyContent: 'flex-end' }}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              style={{\r\n                padding: '10px 20px',\r\n                border: `1px solid ${colors.border}`,\r\n                backgroundColor: 'transparent',\r\n                color: colors.textHeading,\r\n                borderRadius: '8px',\r\n                cursor: 'pointer',\r\n                fontSize: '14px',\r\n                fontWeight: '500',\r\n                transition: 'all 0.2s ease'\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={rating === 0}\r\n              style={{\r\n                padding: '10px 20px',\r\n                border: 'none',\r\n                backgroundColor: rating === 0 ? colors.border : colors.primary,\r\n                color: 'white',\r\n                borderRadius: '8px',\r\n                cursor: rating === 0 ? 'not-allowed' : 'pointer',\r\n                fontSize: '14px',\r\n                fontWeight: '500',\r\n                transition: 'all 0.2s ease',\r\n                opacity: rating === 0 ? 0.5 : 1\r\n              }}\r\n            >\r\n              Submit Rating\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
        }
    ]
}