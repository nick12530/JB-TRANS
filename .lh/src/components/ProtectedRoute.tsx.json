{
    "sourceFile": "src/components/ProtectedRoute.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1757673733571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757674868845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,16 @@\n   if (!user) {\r\n     return <Navigate to=\"/login\" replace />;\r\n   }\r\n \r\n-  const userData = JSON.parse(user);\r\n+  let userData;\r\n+  try {\r\n+    userData = JSON.parse(user);\r\n+  } catch (error) {\r\n+    console.error('Error parsing user data from localStorage:', error);\r\n+    localStorage.removeItem('user');\r\n+    return <Navigate to=\"/login\" replace />;\r\n+  }\r\n   \r\n   if (requiredRole && userData.role !== requiredRole) {\r\n     return <Navigate to=\"/\" replace />;\r\n   }\r\n"
                },
                {
                    "date": 1757674962575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,19 @@\n import React from 'react';\r\n import { Navigate } from 'react-router-dom';\r\n+import { safeGetItem } from '../utils/localStorage';\r\n \r\n interface ProtectedRouteProps {\r\n   children: React.ReactNode;\r\n   requiredRole?: 'admin' | 'barber' | 'customer';\r\n }\r\n \r\n export default function ProtectedRoute({ children, requiredRole }: ProtectedRouteProps) {\r\n-  const user = localStorage.getItem('user');\r\n+  const userData = safeGetItem('user');\r\n   \r\n-  if (!user) {\r\n+  if (!userData) {\r\n     return <Navigate to=\"/login\" replace />;\r\n   }\r\n-\r\n-  let userData;\r\n-  try {\r\n-    userData = JSON.parse(user);\r\n-  } catch (error) {\r\n-    console.error('Error parsing user data from localStorage:', error);\r\n-    localStorage.removeItem('user');\r\n-    return <Navigate to=\"/login\" replace />;\r\n-  }\r\n   \r\n   if (requiredRole && userData.role !== requiredRole) {\r\n     return <Navigate to=\"/\" replace />;\r\n   }\r\n"
                },
                {
                    "date": 1759566042620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,17 @@\n import React from 'react';\r\n import { Navigate } from 'react-router-dom';\r\n-import { safeGetItem } from '../utils/localStorage';\r\n+import { useApp } from '../context/AppContext';\r\n \r\n interface ProtectedRouteProps {\r\n   children: React.ReactNode;\r\n-  requiredRole?: 'admin' | 'barber' | 'customer';\r\n }\r\n \r\n-export default function ProtectedRoute({ children, requiredRole }: ProtectedRouteProps) {\r\n-  const userData = safeGetItem('user');\r\n-  \r\n-  if (!userData) {\r\n-    return <Navigate to=\"/login\" replace />;\r\n-  }\r\n-  \r\n-  if (requiredRole && userData.role !== requiredRole) {\r\n-    return <Navigate to=\"/\" replace />;\r\n-  }\r\n+export const ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\r\n+  const { isAuthenticated } = useApp();\r\n \r\n-  if (userData.role === 'barber' && !userData.isApproved) {\r\n+  if (!isAuthenticated) {\r\n     return <Navigate to=\"/login\" replace />;\r\n   }\r\n \r\n   return <>{children}</>;\r\n-}\r\n+};\r\n"
                }
            ],
            "date": 1757673733571,
            "name": "Commit-0",
            "content": "import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  requiredRole?: 'admin' | 'barber' | 'customer';\r\n}\r\n\r\nexport default function ProtectedRoute({ children, requiredRole }: ProtectedRouteProps) {\r\n  const user = localStorage.getItem('user');\r\n  \r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  const userData = JSON.parse(user);\r\n  \r\n  if (requiredRole && userData.role !== requiredRole) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  if (userData.role === 'barber' && !userData.isApproved) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n}\r\n"
        }
    ]
}