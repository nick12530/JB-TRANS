{
    "sourceFile": "src/components/Modal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1759566797900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759917612027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,26 @@\n import React from 'react';\r\n-import { X } from 'lucide-react';\r\n+import { X, AlertCircle, Info, CheckCircle, Settings } from 'lucide-react';\r\n import { clsx } from 'clsx';\r\n \r\n interface ModalProps {\r\n   isOpen: boolean;\r\n   onClose: () => void;\r\n   title: string;\r\n   children: React.ReactNode;\r\n   size?: 'sm' | 'md' | 'lg' | 'xl';\r\n+  type?: 'default' | 'success' | 'warning' | 'error' | 'info';\r\n+  icon?: React.ReactNode;\r\n }\r\n \r\n export const Modal: React.FC<ModalProps> = ({\r\n   isOpen,\r\n   onClose,\r\n   title,\r\n   children,\r\n   size = 'md',\r\n+  type = 'default',\r\n+  icon,\r\n }) => {\r\n   if (!isOpen) return null;\r\n \r\n   const sizeClasses = {\r\n@@ -25,13 +29,57 @@\n     lg: 'max-w-2xl',\r\n     xl: 'max-w-4xl',\r\n   };\r\n \r\n+  const typeStyles = {\r\n+    default: {\r\n+      headerBg: 'bg-gradient-to-r from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-900',\r\n+      borderColor: 'border-gray-200 dark:border-gray-700',\r\n+      iconColor: 'text-gray-600 dark:text-gray-400',\r\n+      titleColor: 'text-gray-900 dark:text-gray-100',\r\n+    },\r\n+    success: {\r\n+      headerBg: 'bg-gradient-to-r from-emerald-50 to-emerald-100 dark:from-emerald-900/20 dark:to-emerald-800/20',\r\n+      borderColor: 'border-emerald-200 dark:border-emerald-700',\r\n+      iconColor: 'text-emerald-600 dark:text-emerald-400',\r\n+      titleColor: 'text-emerald-900 dark:text-emerald-100',\r\n+    },\r\n+    warning: {\r\n+      headerBg: 'bg-gradient-to-r from-yellow-50 to-yellow-100 dark:from-yellow-900/20 dark:to-yellow-800/20',\r\n+      borderColor: 'border-yellow-200 dark:border-yellow-700',\r\n+      iconColor: 'text-yellow-600 dark:text-yellow-400',\r\n+      titleColor: 'text-yellow-900 dark:text-yellow-100',\r\n+    },\r\n+    error: {\r\n+      headerBg: 'bg-gradient-to-r from-red-50 to-red-100 dark:from-red-900/20 dark:to-red-800/20',\r\n+      borderColor: 'border-red-200 dark:border-red-700',\r\n+      iconColor: 'text-red-600 dark:text-red-400',\r\n+      titleColor: 'text-red-900 dark:text-red-100',\r\n+    },\r\n+    info: {\r\n+      headerBg: 'bg-gradient-to-r from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20',\r\n+      borderColor: 'border-blue-200 dark:border-blue-700',\r\n+      iconColor: 'text-blue-600 dark:text-blue-400',\r\n+      titleColor: 'text-blue-900 dark:text-blue-100',\r\n+    },\r\n+  };\r\n+\r\n+  const defaultIcon = {\r\n+    default: <Settings className=\"h-6 w-6\" />,\r\n+    success: <CheckCircle className=\"h-6 w-6\" />,\r\n+    warning: <AlertCircle className=\"h-6 w-6\" />,\r\n+    error: <AlertCircle className=\"h-6 w-6\" />,\r\n+    info: <Info className=\"h-6 w-6\" />,\r\n+  };\r\n+\r\n+  const currentType = typeStyles[type];\r\n+  const displayIcon = icon || defaultIcon[type];\r\n+\r\n   return (\r\n     <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n       <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n         <div\r\n-          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\r\n+          className=\"fixed inset-0 bg-gray-900/50 backdrop-blur-sm transition-opacity\"\r\n           onClick={onClose}\r\n         ></div>\r\n \r\n         <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\r\n@@ -39,22 +87,35 @@\n         </span>\r\n \r\n         <div\r\n           className={clsx(\r\n-            'relative inline-block align-bottom bg-white dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle w-full',\r\n-            sizeClasses[size]\r\n+            'relative inline-block align-bottom bg-white dark:bg-gray-800 rounded-xl text-left overflow-hidden shadow-2xl transform transition-all sm:my-8 sm:align-middle w-full border-2',\r\n+            sizeClasses[size],\r\n+            currentType.borderColor\r\n           )}\r\n         >\r\n-          <div className=\"bg-white dark:bg-gray-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n-            <div className=\"flex items-center justify-between mb-4\">\r\n-              <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100\">{title}</h3>\r\n+          {/* Enhanced Header */}\r\n+          <div className={clsx('px-6 py-4 border-b', currentType.headerBg, currentType.borderColor)}>\r\n+            <div className=\"flex items-center justify-between\">\r\n+              <div className=\"flex items-center gap-3\">\r\n+                <div className={`p-2 rounded-lg ${currentType.iconColor} bg-white/50 dark:bg-gray-800/50`}>\r\n+                  {displayIcon}\r\n+                </div>\r\n+                <h3 className={clsx('text-xl font-bold', currentType.titleColor)}>\r\n+                  {title}\r\n+                </h3>\r\n+              </div>\r\n               <button\r\n                 onClick={onClose}\r\n-                className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n+                className=\"p-2 hover:bg-white/20 dark:hover:bg-gray-700/50 rounded-lg transition-colors group\"\r\n               >\r\n-                <X className=\"h-5 w-5 text-gray-500\" />\r\n+                <X className=\"h-5 w-5 text-gray-500 group-hover:text-gray-700 dark:group-hover:text-gray-300\" />\r\n               </button>\r\n             </div>\r\n+          </div>\r\n+\r\n+          {/* Enhanced Content */}\r\n+          <div className=\"bg-white dark:bg-gray-800 px-6 py-6\">\r\n             {children}\r\n           </div>\r\n         </div>\r\n       </div>\r\n"
                }
            ],
            "date": 1759566797900,
            "name": "Commit-0",
            "content": "import React from 'react';\r\nimport { X } from 'lucide-react';\r\nimport { clsx } from 'clsx';\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  title: string;\r\n  children: React.ReactNode;\r\n  size?: 'sm' | 'md' | 'lg' | 'xl';\r\n}\r\n\r\nexport const Modal: React.FC<ModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  title,\r\n  children,\r\n  size = 'md',\r\n}) => {\r\n  if (!isOpen) return null;\r\n\r\n  const sizeClasses = {\r\n    sm: 'max-w-md',\r\n    md: 'max-w-lg',\r\n    lg: 'max-w-2xl',\r\n    xl: 'max-w-4xl',\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n      <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n        <div\r\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\r\n          onClick={onClose}\r\n        ></div>\r\n\r\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\r\n          &#8203;\r\n        </span>\r\n\r\n        <div\r\n          className={clsx(\r\n            'relative inline-block align-bottom bg-white dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle w-full',\r\n            sizeClasses[size]\r\n          )}\r\n        >\r\n          <div className=\"bg-white dark:bg-gray-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100\">{title}</h3>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n              >\r\n                <X className=\"h-5 w-5 text-gray-500\" />\r\n              </button>\r\n            </div>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"
        }
    ]
}