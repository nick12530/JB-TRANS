{
    "sourceFile": "src/contexts/ThemeContext.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1757640313464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757643982351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,20 +23,21 @@\n \r\n const lightTheme = {\r\n   background: '#F5F0E6',\r\n   surface: '#FAFAFA',\r\n-  primary: '#C14432',\r\n-  secondary: '#6B8E23',\r\n-  textHeading: '#3B2F2F',\r\n-  textBody: '#A9A9A9',\r\n-  border: '#C14432',\r\n-  cardBackground: '#FAFAFA',\r\n-  inputBackground: '#FAFAFA',\r\n-  buttonPrimary: '#C14432',\r\n-  buttonSecondary: '#6B8E23',\r\n-  success: '#6B8E23',\r\n-  error: '#C14432',\r\n-  warning: '#F59E0B',\r\n+  primary: '#17A589', // Teal primary\r\n+  secondary: '#138D75', // Darker teal\r\n+  textHeading: '#2C3E50',\r\n+  textBody: '#5D6D7E',\r\n+  border: '#BDC3C7',\r\n+  cardBackground: '#FFFFFF',\r\n+  inputBackground: '#FFFFFF',\r\n+  buttonPrimary: '#17A589',\r\n+  buttonSecondary: '#138D75',\r\n+  success: '#17A589',\r\n+  error: '#E74C3C',\r\n+  warning: '#F39C12',\r\n+  info: '#3498DB',\r\n };\r\n \r\n const darkTheme = {\r\n   background: '#1a1a1a',\r\n"
                },
                {
                    "date": 1757643991275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,20 +41,21 @@\n \r\n const darkTheme = {\r\n   background: '#1a1a1a',\r\n   surface: '#2d2d2d',\r\n-  primary: '#ff6b47',\r\n-  secondary: '#8bc34a',\r\n+  primary: '#20C997', // Teal for dark mode\r\n+  secondary: '#17A589',\r\n   textHeading: '#ffffff',\r\n   textBody: '#b0b0b0',\r\n-  border: '#ff6b47',\r\n+  border: '#495057',\r\n   cardBackground: '#2d2d2d',\r\n   inputBackground: '#3d3d3d',\r\n-  buttonPrimary: '#ff6b47',\r\n-  buttonSecondary: '#8bc34a',\r\n-  success: '#8bc34a',\r\n-  error: '#ff6b47',\r\n-  warning: '#ffa726',\r\n+  buttonPrimary: '#20C997',\r\n+  buttonSecondary: '#17A589',\r\n+  success: '#20C997',\r\n+  error: '#E74C3C',\r\n+  warning: '#F39C12',\r\n+  info: '#3498DB',\r\n };\r\n \r\n const ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n \r\n"
                },
                {
                    "date": 1757676091151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { createContext, useContext, useState, useEffect } from 'react';\r\n+import { safeGetItem, safeSetItem } from '../utils/localStorage';\r\n \r\n interface ThemeContextType {\r\n   isDarkMode: boolean;\r\n   toggleDarkMode: () => void;\r\n@@ -68,21 +69,23 @@\n };\r\n \r\n export const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n   const [isDarkMode, setIsDarkMode] = useState(() => {\r\n-    const saved = localStorage.getItem('darkMode');\r\n-    return saved ? JSON.parse(saved) : false;\r\n+    const saved = safeGetItem('darkMode');\r\n+    return saved !== null ? saved : false;\r\n   });\r\n \r\n   useEffect(() => {\r\n-    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\r\n+    safeSetItem('darkMode', isDarkMode);\r\n   }, [isDarkMode]);\r\n \r\n   const toggleDarkMode = () => {\r\n     setIsDarkMode(!isDarkMode);\r\n   };\r\n \r\n   const colors = isDarkMode ? darkTheme : lightTheme;\r\n+  \r\n+  console.log('ThemeProvider rendering', { isDarkMode, colors });\r\n \r\n   return (\r\n     <ThemeContext.Provider value={{ isDarkMode, toggleDarkMode, colors }}>\r\n       {children}\r\n"
                },
                {
                    "date": 1757753565192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,38 +22,38 @@\n   };\r\n }\r\n \r\n const lightTheme = {\r\n-  background: '#F5F0E6',\r\n-  surface: '#FAFAFA',\r\n-  primary: '#17A589', // Teal primary\r\n-  secondary: '#138D75', // Darker teal\r\n+  background: '#F8F9FA',\r\n+  surface: '#FFFFFF',\r\n+  primary: '#2C3E50', // Professional dark blue-gray\r\n+  secondary: '#34495E', // Slightly lighter blue-gray\r\n   textHeading: '#2C3E50',\r\n   textBody: '#5D6D7E',\r\n-  border: '#BDC3C7',\r\n+  border: '#E5E7EB',\r\n   cardBackground: '#FFFFFF',\r\n   inputBackground: '#FFFFFF',\r\n-  buttonPrimary: '#17A589',\r\n-  buttonSecondary: '#138D75',\r\n-  success: '#17A589',\r\n+  buttonPrimary: '#2C3E50',\r\n+  buttonSecondary: '#34495E',\r\n+  success: '#27AE60',\r\n   error: '#E74C3C',\r\n   warning: '#F39C12',\r\n   info: '#3498DB',\r\n };\r\n \r\n const darkTheme = {\r\n-  background: '#1a1a1a',\r\n-  surface: '#2d2d2d',\r\n-  primary: '#20C997', // Teal for dark mode\r\n-  secondary: '#17A589',\r\n-  textHeading: '#ffffff',\r\n-  textBody: '#b0b0b0',\r\n-  border: '#495057',\r\n-  cardBackground: '#2d2d2d',\r\n-  inputBackground: '#3d3d3d',\r\n-  buttonPrimary: '#20C997',\r\n-  buttonSecondary: '#17A589',\r\n-  success: '#20C997',\r\n+  background: '#1A1A1A',\r\n+  surface: '#2D2D2D',\r\n+  primary: '#E8E8E8', // Light gray for dark mode\r\n+  secondary: '#B0B0B0', // Medium gray\r\n+  textHeading: '#FFFFFF',\r\n+  textBody: '#B0B0B0',\r\n+  border: '#404040',\r\n+  cardBackground: '#2D2D2D',\r\n+  inputBackground: '#3D3D3D',\r\n+  buttonPrimary: '#E8E8E8',\r\n+  buttonSecondary: '#B0B0B0',\r\n+  success: '#27AE60',\r\n   error: '#E74C3C',\r\n   warning: '#F39C12',\r\n   info: '#3498DB',\r\n };\r\n"
                },
                {
                    "date": 1757754603585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,41 +22,41 @@\n   };\r\n }\r\n \r\n const lightTheme = {\r\n-  background: '#F8F9FA',\r\n+  background: '#FFFFFF',\r\n   surface: '#FFFFFF',\r\n-  primary: '#2C3E50', // Professional dark blue-gray\r\n-  secondary: '#34495E', // Slightly lighter blue-gray\r\n-  textHeading: '#2C3E50',\r\n-  textBody: '#5D6D7E',\r\n+  primary: '#2563EB', // Professional blue\r\n+  secondary: '#2563EB', // Same blue for consistency\r\n+  textHeading: '#000000',\r\n+  textBody: '#374151',\r\n   border: '#E5E7EB',\r\n   cardBackground: '#FFFFFF',\r\n   inputBackground: '#FFFFFF',\r\n-  buttonPrimary: '#2C3E50',\r\n-  buttonSecondary: '#34495E',\r\n-  success: '#27AE60',\r\n-  error: '#E74C3C',\r\n-  warning: '#F39C12',\r\n-  info: '#3498DB',\r\n+  buttonPrimary: '#2563EB',\r\n+  buttonSecondary: '#2563EB',\r\n+  success: '#2563EB',\r\n+  error: '#DC2626',\r\n+  warning: '#D97706',\r\n+  info: '#2563EB',\r\n };\r\n \r\n const darkTheme = {\r\n-  background: '#1A1A1A',\r\n-  surface: '#2D2D2D',\r\n-  primary: '#E8E8E8', // Light gray for dark mode\r\n-  secondary: '#B0B0B0', // Medium gray\r\n+  background: '#000000',\r\n+  surface: '#1F1F1F',\r\n+  primary: '#3B82F6', // Slightly lighter blue for dark mode\r\n+  secondary: '#3B82F6', // Same blue for consistency\r\n   textHeading: '#FFFFFF',\r\n-  textBody: '#B0B0B0',\r\n-  border: '#404040',\r\n-  cardBackground: '#2D2D2D',\r\n-  inputBackground: '#3D3D3D',\r\n-  buttonPrimary: '#E8E8E8',\r\n-  buttonSecondary: '#B0B0B0',\r\n-  success: '#27AE60',\r\n-  error: '#E74C3C',\r\n-  warning: '#F39C12',\r\n-  info: '#3498DB',\r\n+  textBody: '#D1D5DB',\r\n+  border: '#374151',\r\n+  cardBackground: '#1F1F1F',\r\n+  inputBackground: '#1F1F1F',\r\n+  buttonPrimary: '#3B82F6',\r\n+  buttonSecondary: '#3B82F6',\r\n+  success: '#3B82F6',\r\n+  error: '#EF4444',\r\n+  warning: '#F59E0B',\r\n+  info: '#3B82F6',\r\n };\r\n \r\n const ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n \r\n"
                }
            ],
            "date": 1757640313464,
            "name": "Commit-0",
            "content": "import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\ninterface ThemeContextType {\r\n  isDarkMode: boolean;\r\n  toggleDarkMode: () => void;\r\n  colors: {\r\n    background: string;\r\n    surface: string;\r\n    primary: string;\r\n    secondary: string;\r\n    textHeading: string;\r\n    textBody: string;\r\n    border: string;\r\n    cardBackground: string;\r\n    inputBackground: string;\r\n    buttonPrimary: string;\r\n    buttonSecondary: string;\r\n    success: string;\r\n    error: string;\r\n    warning: string;\r\n  };\r\n}\r\n\r\nconst lightTheme = {\r\n  background: '#F5F0E6',\r\n  surface: '#FAFAFA',\r\n  primary: '#C14432',\r\n  secondary: '#6B8E23',\r\n  textHeading: '#3B2F2F',\r\n  textBody: '#A9A9A9',\r\n  border: '#C14432',\r\n  cardBackground: '#FAFAFA',\r\n  inputBackground: '#FAFAFA',\r\n  buttonPrimary: '#C14432',\r\n  buttonSecondary: '#6B8E23',\r\n  success: '#6B8E23',\r\n  error: '#C14432',\r\n  warning: '#F59E0B',\r\n};\r\n\r\nconst darkTheme = {\r\n  background: '#1a1a1a',\r\n  surface: '#2d2d2d',\r\n  primary: '#ff6b47',\r\n  secondary: '#8bc34a',\r\n  textHeading: '#ffffff',\r\n  textBody: '#b0b0b0',\r\n  border: '#ff6b47',\r\n  cardBackground: '#2d2d2d',\r\n  inputBackground: '#3d3d3d',\r\n  buttonPrimary: '#ff6b47',\r\n  buttonSecondary: '#8bc34a',\r\n  success: '#8bc34a',\r\n  error: '#ff6b47',\r\n  warning: '#ffa726',\r\n};\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const saved = localStorage.getItem('darkMode');\r\n    return saved ? JSON.parse(saved) : false;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\r\n  }, [isDarkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  const colors = isDarkMode ? darkTheme : lightTheme;\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleDarkMode, colors }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"
        }
    ]
}